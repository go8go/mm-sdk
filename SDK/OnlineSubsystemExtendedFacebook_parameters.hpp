#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemExtendedFacebook

#include "Basic.hpp"

#include "OnlineSubsystemExtendedFacebook_structs.hpp"


namespace SDK::Params
{

// Function OnlineSubsystemExtendedFacebook.AppInvite.AppInvite
// 0x0028 (0x0028 - 0x0000)
struct AppInvite_AppInvite final
{
public:
	class FString                                 AppLinkURL;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PreviewImageURL;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAppInvite*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppInvite_AppInvite) == 0x000008, "Wrong alignment on AppInvite_AppInvite");
static_assert(sizeof(AppInvite_AppInvite) == 0x000028, "Wrong size on AppInvite_AppInvite");
static_assert(offsetof(AppInvite_AppInvite, AppLinkURL) == 0x000000, "Member 'AppInvite_AppInvite::AppLinkURL' has a wrong offset!");
static_assert(offsetof(AppInvite_AppInvite, PreviewImageURL) == 0x000010, "Member 'AppInvite_AppInvite::PreviewImageURL' has a wrong offset!");
static_assert(offsetof(AppInvite_AppInvite, ReturnValue) == 0x000020, "Member 'AppInvite_AppInvite::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.FacebookLogin.FacebookLogin
// 0x0008 (0x0008 - 0x0000)
struct FacebookLogin_FacebookLogin final
{
public:
	class UFacebookLogin*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FacebookLogin_FacebookLogin) == 0x000008, "Wrong alignment on FacebookLogin_FacebookLogin");
static_assert(sizeof(FacebookLogin_FacebookLogin) == 0x000008, "Wrong size on FacebookLogin_FacebookLogin");
static_assert(offsetof(FacebookLogin_FacebookLogin, ReturnValue) == 0x000000, "Member 'FacebookLogin_FacebookLogin::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.FacebookLogout.FacebookLogout
// 0x0008 (0x0008 - 0x0000)
struct FacebookLogout_FacebookLogout final
{
public:
	class UFacebookLogout*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FacebookLogout_FacebookLogout) == 0x000008, "Wrong alignment on FacebookLogout_FacebookLogout");
static_assert(sizeof(FacebookLogout_FacebookLogout) == 0x000008, "Wrong size on FacebookLogout_FacebookLogout");
static_assert(offsetof(FacebookLogout_FacebookLogout, ReturnValue) == 0x000000, "Member 'FacebookLogout_FacebookLogout::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.FacebookQueryUserInfo.FacebookQueryUserInfo
// 0x0018 (0x0018 - 0x0000)
struct FacebookQueryUserInfo_FacebookQueryUserInfo final
{
public:
	class FString                                 UserID;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFacebookQueryUserInfo*                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FacebookQueryUserInfo_FacebookQueryUserInfo) == 0x000008, "Wrong alignment on FacebookQueryUserInfo_FacebookQueryUserInfo");
static_assert(sizeof(FacebookQueryUserInfo_FacebookQueryUserInfo) == 0x000018, "Wrong size on FacebookQueryUserInfo_FacebookQueryUserInfo");
static_assert(offsetof(FacebookQueryUserInfo_FacebookQueryUserInfo, UserID) == 0x000000, "Member 'FacebookQueryUserInfo_FacebookQueryUserInfo::UserID' has a wrong offset!");
static_assert(offsetof(FacebookQueryUserInfo_FacebookQueryUserInfo, ReturnValue) == 0x000010, "Member 'FacebookQueryUserInfo_FacebookQueryUserInfo::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.InviteFriends.InviteFriends
// 0x0018 (0x0018 - 0x0000)
struct InviteFriends_InviteFriends final
{
public:
	TArray<class FString>                         FriendsIds;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UInviteFriends*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InviteFriends_InviteFriends) == 0x000008, "Wrong alignment on InviteFriends_InviteFriends");
static_assert(sizeof(InviteFriends_InviteFriends) == 0x000018, "Wrong size on InviteFriends_InviteFriends");
static_assert(offsetof(InviteFriends_InviteFriends, FriendsIds) == 0x000000, "Member 'InviteFriends_InviteFriends::FriendsIds' has a wrong offset!");
static_assert(offsetof(InviteFriends_InviteFriends, ReturnValue) == 0x000010, "Member 'InviteFriends_InviteFriends::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.ChangeActiveWidget
// 0x0008 (0x0008 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_ChangeActiveWidget final
{
public:
	class UCanvasPanel*                           ActiveWidget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_ChangeActiveWidget) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_ChangeActiveWidget");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_ChangeActiveWidget) == 0x000008, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_ChangeActiveWidget");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_ChangeActiveWidget, ActiveWidget) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_ChangeActiveWidget::ActiveWidget' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.CheckIfPlayerLoggedIn
// 0x0001 (0x0001 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_CheckIfPlayerLoggedIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_CheckIfPlayerLoggedIn) == 0x000001, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_CheckIfPlayerLoggedIn");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_CheckIfPlayerLoggedIn) == 0x000001, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_CheckIfPlayerLoggedIn");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_CheckIfPlayerLoggedIn, ReturnValue) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_CheckIfPlayerLoggedIn::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetAccessToken
// 0x0010 (0x0010 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAccessToken final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAccessToken) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAccessToken");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAccessToken) == 0x000010, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAccessToken");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAccessToken, ReturnValue) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAccessToken::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetAllCachedFacebookAchievements
// 0x0018 (0x0018 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements final
{
public:
	TArray<struct FFacebookAchievement>           Achievements;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements) == 0x000018, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements, Achievements) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements::Achievements' has a wrong offset!");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements, ReturnValue) == 0x000010, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetAllCachedFacebookFriends
// 0x0018 (0x0018 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends final
{
public:
	TArray<struct FFacebookFriend>                Friends;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends) == 0x000018, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends, Friends) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends::Friends' has a wrong offset!");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends, ReturnValue) == 0x000010, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetAllCachedFacebookUsersInfo
// 0x0018 (0x0018 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo final
{
public:
	TArray<struct FFacebookProfile>               Users;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo) == 0x000018, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo, Users) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo::Users' has a wrong offset!");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo, ReturnValue) == 0x000010, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetCachedFacebookFriend
// 0x0040 (0x0040 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend final
{
public:
	class FString                                 FriendId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFacebookFriend                        ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend) == 0x000040, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend, FriendId) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend::FriendId' has a wrong offset!");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend, ReturnValue) == 0x000010, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetCachedFacebookUserInfo
// 0x00D0 (0x00D0 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo final
{
public:
	class FString                                 UserID;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFacebookProfile                       ReturnValue;                                       // 0x0010(0x00C0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo) == 0x0000D0, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo, UserID) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo::UserID' has a wrong offset!");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo, ReturnValue) == 0x000010, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetUserId
// 0x0010 (0x0010 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUserId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUserId) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUserId");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUserId) == 0x000010, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUserId");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUserId, ReturnValue) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUserId::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetUsername
// 0x0010 (0x0010 - 0x0000)
struct OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUsername final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUsername) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUsername");
static_assert(sizeof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUsername) == 0x000010, "Wrong size on OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUsername");
static_assert(offsetof(OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUsername, ReturnValue) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUsername::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWebBrowser.LoadURL
// 0x0010 (0x0010 - 0x0000)
struct OnlineSubsystemExtendedFacebookWebBrowser_LoadURL final
{
public:
	class FString                                 NewURL;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookWebBrowser_LoadURL) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookWebBrowser_LoadURL");
static_assert(sizeof(OnlineSubsystemExtendedFacebookWebBrowser_LoadURL) == 0x000010, "Wrong size on OnlineSubsystemExtendedFacebookWebBrowser_LoadURL");
static_assert(offsetof(OnlineSubsystemExtendedFacebookWebBrowser_LoadURL, NewURL) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookWebBrowser_LoadURL::NewURL' has a wrong offset!");

// DelegateFunction OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWebBrowser.OnUrlChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct OnlineSubsystemExtendedFacebookWebBrowser_OnUrlChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookWebBrowser_OnUrlChanged__DelegateSignature) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookWebBrowser_OnUrlChanged__DelegateSignature");
static_assert(sizeof(OnlineSubsystemExtendedFacebookWebBrowser_OnUrlChanged__DelegateSignature) == 0x000018, "Wrong size on OnlineSubsystemExtendedFacebookWebBrowser_OnUrlChanged__DelegateSignature");
static_assert(offsetof(OnlineSubsystemExtendedFacebookWebBrowser_OnUrlChanged__DelegateSignature, Text) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookWebBrowser_OnUrlChanged__DelegateSignature::Text' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWidget.EnableCustomStyle
// 0x0001 (0x0001 - 0x0000)
struct OnlineSubsystemExtendedFacebookWidget_EnableCustomStyle final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookWidget_EnableCustomStyle) == 0x000001, "Wrong alignment on OnlineSubsystemExtendedFacebookWidget_EnableCustomStyle");
static_assert(sizeof(OnlineSubsystemExtendedFacebookWidget_EnableCustomStyle) == 0x000001, "Wrong size on OnlineSubsystemExtendedFacebookWidget_EnableCustomStyle");
static_assert(offsetof(OnlineSubsystemExtendedFacebookWidget_EnableCustomStyle, bEnable) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookWidget_EnableCustomStyle::bEnable' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWidget.HandleOnUrlChanged
// 0x0018 (0x0018 - 0x0000)
struct OnlineSubsystemExtendedFacebookWidget_HandleOnUrlChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemExtendedFacebookWidget_HandleOnUrlChanged) == 0x000008, "Wrong alignment on OnlineSubsystemExtendedFacebookWidget_HandleOnUrlChanged");
static_assert(sizeof(OnlineSubsystemExtendedFacebookWidget_HandleOnUrlChanged) == 0x000018, "Wrong size on OnlineSubsystemExtendedFacebookWidget_HandleOnUrlChanged");
static_assert(offsetof(OnlineSubsystemExtendedFacebookWidget_HandleOnUrlChanged, Text) == 0x000000, "Member 'OnlineSubsystemExtendedFacebookWidget_HandleOnUrlChanged::Text' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.OpenGraphPost.OpenGraphPost
// 0x0030 (0x0030 - 0x0000)
struct OpenGraphPost_OpenGraphPost final
{
public:
	class FString                                 GraphPath;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFacebookOpenGraphParameter>    OpenGraphParameters;                               // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ShareOnTimeline;                                   // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOpenGraphPost*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OpenGraphPost_OpenGraphPost) == 0x000008, "Wrong alignment on OpenGraphPost_OpenGraphPost");
static_assert(sizeof(OpenGraphPost_OpenGraphPost) == 0x000030, "Wrong size on OpenGraphPost_OpenGraphPost");
static_assert(offsetof(OpenGraphPost_OpenGraphPost, GraphPath) == 0x000000, "Member 'OpenGraphPost_OpenGraphPost::GraphPath' has a wrong offset!");
static_assert(offsetof(OpenGraphPost_OpenGraphPost, OpenGraphParameters) == 0x000010, "Member 'OpenGraphPost_OpenGraphPost::OpenGraphParameters' has a wrong offset!");
static_assert(offsetof(OpenGraphPost_OpenGraphPost, ShareOnTimeline) == 0x000020, "Member 'OpenGraphPost_OpenGraphPost::ShareOnTimeline' has a wrong offset!");
static_assert(offsetof(OpenGraphPost_OpenGraphPost, ReturnValue) == 0x000028, "Member 'OpenGraphPost_OpenGraphPost::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.QueryAchievements.QueryAchievements
// 0x0008 (0x0008 - 0x0000)
struct QueryAchievements_QueryAchievements final
{
public:
	class UQueryAchievements*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QueryAchievements_QueryAchievements) == 0x000008, "Wrong alignment on QueryAchievements_QueryAchievements");
static_assert(sizeof(QueryAchievements_QueryAchievements) == 0x000008, "Wrong size on QueryAchievements_QueryAchievements");
static_assert(offsetof(QueryAchievements_QueryAchievements, ReturnValue) == 0x000000, "Member 'QueryAchievements_QueryAchievements::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.QueryFriends.QueryFriends
// 0x0008 (0x0008 - 0x0000)
struct QueryFriends_QueryFriends final
{
public:
	class UQueryFriends*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QueryFriends_QueryFriends) == 0x000008, "Wrong alignment on QueryFriends_QueryFriends");
static_assert(sizeof(QueryFriends_QueryFriends) == 0x000008, "Wrong size on QueryFriends_QueryFriends");
static_assert(offsetof(QueryFriends_QueryFriends, ReturnValue) == 0x000000, "Member 'QueryFriends_QueryFriends::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.QueryInvitableFriends.QueryInvitableFriends
// 0x0010 (0x0010 - 0x0000)
struct QueryInvitableFriends_QueryInvitableFriends final
{
public:
	int32                                         Limit;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQueryInvitableFriends*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QueryInvitableFriends_QueryInvitableFriends) == 0x000008, "Wrong alignment on QueryInvitableFriends_QueryInvitableFriends");
static_assert(sizeof(QueryInvitableFriends_QueryInvitableFriends) == 0x000010, "Wrong size on QueryInvitableFriends_QueryInvitableFriends");
static_assert(offsetof(QueryInvitableFriends_QueryInvitableFriends, Limit) == 0x000000, "Member 'QueryInvitableFriends_QueryInvitableFriends::Limit' has a wrong offset!");
static_assert(offsetof(QueryInvitableFriends_QueryInvitableFriends, ReturnValue) == 0x000008, "Member 'QueryInvitableFriends_QueryInvitableFriends::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.ReadLeaderboard.ReadLeaderboard
// 0x0010 (0x0010 - 0x0000)
struct ReadLeaderboard_ReadLeaderboard final
{
public:
	bool                                          ReadOnlyMe;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UReadLeaderboard*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ReadLeaderboard_ReadLeaderboard) == 0x000008, "Wrong alignment on ReadLeaderboard_ReadLeaderboard");
static_assert(sizeof(ReadLeaderboard_ReadLeaderboard) == 0x000010, "Wrong size on ReadLeaderboard_ReadLeaderboard");
static_assert(offsetof(ReadLeaderboard_ReadLeaderboard, ReadOnlyMe) == 0x000000, "Member 'ReadLeaderboard_ReadLeaderboard::ReadOnlyMe' has a wrong offset!");
static_assert(offsetof(ReadLeaderboard_ReadLeaderboard, ReturnValue) == 0x000008, "Member 'ReadLeaderboard_ReadLeaderboard::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.RequestNewPublishPermissions.RequestNewPublishPermissions
// 0x0020 (0x0020 - 0x0000)
struct RequestNewPublishPermissions_RequestNewPublishPermissions final
{
public:
	TArray<class FString>                         PermissionsSet;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EPermissionsPrivacy                           PermissionsPrivacy;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URequestNewPublishPermissions*          ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RequestNewPublishPermissions_RequestNewPublishPermissions) == 0x000008, "Wrong alignment on RequestNewPublishPermissions_RequestNewPublishPermissions");
static_assert(sizeof(RequestNewPublishPermissions_RequestNewPublishPermissions) == 0x000020, "Wrong size on RequestNewPublishPermissions_RequestNewPublishPermissions");
static_assert(offsetof(RequestNewPublishPermissions_RequestNewPublishPermissions, PermissionsSet) == 0x000000, "Member 'RequestNewPublishPermissions_RequestNewPublishPermissions::PermissionsSet' has a wrong offset!");
static_assert(offsetof(RequestNewPublishPermissions_RequestNewPublishPermissions, PermissionsPrivacy) == 0x000010, "Member 'RequestNewPublishPermissions_RequestNewPublishPermissions::PermissionsPrivacy' has a wrong offset!");
static_assert(offsetof(RequestNewPublishPermissions_RequestNewPublishPermissions, ReturnValue) == 0x000018, "Member 'RequestNewPublishPermissions_RequestNewPublishPermissions::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.RequestNewReadPermissions.RequestNewReadPermissions
// 0x0018 (0x0018 - 0x0000)
struct RequestNewReadPermissions_RequestNewReadPermissions final
{
public:
	TArray<class FString>                         PermissionsSet;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class URequestNewReadPermissions*             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RequestNewReadPermissions_RequestNewReadPermissions) == 0x000008, "Wrong alignment on RequestNewReadPermissions_RequestNewReadPermissions");
static_assert(sizeof(RequestNewReadPermissions_RequestNewReadPermissions) == 0x000018, "Wrong size on RequestNewReadPermissions_RequestNewReadPermissions");
static_assert(offsetof(RequestNewReadPermissions_RequestNewReadPermissions, PermissionsSet) == 0x000000, "Member 'RequestNewReadPermissions_RequestNewReadPermissions::PermissionsSet' has a wrong offset!");
static_assert(offsetof(RequestNewReadPermissions_RequestNewReadPermissions, ReturnValue) == 0x000010, "Member 'RequestNewReadPermissions_RequestNewReadPermissions::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.ShareLinkContent.ShareLinkContent
// 0x0018 (0x0018 - 0x0000)
struct ShareLinkContent_ShareLinkContent final
{
public:
	struct FFacebookShareLinkContent              ShareParameter;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UShareLinkContent*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ShareLinkContent_ShareLinkContent) == 0x000008, "Wrong alignment on ShareLinkContent_ShareLinkContent");
static_assert(sizeof(ShareLinkContent_ShareLinkContent) == 0x000018, "Wrong size on ShareLinkContent_ShareLinkContent");
static_assert(offsetof(ShareLinkContent_ShareLinkContent, ShareParameter) == 0x000000, "Member 'ShareLinkContent_ShareLinkContent::ShareParameter' has a wrong offset!");
static_assert(offsetof(ShareLinkContent_ShareLinkContent, ReturnValue) == 0x000010, "Member 'ShareLinkContent_ShareLinkContent::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.SharePhotoContent.SharePhotoContent
// 0x0018 (0x0018 - 0x0000)
struct SharePhotoContent_SharePhotoContent final
{
public:
	struct FFacebookSharePhotoContent             ShareParameter;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class USharePhotoContent*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SharePhotoContent_SharePhotoContent) == 0x000008, "Wrong alignment on SharePhotoContent_SharePhotoContent");
static_assert(sizeof(SharePhotoContent_SharePhotoContent) == 0x000018, "Wrong size on SharePhotoContent_SharePhotoContent");
static_assert(offsetof(SharePhotoContent_SharePhotoContent, ShareParameter) == 0x000000, "Member 'SharePhotoContent_SharePhotoContent::ShareParameter' has a wrong offset!");
static_assert(offsetof(SharePhotoContent_SharePhotoContent, ReturnValue) == 0x000010, "Member 'SharePhotoContent_SharePhotoContent::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.SharePost.ShareImage
// 0x0038 (0x0038 - 0x0000)
struct SharePost_ShareImage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         TaggedFriends;                                     // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UTexture2D*                             Image;                                             // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFacebookImageFormat                          ImageFormat;                                       // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USharePost*                             ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SharePost_ShareImage) == 0x000008, "Wrong alignment on SharePost_ShareImage");
static_assert(sizeof(SharePost_ShareImage) == 0x000038, "Wrong size on SharePost_ShareImage");
static_assert(offsetof(SharePost_ShareImage, Message) == 0x000000, "Member 'SharePost_ShareImage::Message' has a wrong offset!");
static_assert(offsetof(SharePost_ShareImage, TaggedFriends) == 0x000010, "Member 'SharePost_ShareImage::TaggedFriends' has a wrong offset!");
static_assert(offsetof(SharePost_ShareImage, Image) == 0x000020, "Member 'SharePost_ShareImage::Image' has a wrong offset!");
static_assert(offsetof(SharePost_ShareImage, ImageFormat) == 0x000028, "Member 'SharePost_ShareImage::ImageFormat' has a wrong offset!");
static_assert(offsetof(SharePost_ShareImage, ReturnValue) == 0x000030, "Member 'SharePost_ShareImage::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.SharePost.SharePost
// 0x0028 (0x0028 - 0x0000)
struct SharePost_SharePost final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         TaggedFriends;                                     // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USharePost*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SharePost_SharePost) == 0x000008, "Wrong alignment on SharePost_SharePost");
static_assert(sizeof(SharePost_SharePost) == 0x000028, "Wrong size on SharePost_SharePost");
static_assert(offsetof(SharePost_SharePost, Message) == 0x000000, "Member 'SharePost_SharePost::Message' has a wrong offset!");
static_assert(offsetof(SharePost_SharePost, TaggedFriends) == 0x000010, "Member 'SharePost_SharePost::TaggedFriends' has a wrong offset!");
static_assert(offsetof(SharePost_SharePost, ReturnValue) == 0x000020, "Member 'SharePost_SharePost::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.WriteAchievement.WriteAchievement
// 0x0010 (0x0010 - 0x0000)
struct WriteAchievement_WriteAchievement final
{
public:
	class FName                                   AchievementId;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWriteAchievement*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WriteAchievement_WriteAchievement) == 0x000008, "Wrong alignment on WriteAchievement_WriteAchievement");
static_assert(sizeof(WriteAchievement_WriteAchievement) == 0x000010, "Wrong size on WriteAchievement_WriteAchievement");
static_assert(offsetof(WriteAchievement_WriteAchievement, AchievementId) == 0x000000, "Member 'WriteAchievement_WriteAchievement::AchievementId' has a wrong offset!");
static_assert(offsetof(WriteAchievement_WriteAchievement, ReturnValue) == 0x000008, "Member 'WriteAchievement_WriteAchievement::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemExtendedFacebook.WriteAndFlushLeaderboards.WriteAndFlushLeaderboards
// 0x0010 (0x0010 - 0x0000)
struct WriteAndFlushLeaderboards_WriteAndFlushLeaderboards final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWriteAndFlushLeaderboards*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WriteAndFlushLeaderboards_WriteAndFlushLeaderboards) == 0x000008, "Wrong alignment on WriteAndFlushLeaderboards_WriteAndFlushLeaderboards");
static_assert(sizeof(WriteAndFlushLeaderboards_WriteAndFlushLeaderboards) == 0x000010, "Wrong size on WriteAndFlushLeaderboards_WriteAndFlushLeaderboards");
static_assert(offsetof(WriteAndFlushLeaderboards_WriteAndFlushLeaderboards, Score) == 0x000000, "Member 'WriteAndFlushLeaderboards_WriteAndFlushLeaderboards::Score' has a wrong offset!");
static_assert(offsetof(WriteAndFlushLeaderboards_WriteAndFlushLeaderboards, ReturnValue) == 0x000008, "Member 'WriteAndFlushLeaderboards_WriteAndFlushLeaderboards::ReturnValue' has a wrong offset!");

}

