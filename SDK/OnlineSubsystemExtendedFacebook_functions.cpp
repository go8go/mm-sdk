#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemExtendedFacebook

#include "Basic.hpp"

#include "OnlineSubsystemExtendedFacebook_classes.hpp"
#include "OnlineSubsystemExtendedFacebook_parameters.hpp"


namespace SDK
{

// Function OnlineSubsystemExtendedFacebook.AppInvite.AppInvite
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           AppLinkURL                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PreviewImageURL                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAppInvite*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAppInvite* UAppInvite::AppInvite(const class FString& AppLinkURL, const class FString& PreviewImageURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppInvite", "AppInvite");

	Params::AppInvite_AppInvite Parms{};

	Parms.AppLinkURL = std::move(AppLinkURL);
	Parms.PreviewImageURL = std::move(PreviewImageURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.FacebookLogin.FacebookLogin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFacebookLogin*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFacebookLogin* UFacebookLogin::FacebookLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FacebookLogin", "FacebookLogin");

	Params::FacebookLogin_FacebookLogin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.FacebookLogout.FacebookLogout
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFacebookLogout*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFacebookLogout* UFacebookLogout::FacebookLogout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FacebookLogout", "FacebookLogout");

	Params::FacebookLogout_FacebookLogout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.FacebookQueryUserInfo.FacebookQueryUserInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           UserID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFacebookQueryUserInfo*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFacebookQueryUserInfo* UFacebookQueryUserInfo::FacebookQueryUserInfo(const class FString& UserID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FacebookQueryUserInfo", "FacebookQueryUserInfo");

	Params::FacebookQueryUserInfo_FacebookQueryUserInfo Parms{};

	Parms.UserID = std::move(UserID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.InviteFriends.InviteFriends
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   FriendsIds                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UInviteFriends*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInviteFriends* UInviteFriends::InviteFriends(const TArray<class FString>& FriendsIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InviteFriends", "InviteFriends");

	Params::InviteFriends_InviteFriends Parms{};

	Parms.FriendsIds = std::move(FriendsIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.ChangeActiveWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCanvasPanel*                     ActiveWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineSubsystemExtendedFacebookBlueprintLibrary::ChangeActiveWidget(class UCanvasPanel* ActiveWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "ChangeActiveWidget");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_ChangeActiveWidget Parms{};

	Parms.ActiveWidget = ActiveWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.CheckIfPlayerLoggedIn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineSubsystemExtendedFacebookBlueprintLibrary::CheckIfPlayerLoggedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "CheckIfPlayerLoggedIn");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_CheckIfPlayerLoggedIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetAccessToken
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineSubsystemExtendedFacebookBlueprintLibrary::GetAccessToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "GetAccessToken");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAccessToken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetAllCachedFacebookAchievements
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FFacebookAchievement>     Achievements                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineSubsystemExtendedFacebookBlueprintLibrary::GetAllCachedFacebookAchievements(TArray<struct FFacebookAchievement>* Achievements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "GetAllCachedFacebookAchievements");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookAchievements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Achievements != nullptr)
		*Achievements = std::move(Parms.Achievements);

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetAllCachedFacebookFriends
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FFacebookFriend>          Friends                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineSubsystemExtendedFacebookBlueprintLibrary::GetAllCachedFacebookFriends(TArray<struct FFacebookFriend>* Friends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "GetAllCachedFacebookFriends");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookFriends Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Friends != nullptr)
		*Friends = std::move(Parms.Friends);

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetAllCachedFacebookUsersInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FFacebookProfile>         Users                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineSubsystemExtendedFacebookBlueprintLibrary::GetAllCachedFacebookUsersInfo(TArray<struct FFacebookProfile>* Users)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "GetAllCachedFacebookUsersInfo");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_GetAllCachedFacebookUsersInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Users != nullptr)
		*Users = std::move(Parms.Users);

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetCachedFacebookFriend
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           FriendId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFacebookFriend                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFacebookFriend UOnlineSubsystemExtendedFacebookBlueprintLibrary::GetCachedFacebookFriend(const class FString& FriendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "GetCachedFacebookFriend");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookFriend Parms{};

	Parms.FriendId = std::move(FriendId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetCachedFacebookUserInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           UserID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFacebookProfile                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFacebookProfile UOnlineSubsystemExtendedFacebookBlueprintLibrary::GetCachedFacebookUserInfo(const class FString& UserID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "GetCachedFacebookUserInfo");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_GetCachedFacebookUserInfo Parms{};

	Parms.UserID = std::move(UserID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetUserId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineSubsystemExtendedFacebookBlueprintLibrary::GetUserId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "GetUserId");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.GetUsername
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineSubsystemExtendedFacebookBlueprintLibrary::GetUsername()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "GetUsername");

	Params::OnlineSubsystemExtendedFacebookBlueprintLibrary_GetUsername Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary.ResetActiveWidget
// (Final, Native, Static, Public, BlueprintCallable)

void UOnlineSubsystemExtendedFacebookBlueprintLibrary::ResetActiveWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemExtendedFacebookBlueprintLibrary", "ResetActiveWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWebBrowser.EnableIME
// (Final, Native, Public, BlueprintCallable)

void UOnlineSubsystemExtendedFacebookWebBrowser::EnableIME()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineSubsystemExtendedFacebookWebBrowser", "EnableIME");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWebBrowser.LoadURL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewURL                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineSubsystemExtendedFacebookWebBrowser::LoadURL(const class FString& NewURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineSubsystemExtendedFacebookWebBrowser", "LoadURL");

	Params::OnlineSubsystemExtendedFacebookWebBrowser_LoadURL Parms{};

	Parms.NewURL = std::move(NewURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWebBrowser.OnUrlChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOnlineSubsystemExtendedFacebookWebBrowser::OnUrlChanged__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineSubsystemExtendedFacebookWebBrowser", "OnUrlChanged__DelegateSignature");

	Params::OnlineSubsystemExtendedFacebookWebBrowser_OnUrlChanged__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWebBrowser.SetFocusToBrowser
// (Final, Native, Public, BlueprintCallable)

void UOnlineSubsystemExtendedFacebookWebBrowser::SetFocusToBrowser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineSubsystemExtendedFacebookWebBrowser", "SetFocusToBrowser");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWidget.EnableCustomStyle
// (Final, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineSubsystemExtendedFacebookWidget::EnableCustomStyle(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineSubsystemExtendedFacebookWidget", "EnableCustomStyle");

	Params::OnlineSubsystemExtendedFacebookWidget_EnableCustomStyle Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWidget.HandleOnUrlChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOnlineSubsystemExtendedFacebookWidget::HandleOnUrlChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineSubsystemExtendedFacebookWidget", "HandleOnUrlChanged");

	Params::OnlineSubsystemExtendedFacebookWidget_HandleOnUrlChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWidget.OnClickBackButton
// (Final, Native, Public)

void UOnlineSubsystemExtendedFacebookWidget::OnClickBackButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineSubsystemExtendedFacebookWidget", "OnClickBackButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWidget.OnClickClose
// (Final, Native, Public)

void UOnlineSubsystemExtendedFacebookWidget::OnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnlineSubsystemExtendedFacebookWidget", "OnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemExtendedFacebook.OpenGraphPost.OpenGraphPost
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           GraphPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFacebookOpenGraphParameter>OpenGraphParameters                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ShareOnTimeline                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOpenGraphPost*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOpenGraphPost* UOpenGraphPost::OpenGraphPost(const class FString& GraphPath, const TArray<struct FFacebookOpenGraphParameter>& OpenGraphParameters, bool ShareOnTimeline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OpenGraphPost", "OpenGraphPost");

	Params::OpenGraphPost_OpenGraphPost Parms{};

	Parms.GraphPath = std::move(GraphPath);
	Parms.OpenGraphParameters = std::move(OpenGraphParameters);
	Parms.ShareOnTimeline = ShareOnTimeline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.QueryAchievements.QueryAchievements
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UQueryAchievements*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQueryAchievements* UQueryAchievements::QueryAchievements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QueryAchievements", "QueryAchievements");

	Params::QueryAchievements_QueryAchievements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.QueryFriends.QueryFriends
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UQueryFriends*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQueryFriends* UQueryFriends::QueryFriends()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QueryFriends", "QueryFriends");

	Params::QueryFriends_QueryFriends Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.QueryInvitableFriends.QueryInvitableFriends
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Limit                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQueryInvitableFriends*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQueryInvitableFriends* UQueryInvitableFriends::QueryInvitableFriends(int32 Limit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QueryInvitableFriends", "QueryInvitableFriends");

	Params::QueryInvitableFriends_QueryInvitableFriends Parms{};

	Parms.Limit = Limit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.ReadLeaderboard.ReadLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReadOnlyMe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UReadLeaderboard*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UReadLeaderboard* UReadLeaderboard::ReadLeaderboard(bool ReadOnlyMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ReadLeaderboard", "ReadLeaderboard");

	Params::ReadLeaderboard_ReadLeaderboard Parms{};

	Parms.ReadOnlyMe = ReadOnlyMe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.RequestNewPublishPermissions.RequestNewPublishPermissions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   PermissionsSet                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EPermissionsPrivacy                     PermissionsPrivacy                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URequestNewPublishPermissions*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URequestNewPublishPermissions* URequestNewPublishPermissions::RequestNewPublishPermissions(const TArray<class FString>& PermissionsSet, EPermissionsPrivacy PermissionsPrivacy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RequestNewPublishPermissions", "RequestNewPublishPermissions");

	Params::RequestNewPublishPermissions_RequestNewPublishPermissions Parms{};

	Parms.PermissionsSet = std::move(PermissionsSet);
	Parms.PermissionsPrivacy = PermissionsPrivacy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.RequestNewReadPermissions.RequestNewReadPermissions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   PermissionsSet                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class URequestNewReadPermissions*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URequestNewReadPermissions* URequestNewReadPermissions::RequestNewReadPermissions(const TArray<class FString>& PermissionsSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RequestNewReadPermissions", "RequestNewReadPermissions");

	Params::RequestNewReadPermissions_RequestNewReadPermissions Parms{};

	Parms.PermissionsSet = std::move(PermissionsSet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.ShareLinkContent.ShareLinkContent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFacebookShareLinkContent        ShareParameter                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UShareLinkContent*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UShareLinkContent* UShareLinkContent::ShareLinkContent(const struct FFacebookShareLinkContent& ShareParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShareLinkContent", "ShareLinkContent");

	Params::ShareLinkContent_ShareLinkContent Parms{};

	Parms.ShareParameter = std::move(ShareParameter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.SharePhotoContent.SharePhotoContent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFacebookSharePhotoContent       ShareParameter                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class USharePhotoContent*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USharePhotoContent* USharePhotoContent::SharePhotoContent(const struct FFacebookSharePhotoContent& ShareParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SharePhotoContent", "SharePhotoContent");

	Params::SharePhotoContent_SharePhotoContent Parms{};

	Parms.ShareParameter = std::move(ShareParameter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.SharePost.ShareImage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   TaggedFriends                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UTexture2D*                       Image                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFacebookImageFormat                    ImageFormat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USharePost*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USharePost* USharePost::ShareImage(const class FString& Message, const TArray<class FString>& TaggedFriends, class UTexture2D* Image, EFacebookImageFormat ImageFormat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SharePost", "ShareImage");

	Params::SharePost_ShareImage Parms{};

	Parms.Message = std::move(Message);
	Parms.TaggedFriends = std::move(TaggedFriends);
	Parms.Image = Image;
	Parms.ImageFormat = ImageFormat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.SharePost.SharePost
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   TaggedFriends                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class USharePost*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USharePost* USharePost::SharePost(const class FString& Message, const TArray<class FString>& TaggedFriends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SharePost", "SharePost");

	Params::SharePost_SharePost Parms{};

	Parms.Message = std::move(Message);
	Parms.TaggedFriends = std::move(TaggedFriends);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.WriteAchievement.WriteAchievement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             AchievementId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWriteAchievement*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWriteAchievement* UWriteAchievement::WriteAchievement(class FName AchievementId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WriteAchievement", "WriteAchievement");

	Params::WriteAchievement_WriteAchievement Parms{};

	Parms.AchievementId = AchievementId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemExtendedFacebook.WriteAndFlushLeaderboards.WriteAndFlushLeaderboards
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWriteAndFlushLeaderboards*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWriteAndFlushLeaderboards* UWriteAndFlushLeaderboards::WriteAndFlushLeaderboards(int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WriteAndFlushLeaderboards", "WriteAndFlushLeaderboards");

	Params::WriteAndFlushLeaderboards_WriteAndFlushLeaderboards Parms{};

	Parms.Score = Score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

