#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MM_GameInstance_BP

#include "Basic.hpp"

#include "MM_GameInstance_BP_classes.hpp"
#include "MM_GameInstance_BP_parameters.hpp"


namespace SDK
{

// Function MM_GameInstance_BP.MM_GameInstance_BP_C.CalculateAttackDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FATTACK_DATA                     ATTACK_DATA                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UMM_GameInstance_BP_C::CalculateAttackDamage(const struct FATTACK_DATA& ATTACK_DATA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_GameInstance_BP_C", "CalculateAttackDamage");

	Params::MM_GameInstance_BP_C_CalculateAttackDamage Parms{};

	Parms.ATTACK_DATA = std::move(ATTACK_DATA);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MM_GameInstance_BP.MM_GameInstance_BP_C.LoadLevelInstance
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ULevelStreamingDynamic*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ULevelStreamingDynamic* UMM_GameInstance_BP_C::LoadLevelInstance(const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_GameInstance_BP_C", "LoadLevelInstance");

	Params::MM_GameInstance_BP_C_LoadLevelInstance Parms{};

	Parms.LevelName = std::move(LevelName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

