#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Customizing_Preset

#include "Basic.hpp"


namespace SDK::Params
{

// Function Customizing_Preset.Customizing_Preset_C.ExecuteUbergraph_Customizing_Preset
// 0x0008 (0x0008 - 0x0000)
struct Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset) == 0x000004, "Wrong alignment on Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset");
static_assert(sizeof(Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset) == 0x000008, "Wrong size on Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset");
static_assert(offsetof(Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset, EntryPoint) == 0x000000, "Member 'Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset::EntryPoint' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Customizing_Preset_C_ExecuteUbergraph_Customizing_Preset::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function Customizing_Preset.Customizing_Preset_C.CreatePresetItem
// 0x0048 (0x0048 - 0x0000)
struct Customizing_Preset_C_CreatePresetItem final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMM_Customizing_PresetItem*>     ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
	TArray<class UMM_Customizing_PresetItem*>     LOCAL_PresetItemArray;                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomizing_Preset_Item_C*             CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Customizing_Preset_C_CreatePresetItem) == 0x000008, "Wrong alignment on Customizing_Preset_C_CreatePresetItem");
static_assert(sizeof(Customizing_Preset_C_CreatePresetItem) == 0x000048, "Wrong size on Customizing_Preset_C_CreatePresetItem");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, Count) == 0x000000, "Member 'Customizing_Preset_C_CreatePresetItem::Count' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, ReturnValue) == 0x000008, "Member 'Customizing_Preset_C_CreatePresetItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, LOCAL_PresetItemArray) == 0x000018, "Member 'Customizing_Preset_C_CreatePresetItem::LOCAL_PresetItemArray' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'Customizing_Preset_C_CreatePresetItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, ___int_Variable) == 0x00002C, "Member 'Customizing_Preset_C_CreatePresetItem::___int_Variable' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'Customizing_Preset_C_CreatePresetItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'Customizing_Preset_C_CreatePresetItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, CallFunc_Create_ReturnValue) == 0x000038, "Member 'Customizing_Preset_C_CreatePresetItem::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Customizing_Preset_C_CreatePresetItem, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'Customizing_Preset_C_CreatePresetItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Customizing_Preset.Customizing_Preset_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Customizing_Preset_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Customizing_Preset_C_PreConstruct) == 0x000001, "Wrong alignment on Customizing_Preset_C_PreConstruct");
static_assert(sizeof(Customizing_Preset_C_PreConstruct) == 0x000001, "Wrong size on Customizing_Preset_C_PreConstruct");
static_assert(offsetof(Customizing_Preset_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Customizing_Preset_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

