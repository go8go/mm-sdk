#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IOSGoodies

#include "Basic.hpp"


namespace SDK
{

// Enum IOSGoodies.BatteryState
// NumValues: 0x0005
enum class EBatteryState : uint8
{
	Unknown                                  = 0,
	Unplugged                                = 1,
	Charging                                 = 2,
	Full                                     = 3,
	BatteryState_MAX                         = 4,
};

// Enum IOSGoodies.CameraFlashMode
// NumValues: 0x0004
enum class ECameraFlashMode : uint8
{
	FlashOff                                 = 0,
	FlashAuto                                = 1,
	FlashOn                                  = 2,
	CameraFlashMode_MAX                      = 3,
};

// Enum IOSGoodies.DateTimePickerType
// NumValues: 0x0005
enum class EDateTimePickerType : uint8
{
	DatePicker                               = 0,
	TimePicker                               = 1,
	DateTimePicker                           = 2,
	CountdownTimer                           = 3,
	DateTimePickerType_MAX                   = 4,
};

// Enum IOSGoodies.GallerySourceType
// NumValues: 0x0003
enum class EGallerySourceType : uint8
{
	PhotoLibrary                             = 0,
	PhotoAlbum                               = 1,
	GallerySourceType_MAX                    = 2,
};

// Enum IOSGoodies.ImpactStrength
// NumValues: 0x0004
enum class EImpactStrength : uint8
{
	Light                                    = 0,
	Medium                                   = 1,
	Heavy                                    = 2,
	ImpactStrength_MAX                       = 3,
};

// Enum IOSGoodies.TransportType
// NumValues: 0x0004
enum class ETransportType : uint8
{
	Car                                      = 0,
	Feet                                     = 1,
	PublicTransport                          = 2,
	TransportType_MAX                        = 3,
};

// Enum IOSGoodies.MapViewType
// NumValues: 0x0005
enum class EMapViewType : uint8
{
	Standard                                 = 0,
	Satellite                                = 1,
	Hybrid                                   = 2,
	Transit                                  = 3,
	MapViewType_MAX                          = 4,
};

// Enum IOSGoodies.NotificationType
// NumValues: 0x0004
enum class ENotificationType : uint8
{
	Error                                    = 0,
	Warning                                  = 1,
	Success                                  = 2,
	NotificationType_MAX                     = 3,
};

// Enum IOSGoodies.RecurrencyRuleType
// NumValues: 0x0005
enum class ERecurrencyRuleType : uint8
{
	Daily                                    = 0,
	Weekly                                   = 1,
	Monthly                                  = 2,
	Yearly                                   = 3,
	RecurrencyRuleType_MAX                   = 4,
};

// Enum IOSGoodies.StatusBarStyle
// NumValues: 0x0004
enum class EStatusBarStyle : uint8
{
	BarStyleDefault                          = 0,
	BarStyleLightContent                     = 1,
	BarStyleDarkContent                      = 3,
	StatusBarStyle_MAX                       = 4,
};

// Enum IOSGoodies.UserInterfaceIdiom
// NumValues: 0x0006
enum class EUserInterfaceIdiom : uint8
{
	Unspecified                              = 18446744073709551615,
	Phone                                    = 0,
	Pad                                      = 1,
	AppleTV                                  = 2,
	CarPlay                                  = 3,
	UserInterfaceIdiom_MAX                   = 4,
};

// ScriptStruct IOSGoodies.IGPickedMedia
// 0x0038 (0x0038 - 0x0000)
struct FIGPickedMedia final
{
public:
	class UTexture2D*                             PickedImage;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MediaType;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FullMediaPath;                                     // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReferenceUrl;                                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIGPickedMedia) == 0x000008, "Wrong alignment on FIGPickedMedia");
static_assert(sizeof(FIGPickedMedia) == 0x000038, "Wrong size on FIGPickedMedia");
static_assert(offsetof(FIGPickedMedia, PickedImage) == 0x000000, "Member 'FIGPickedMedia::PickedImage' has a wrong offset!");
static_assert(offsetof(FIGPickedMedia, MediaType) == 0x000008, "Member 'FIGPickedMedia::MediaType' has a wrong offset!");
static_assert(offsetof(FIGPickedMedia, FullMediaPath) == 0x000018, "Member 'FIGPickedMedia::FullMediaPath' has a wrong offset!");
static_assert(offsetof(FIGPickedMedia, ReferenceUrl) == 0x000028, "Member 'FIGPickedMedia::ReferenceUrl' has a wrong offset!");

}

