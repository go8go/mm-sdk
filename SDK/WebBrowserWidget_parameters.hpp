#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WebBrowserWidget

#include "Basic.hpp"


namespace SDK::Params
{

// Function WebBrowserWidget.WebBrowser.BindUObject
// 0x0020 (0x0020 - 0x0000)
struct WebBrowser_BindUObject final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPermanent;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WebBrowser_BindUObject) == 0x000008, "Wrong alignment on WebBrowser_BindUObject");
static_assert(sizeof(WebBrowser_BindUObject) == 0x000020, "Wrong size on WebBrowser_BindUObject");
static_assert(offsetof(WebBrowser_BindUObject, Name_0) == 0x000000, "Member 'WebBrowser_BindUObject::Name_0' has a wrong offset!");
static_assert(offsetof(WebBrowser_BindUObject, Object) == 0x000010, "Member 'WebBrowser_BindUObject::Object' has a wrong offset!");
static_assert(offsetof(WebBrowser_BindUObject, bIsPermanent) == 0x000018, "Member 'WebBrowser_BindUObject::bIsPermanent' has a wrong offset!");

// Function WebBrowserWidget.WebBrowser.CallJSFunction
// 0x0020 (0x0020 - 0x0000)
struct WebBrowser_CallJSFunction final
{
public:
	class FString                                 FunctionName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Param;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_CallJSFunction) == 0x000008, "Wrong alignment on WebBrowser_CallJSFunction");
static_assert(sizeof(WebBrowser_CallJSFunction) == 0x000020, "Wrong size on WebBrowser_CallJSFunction");
static_assert(offsetof(WebBrowser_CallJSFunction, FunctionName) == 0x000000, "Member 'WebBrowser_CallJSFunction::FunctionName' has a wrong offset!");
static_assert(offsetof(WebBrowser_CallJSFunction, Param) == 0x000010, "Member 'WebBrowser_CallJSFunction::Param' has a wrong offset!");

// Function WebBrowserWidget.WebBrowser.ExecuteJavascript
// 0x0010 (0x0010 - 0x0000)
struct WebBrowser_ExecuteJavascript final
{
public:
	class FString                                 ScriptText;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_ExecuteJavascript) == 0x000008, "Wrong alignment on WebBrowser_ExecuteJavascript");
static_assert(sizeof(WebBrowser_ExecuteJavascript) == 0x000010, "Wrong size on WebBrowser_ExecuteJavascript");
static_assert(offsetof(WebBrowser_ExecuteJavascript, ScriptText) == 0x000000, "Member 'WebBrowser_ExecuteJavascript::ScriptText' has a wrong offset!");

// Function WebBrowserWidget.WebBrowser.LoadRequest
// 0x0080 (0x0080 - 0x0000)
struct WebBrowser_LoadRequest final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Method;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            HeaderMap;                                         // 0x0020(0x0050)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 Content;                                           // 0x0070(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_LoadRequest) == 0x000008, "Wrong alignment on WebBrowser_LoadRequest");
static_assert(sizeof(WebBrowser_LoadRequest) == 0x000080, "Wrong size on WebBrowser_LoadRequest");
static_assert(offsetof(WebBrowser_LoadRequest, URL) == 0x000000, "Member 'WebBrowser_LoadRequest::URL' has a wrong offset!");
static_assert(offsetof(WebBrowser_LoadRequest, Method) == 0x000010, "Member 'WebBrowser_LoadRequest::Method' has a wrong offset!");
static_assert(offsetof(WebBrowser_LoadRequest, HeaderMap) == 0x000020, "Member 'WebBrowser_LoadRequest::HeaderMap' has a wrong offset!");
static_assert(offsetof(WebBrowser_LoadRequest, Content) == 0x000070, "Member 'WebBrowser_LoadRequest::Content' has a wrong offset!");

// Function WebBrowserWidget.WebBrowser.LoadString
// 0x0020 (0x0020 - 0x0000)
struct WebBrowser_LoadString final
{
public:
	class FString                                 Contents;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DummyURL;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_LoadString) == 0x000008, "Wrong alignment on WebBrowser_LoadString");
static_assert(sizeof(WebBrowser_LoadString) == 0x000020, "Wrong size on WebBrowser_LoadString");
static_assert(offsetof(WebBrowser_LoadString, Contents) == 0x000000, "Member 'WebBrowser_LoadString::Contents' has a wrong offset!");
static_assert(offsetof(WebBrowser_LoadString, DummyURL) == 0x000010, "Member 'WebBrowser_LoadString::DummyURL' has a wrong offset!");

// Function WebBrowserWidget.WebBrowser.LoadURL
// 0x0010 (0x0010 - 0x0000)
struct WebBrowser_LoadURL final
{
public:
	class FString                                 NewURL;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_LoadURL) == 0x000008, "Wrong alignment on WebBrowser_LoadURL");
static_assert(sizeof(WebBrowser_LoadURL) == 0x000010, "Wrong size on WebBrowser_LoadURL");
static_assert(offsetof(WebBrowser_LoadURL, NewURL) == 0x000000, "Member 'WebBrowser_LoadURL::NewURL' has a wrong offset!");

// DelegateFunction WebBrowserWidget.WebBrowser.OnBeforePopup__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WebBrowser_OnBeforePopup__DelegateSignature final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Frame;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_OnBeforePopup__DelegateSignature) == 0x000008, "Wrong alignment on WebBrowser_OnBeforePopup__DelegateSignature");
static_assert(sizeof(WebBrowser_OnBeforePopup__DelegateSignature) == 0x000020, "Wrong size on WebBrowser_OnBeforePopup__DelegateSignature");
static_assert(offsetof(WebBrowser_OnBeforePopup__DelegateSignature, URL) == 0x000000, "Member 'WebBrowser_OnBeforePopup__DelegateSignature::URL' has a wrong offset!");
static_assert(offsetof(WebBrowser_OnBeforePopup__DelegateSignature, Frame) == 0x000010, "Member 'WebBrowser_OnBeforePopup__DelegateSignature::Frame' has a wrong offset!");

// DelegateFunction WebBrowserWidget.WebBrowser.OnUrlChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WebBrowser_OnUrlChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_OnUrlChanged__DelegateSignature) == 0x000008, "Wrong alignment on WebBrowser_OnUrlChanged__DelegateSignature");
static_assert(sizeof(WebBrowser_OnUrlChanged__DelegateSignature) == 0x000018, "Wrong size on WebBrowser_OnUrlChanged__DelegateSignature");
static_assert(offsetof(WebBrowser_OnUrlChanged__DelegateSignature, Text) == 0x000000, "Member 'WebBrowser_OnUrlChanged__DelegateSignature::Text' has a wrong offset!");

// Function WebBrowserWidget.WebBrowser.UnbindUObject
// 0x0020 (0x0020 - 0x0000)
struct WebBrowser_UnbindUObject final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPermanent;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WebBrowser_UnbindUObject) == 0x000008, "Wrong alignment on WebBrowser_UnbindUObject");
static_assert(sizeof(WebBrowser_UnbindUObject) == 0x000020, "Wrong size on WebBrowser_UnbindUObject");
static_assert(offsetof(WebBrowser_UnbindUObject, Name_0) == 0x000000, "Member 'WebBrowser_UnbindUObject::Name_0' has a wrong offset!");
static_assert(offsetof(WebBrowser_UnbindUObject, Object) == 0x000010, "Member 'WebBrowser_UnbindUObject::Object' has a wrong offset!");
static_assert(offsetof(WebBrowser_UnbindUObject, bIsPermanent) == 0x000018, "Member 'WebBrowser_UnbindUObject::bIsPermanent' has a wrong offset!");

// Function WebBrowserWidget.WebBrowser.GetTitleText
// 0x0018 (0x0018 - 0x0000)
struct WebBrowser_GetTitleText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_GetTitleText) == 0x000008, "Wrong alignment on WebBrowser_GetTitleText");
static_assert(sizeof(WebBrowser_GetTitleText) == 0x000018, "Wrong size on WebBrowser_GetTitleText");
static_assert(offsetof(WebBrowser_GetTitleText, ReturnValue) == 0x000000, "Member 'WebBrowser_GetTitleText::ReturnValue' has a wrong offset!");

// Function WebBrowserWidget.WebBrowser.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct WebBrowser_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_GetUrl) == 0x000008, "Wrong alignment on WebBrowser_GetUrl");
static_assert(sizeof(WebBrowser_GetUrl) == 0x000010, "Wrong size on WebBrowser_GetUrl");
static_assert(offsetof(WebBrowser_GetUrl, ReturnValue) == 0x000000, "Member 'WebBrowser_GetUrl::ReturnValue' has a wrong offset!");

}

