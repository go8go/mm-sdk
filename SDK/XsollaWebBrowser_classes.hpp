#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaWebBrowser

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class XsollaWebBrowser.XsollaWebBrowser
// 0x0048 (0x0150 - 0x0108)
class UXsollaWebBrowser final : public UWidget
{
public:
	UMulticastInlineDelegateProperty_             OnUrlChanged;                                      // 0x0108(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnBeforePopup;                                     // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 InitialURL;                                        // 0x0128(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsTransparency;                             // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_139[0x17];                                     // 0x0139(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void LoadURL(const class FString& NewURL);
	void OnBeforePopup__DelegateSignature(const class FString& URL, const class FString& Frame);
	void OnUrlChanged__DelegateSignature(const class FText& Text);

	class FString GetUrl() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaWebBrowser">();
	}
	static class UXsollaWebBrowser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaWebBrowser>();
	}
};
static_assert(alignof(UXsollaWebBrowser) == 0x000008, "Wrong alignment on UXsollaWebBrowser");
static_assert(sizeof(UXsollaWebBrowser) == 0x000150, "Wrong size on UXsollaWebBrowser");
static_assert(offsetof(UXsollaWebBrowser, OnUrlChanged) == 0x000108, "Member 'UXsollaWebBrowser::OnUrlChanged' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowser, OnBeforePopup) == 0x000118, "Member 'UXsollaWebBrowser::OnBeforePopup' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowser, InitialURL) == 0x000128, "Member 'UXsollaWebBrowser::InitialURL' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowser, bSupportsTransparency) == 0x000138, "Member 'UXsollaWebBrowser::bSupportsTransparency' has a wrong offset!");

// Class XsollaWebBrowser.XsollaWebBrowserAssetManager
// 0x0050 (0x0078 - 0x0028)
class UXsollaWebBrowserAssetManager final : public UObject
{
public:
	TSoftObjectPtr<class UMaterial>               DefaultMaterial;                                   // 0x0028(0x0028)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterial>               DefaultTranslucentMaterial;                        // 0x0050(0x0028)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaWebBrowserAssetManager">();
	}
	static class UXsollaWebBrowserAssetManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaWebBrowserAssetManager>();
	}
};
static_assert(alignof(UXsollaWebBrowserAssetManager) == 0x000008, "Wrong alignment on UXsollaWebBrowserAssetManager");
static_assert(sizeof(UXsollaWebBrowserAssetManager) == 0x000078, "Wrong size on UXsollaWebBrowserAssetManager");
static_assert(offsetof(UXsollaWebBrowserAssetManager, DefaultMaterial) == 0x000028, "Member 'UXsollaWebBrowserAssetManager::DefaultMaterial' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowserAssetManager, DefaultTranslucentMaterial) == 0x000050, "Member 'UXsollaWebBrowserAssetManager::DefaultTranslucentMaterial' has a wrong offset!");

}

