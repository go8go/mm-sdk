#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyFirebase

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "EasyFirebase_structs.hpp"


namespace SDK
{

// Class EasyFirebase.FirebaseAppleCredential
// 0x0010 (0x0040 - 0x0030)
class UFirebaseAppleCredential final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFirebaseAppleCredential* RequestAppleCredential();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseAppleCredential">();
	}
	static class UFirebaseAppleCredential* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseAppleCredential>();
	}
};
static_assert(alignof(UFirebaseAppleCredential) == 0x000008, "Wrong alignment on UFirebaseAppleCredential");
static_assert(sizeof(UFirebaseAppleCredential) == 0x000040, "Wrong size on UFirebaseAppleCredential");
static_assert(offsetof(UFirebaseAppleCredential, OnComplete) == 0x000030, "Member 'UFirebaseAppleCredential::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseAuth
// 0x0000 (0x0028 - 0x0028)
class UFirebaseAuth final : public UObject
{
public:
	static class UFirebaseAuth* GetFirebaseAuth();

	class UFirebaseAuthStateListener* AddAuthStateListener();
	class UFirebaseFutureUser* CreateUserWithEmailAndPassword(const class FString& Email, const class FString& Passwd);
	class UFirebaseFutureUser* CreateUserWithEmailAndPasswordLastResult();
	class UFirebaseUser* Current_user();
	class UFirebaseFutureFetchProvideResult* FetchProvidersForEmail(const class FString& Email);
	class UFirebaseFutureFetchProvideResult* FetchProvidersForEmailLastResult();
	class UFirebaseCredential* GetPlayServiceCredential(const class FString& ServerAuthCode);
	void RemoveAuthStateListener(class UFirebaseAuthStateListener* Listener);
	class UFirebaseFutureVoid* SendPasswordResetEmail(const class FString& Email);
	class UFirebaseFutureVoid* SendPasswordResetEmailLastResult();
	class UFirebaseFutureSignInResult* SignInAndRetrieveDataWithCredential(class UFirebaseCredential* Credential);
	class UFirebaseFutureSignInResult* SignInAndRetrieveDataWithCredentialLastResult();
	class UFirebaseFutureUser* SignInAnonymously();
	class UFirebaseFutureUser* SignInWithCredential(class UFirebaseCredential* Credential);
	class UFirebaseFutureUser* SignInWithCredentialLastResult();
	class UFirebaseFutureUser* SignInWithCustomToken(const class FString& Token);
	class UFirebaseFutureUser* SignInWithCustomTokenLastResult();
	class UFirebaseFutureUser* SignInWithEmailAndPassword(const class FString& Email, const class FString& Passwd);
	class UFirebaseFutureUser* SignInWithEmailAndPasswordLastResult();
	void SignOut();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseAuth">();
	}
	static class UFirebaseAuth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseAuth>();
	}
};
static_assert(alignof(UFirebaseAuth) == 0x000008, "Wrong alignment on UFirebaseAuth");
static_assert(sizeof(UFirebaseAuth) == 0x000028, "Wrong size on UFirebaseAuth");

// Class EasyFirebase.FirebaseAuthStateListener
// 0x0020 (0x0050 - 0x0030)
class UFirebaseAuthStateListener final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnEvent;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseAuthStateListener* RunValueListener(class UFirebaseAuthStateListener* Listener);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseAuthStateListener">();
	}
	static class UFirebaseAuthStateListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseAuthStateListener>();
	}
};
static_assert(alignof(UFirebaseAuthStateListener) == 0x000008, "Wrong alignment on UFirebaseAuthStateListener");
static_assert(sizeof(UFirebaseAuthStateListener) == 0x000050, "Wrong size on UFirebaseAuthStateListener");
static_assert(offsetof(UFirebaseAuthStateListener, OnEvent) == 0x000030, "Member 'UFirebaseAuthStateListener::OnEvent' has a wrong offset!");

// Class EasyFirebase.FirebaseChildListener
// 0x0020 (0x0050 - 0x0030)
class UFirebaseChildListener final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnEvent;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseChildListener* RunChildListener(class UFirebaseChildListener* Listener);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseChildListener">();
	}
	static class UFirebaseChildListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseChildListener>();
	}
};
static_assert(alignof(UFirebaseChildListener) == 0x000008, "Wrong alignment on UFirebaseChildListener");
static_assert(sizeof(UFirebaseChildListener) == 0x000050, "Wrong size on UFirebaseChildListener");
static_assert(offsetof(UFirebaseChildListener, OnEvent) == 0x000030, "Member 'UFirebaseChildListener::OnEvent' has a wrong offset!");

// Class EasyFirebase.FirebaseCredential
// 0x0050 (0x0078 - 0x0028)
class UFirebaseCredential final : public UObject
{
public:
	uint8                                         Pad_28[0x50];                                      // 0x0028(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool Is_valid();
	class FString Provider();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseCredential">();
	}
	static class UFirebaseCredential* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseCredential>();
	}
};
static_assert(alignof(UFirebaseCredential) == 0x000008, "Wrong alignment on UFirebaseCredential");
static_assert(sizeof(UFirebaseCredential) == 0x000078, "Wrong size on UFirebaseCredential");

// Class EasyFirebase.FirebaseQuery
// 0x0030 (0x0058 - 0x0028)
class UFirebaseQuery : public UObject
{
public:
	uint8                                         Pad_28[0x30];                                      // 0x0028(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFirebaseChildListener* AddChildListener();
	class UFirebaseValueListener* AddValueListener();
	class UFirebaseQuery* EndAt(class UFirebaseVariant* OrderValue);
	class UFirebaseQuery* EndWithKeyAt(class UFirebaseVariant* OrderValue, const class FString& Key);
	class UFirebaseQuery* EqualTo(class UFirebaseVariant* OrderValue);
	class UFirebaseQuery* EqualWithKeyTo(class UFirebaseVariant* OrderValue, const class FString& Key);
	class UFirebaseDatabaseRef* GetReference();
	class UFirebaseFutureDataSnapshot* GetValue();
	class UFirebaseFutureDataSnapshot* GetValueLastResult();
	bool IsValid();
	class UFirebaseQuery* LimitToFirst(int64 Limit);
	class UFirebaseQuery* LimitToLast(int64 Limit);
	class UFirebaseQuery* OrderByChild(const class FString& Path);
	class UFirebaseQuery* OrderByKey();
	class UFirebaseQuery* OrderByPriority();
	class UFirebaseQuery* OrderByValue();
	void RemoveAllChildListeners();
	void RemoveAllValueListeners();
	void RemoveChildListener(class UFirebaseChildListener* Listener);
	void RemoveValueListener(class UFirebaseValueListener* Listner);
	void SetKeepSynchronized(bool Keep_sync);
	class UFirebaseQuery* StartAt(class UFirebaseVariant* OrderValue);
	class UFirebaseQuery* StartWithKeyAt(class UFirebaseVariant* OrderValue, const class FString& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseQuery">();
	}
	static class UFirebaseQuery* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseQuery>();
	}
};
static_assert(alignof(UFirebaseQuery) == 0x000008, "Wrong alignment on UFirebaseQuery");
static_assert(sizeof(UFirebaseQuery) == 0x000058, "Wrong size on UFirebaseQuery");

// Class EasyFirebase.FirebaseDatabaseRef
// 0x0018 (0x0070 - 0x0058)
class UFirebaseDatabaseRef final : public UFirebaseQuery
{
public:
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseDatabaseRef* GetRootDatabaseRef();
	static class UFirebaseDatabaseRef* GetRootDatabaseRefFromUrl(const class FString& URL_0);

	class UFirebaseDatabaseRef* Child(const class FString& Path);
	class UFirebaseDatabaseRef* GetParent();
	class UFirebaseDatabaseRef* GetRoot();
	void GoOffline();
	void GoOnline();
	bool IsDatabaseValid();
	bool IsRoot();
	class FString Key();
	class UFirebaseDatabaseRef* PushChild();
	class UFirebaseFutureVoid* RemoveValue();
	class UFirebaseFutureVoid* RemoveValueLastResult();
	class UFirebaseFutureVoid* SetPriority(class UFirebaseVariant* Variant);
	class UFirebaseFutureVoid* SetPriorityLastResult();
	class UFirebaseFutureVoid* SetValue(class UFirebaseVariant* Variant);
	class UFirebaseFutureVoid* SetValueAndPriority(class UFirebaseVariant* Value, class UFirebaseVariant* Priority);
	class UFirebaseFutureVoid* SetValueAndPriorityLastResult();
	class UFirebaseFutureVoid* SetValueLastResult();
	class UFirebaseFutureVoid* UpdateChildren(class UFirebaseVariant* Values);
	class UFirebaseFutureVoid* UpdateChildrenLastResult();
	class FString URL();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseDatabaseRef">();
	}
	static class UFirebaseDatabaseRef* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseDatabaseRef>();
	}
};
static_assert(alignof(UFirebaseDatabaseRef) == 0x000008, "Wrong alignment on UFirebaseDatabaseRef");
static_assert(sizeof(UFirebaseDatabaseRef) == 0x000070, "Wrong size on UFirebaseDatabaseRef");

// Class EasyFirebase.FirebaseDataSnapshot
// 0x0008 (0x0030 - 0x0028)
class UFirebaseDataSnapshot final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFirebaseDataSnapshot* Child(const class FString& Path);
	TArray<class UFirebaseDataSnapshot*> Children();
	int64 ChildrenCount();
	bool Exists();
	bool HasChild(const class FString& Path);
	bool HasChildren();
	bool IsValid();
	class FString Key();
	class UFirebaseVariant* Priority();
	class UFirebaseVariant* Value();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseDataSnapshot">();
	}
	static class UFirebaseDataSnapshot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseDataSnapshot>();
	}
};
static_assert(alignof(UFirebaseDataSnapshot) == 0x000008, "Wrong alignment on UFirebaseDataSnapshot");
static_assert(sizeof(UFirebaseDataSnapshot) == 0x000030, "Wrong size on UFirebaseDataSnapshot");

// Class EasyFirebase.FirebaseFacebookCredential
// 0x0010 (0x0040 - 0x0030)
class UFirebaseFacebookCredential final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFirebaseFacebookCredential* RequestFacebookCredential();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFacebookCredential">();
	}
	static class UFirebaseFacebookCredential* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFacebookCredential>();
	}
};
static_assert(alignof(UFirebaseFacebookCredential) == 0x000008, "Wrong alignment on UFirebaseFacebookCredential");
static_assert(sizeof(UFirebaseFacebookCredential) == 0x000040, "Wrong size on UFirebaseFacebookCredential");
static_assert(offsetof(UFirebaseFacebookCredential, OnComplete) == 0x000030, "Member 'UFirebaseFacebookCredential::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool ActivateFetched();
	static void CrashTest();
	static void CrashTest2();
	static void CrashTest3();
	static class UFirebaseFutureVoid* Fetch(int64 Cache_expiration_in_seconds);
	static bool FireBaseInitialize();
	static void ForceCrash();
	static bool GetBoolean(const class FString& Key, struct FValueInfo* Info);
	static float GetDouble(const class FString& Key, struct FValueInfo* Info);
	static TArray<class FString> GetKeys();
	static TArray<class FString> GetKeysByPrefix(const class FString& Key);
	static int64 GetLong(const class FString& Key, struct FValueInfo* Info);
	static class FString GetString(const class FString& Key, struct FValueInfo* Info);
	static bool IsSupportAppleSignIn();
	static void LogCustomEvent(const class FString& Name_0);
	static void LogCustomEventWithParameterList(const class FString& Name_0, const TArray<struct FAnalyticsParam>& ParameterList);
	static void LogCustomFloatEvent(const class FString& Name_0, const class FString& Parameter_name, float Parameter_value);
	static void LogCustomInt64Event(const class FString& Name_0, const class FString& Parameter_name, int64 Parameter_value);
	static void LogCustomIntEvent(const class FString& Name_0, const class FString& Parameter_name, int32 Parameter_value);
	static void LogCustomStringEvent(const class FString& Name_0, const class FString& Parameter_name, const class FString& Parameter_value);
	static void LogEvent(EAnalyticsEvent Name_0);
	static void LogFloatEvent(EAnalyticsEvent Name_0, EAnalyticsParameter Parameter_name, float Parameter_value);
	static void LogInt64Event(EAnalyticsEvent Name_0, EAnalyticsParameter Parameter_name, int64 Parameter_value);
	static void LogIntEvent(EAnalyticsEvent Name_0, EAnalyticsParameter Parameter_name, int32 Parameter_value);
	static void LogStringEvent(EAnalyticsEvent Name_0, EAnalyticsParameter Parameter_name, const class FString& Parameter_value);
	static bool PollMessage(struct FFirebaseMessage* Message);
	static class FString PollRegistrationToken();
	static class UFirebaseFutureVoid* RequestPermission();
	static class UFirebaseFutureVoid* RequestPermissionLastResult();
	static void SetBool(const class FString& Key, const bool Value);
	static void SetCurrentScreen(const class FString& Screen_name, const class FString& Screen_class);
	static void SetDefaults(const TArray<struct FFirebaseConfigKeyValueVariant>& Defaults);
	static void SetFloat(const class FString& Key, const float Value);
	static void SetInteger(const class FString& Key, const int32 Value);
	static void SetString(const class FString& Key, const class FString& Value);
	static void SetUserId(const class FString& UserID);
	static void SetUserProperty(const class FString& Name_0, const class FString& Property);
	static class UFirebaseFutureVoid* Subscribe(const class FString& Topic);
	static class UFirebaseFutureVoid* SubscribeLastResult();
	static class UFirebaseFutureVoid* Unsubscribe(const class FString& Topic);
	static class UFirebaseFutureVoid* UnsubscribeLastResult();
	static void WriteError(const class FString& Log, int32 Code);
	static void WriteLog(const class FString& Log);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFunctionLibrary">();
	}
	static class UFirebaseFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFunctionLibrary>();
	}
};
static_assert(alignof(UFirebaseFunctionLibrary) == 0x000008, "Wrong alignment on UFirebaseFunctionLibrary");
static_assert(sizeof(UFirebaseFunctionLibrary) == 0x000028, "Wrong size on UFirebaseFunctionLibrary");

// Class EasyFirebase.FirebaseFutureDataSnapshot
// 0x0028 (0x0058 - 0x0030)
class UFirebaseFutureDataSnapshot final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseFutureDataSnapshot* WaitFuture(class UFirebaseFutureDataSnapshot* Future);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFutureDataSnapshot">();
	}
	static class UFirebaseFutureDataSnapshot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFutureDataSnapshot>();
	}
};
static_assert(alignof(UFirebaseFutureDataSnapshot) == 0x000008, "Wrong alignment on UFirebaseFutureDataSnapshot");
static_assert(sizeof(UFirebaseFutureDataSnapshot) == 0x000058, "Wrong size on UFirebaseFutureDataSnapshot");
static_assert(offsetof(UFirebaseFutureDataSnapshot, OnComplete) == 0x000030, "Member 'UFirebaseFutureDataSnapshot::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseFutureFetchProvideResult
// 0x0028 (0x0058 - 0x0030)
class UFirebaseFutureFetchProvideResult final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseFutureFetchProvideResult* WaitFuture(class UFirebaseFutureFetchProvideResult* Future);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFutureFetchProvideResult">();
	}
	static class UFirebaseFutureFetchProvideResult* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFutureFetchProvideResult>();
	}
};
static_assert(alignof(UFirebaseFutureFetchProvideResult) == 0x000008, "Wrong alignment on UFirebaseFutureFetchProvideResult");
static_assert(sizeof(UFirebaseFutureFetchProvideResult) == 0x000058, "Wrong size on UFirebaseFutureFetchProvideResult");
static_assert(offsetof(UFirebaseFutureFetchProvideResult, OnComplete) == 0x000030, "Member 'UFirebaseFutureFetchProvideResult::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseFutureSignInResult
// 0x0028 (0x0058 - 0x0030)
class UFirebaseFutureSignInResult final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseFutureSignInResult* WaitFuture(class UFirebaseFutureSignInResult* Future);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFutureSignInResult">();
	}
	static class UFirebaseFutureSignInResult* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFutureSignInResult>();
	}
};
static_assert(alignof(UFirebaseFutureSignInResult) == 0x000008, "Wrong alignment on UFirebaseFutureSignInResult");
static_assert(sizeof(UFirebaseFutureSignInResult) == 0x000058, "Wrong size on UFirebaseFutureSignInResult");
static_assert(offsetof(UFirebaseFutureSignInResult, OnComplete) == 0x000030, "Member 'UFirebaseFutureSignInResult::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseFutureString
// 0x0028 (0x0058 - 0x0030)
class UFirebaseFutureString final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseFutureString* WaitFuture(class UFirebaseFutureString* Future);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFutureString">();
	}
	static class UFirebaseFutureString* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFutureString>();
	}
};
static_assert(alignof(UFirebaseFutureString) == 0x000008, "Wrong alignment on UFirebaseFutureString");
static_assert(sizeof(UFirebaseFutureString) == 0x000058, "Wrong size on UFirebaseFutureString");
static_assert(offsetof(UFirebaseFutureString, OnComplete) == 0x000030, "Member 'UFirebaseFutureString::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseFutureUser
// 0x0028 (0x0058 - 0x0030)
class UFirebaseFutureUser final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseFutureUser* WaitFuture(class UFirebaseFutureUser* Future);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFutureUser">();
	}
	static class UFirebaseFutureUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFutureUser>();
	}
};
static_assert(alignof(UFirebaseFutureUser) == 0x000008, "Wrong alignment on UFirebaseFutureUser");
static_assert(sizeof(UFirebaseFutureUser) == 0x000058, "Wrong size on UFirebaseFutureUser");
static_assert(offsetof(UFirebaseFutureUser, OnComplete) == 0x000030, "Member 'UFirebaseFutureUser::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseFutureVoid
// 0x0028 (0x0058 - 0x0030)
class UFirebaseFutureVoid final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseFutureVoid* WaitFuture(class UFirebaseFutureVoid* Future);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFutureVoid">();
	}
	static class UFirebaseFutureVoid* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFutureVoid>();
	}
};
static_assert(alignof(UFirebaseFutureVoid) == 0x000008, "Wrong alignment on UFirebaseFutureVoid");
static_assert(sizeof(UFirebaseFutureVoid) == 0x000058, "Wrong size on UFirebaseFutureVoid");
static_assert(offsetof(UFirebaseFutureVoid, OnComplete) == 0x000030, "Member 'UFirebaseFutureVoid::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseGameCenterCredential
// 0x0028 (0x0058 - 0x0030)
class UFirebaseGameCenterCredential final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseGameCenterCredential* RequestGameCenterCredential();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseGameCenterCredential">();
	}
	static class UFirebaseGameCenterCredential* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseGameCenterCredential>();
	}
};
static_assert(alignof(UFirebaseGameCenterCredential) == 0x000008, "Wrong alignment on UFirebaseGameCenterCredential");
static_assert(sizeof(UFirebaseGameCenterCredential) == 0x000058, "Wrong size on UFirebaseGameCenterCredential");
static_assert(offsetof(UFirebaseGameCenterCredential, OnComplete) == 0x000030, "Member 'UFirebaseGameCenterCredential::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseGoogleCredential
// 0x0010 (0x0040 - 0x0030)
class UFirebaseGoogleCredential final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFirebaseGoogleCredential* RequestGoogleCredential();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseGoogleCredential">();
	}
	static class UFirebaseGoogleCredential* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseGoogleCredential>();
	}
};
static_assert(alignof(UFirebaseGoogleCredential) == 0x000008, "Wrong alignment on UFirebaseGoogleCredential");
static_assert(sizeof(UFirebaseGoogleCredential) == 0x000040, "Wrong size on UFirebaseGoogleCredential");
static_assert(offsetof(UFirebaseGoogleCredential, OnComplete) == 0x000030, "Member 'UFirebaseGoogleCredential::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseGoogleServerAuthCode
// 0x0010 (0x0040 - 0x0030)
class UFirebaseGoogleServerAuthCode final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFirebaseGoogleServerAuthCode* RequestGoogleServerAuthCode();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseGoogleServerAuthCode">();
	}
	static class UFirebaseGoogleServerAuthCode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseGoogleServerAuthCode>();
	}
};
static_assert(alignof(UFirebaseGoogleServerAuthCode) == 0x000008, "Wrong alignment on UFirebaseGoogleServerAuthCode");
static_assert(sizeof(UFirebaseGoogleServerAuthCode) == 0x000040, "Wrong size on UFirebaseGoogleServerAuthCode");
static_assert(offsetof(UFirebaseGoogleServerAuthCode, OnComplete) == 0x000030, "Member 'UFirebaseGoogleServerAuthCode::OnComplete' has a wrong offset!");

// Class EasyFirebase.FirebaseMessageInitlize
// 0x0020 (0x0050 - 0x0030)
class UFirebaseMessageInitlize final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnMessageRcv;                                      // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnTokenRcv;                                        // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFirebaseMessageInitlize* FirebaseMessageInitlize();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseMessageInitlize">();
	}
	static class UFirebaseMessageInitlize* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseMessageInitlize>();
	}
};
static_assert(alignof(UFirebaseMessageInitlize) == 0x000008, "Wrong alignment on UFirebaseMessageInitlize");
static_assert(sizeof(UFirebaseMessageInitlize) == 0x000050, "Wrong size on UFirebaseMessageInitlize");
static_assert(offsetof(UFirebaseMessageInitlize, OnMessageRcv) == 0x000030, "Member 'UFirebaseMessageInitlize::OnMessageRcv' has a wrong offset!");
static_assert(offsetof(UFirebaseMessageInitlize, OnTokenRcv) == 0x000040, "Member 'UFirebaseMessageInitlize::OnTokenRcv' has a wrong offset!");

// Class EasyFirebase.FirebaseUserInfoInterface
// 0x0008 (0x0030 - 0x0028)
class UFirebaseUserInfoInterface : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FString Display_name();
	class FString Email();
	class FString Phone_number();
	class FString Photo_url();
	class FString Provider_id();
	class FString Uid();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseUserInfoInterface">();
	}
	static class UFirebaseUserInfoInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseUserInfoInterface>();
	}
};
static_assert(alignof(UFirebaseUserInfoInterface) == 0x000008, "Wrong alignment on UFirebaseUserInfoInterface");
static_assert(sizeof(UFirebaseUserInfoInterface) == 0x000030, "Wrong size on UFirebaseUserInfoInterface");

// Class EasyFirebase.FirebaseUser
// 0x0008 (0x0038 - 0x0030)
class UFirebaseUser final : public UFirebaseUserInfoInterface
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFirebaseFutureVoid* Delete();
	class UFirebaseFutureVoid* DeleteLastResult();
	class UFirebaseFutureString* GetToken(bool ForceRefresh);
	class UFirebaseFutureString* GetTokenLastResult();
	bool Is_anonymous();
	bool Is_email_verified();
	class UFirebaseFutureSignInResult* LinkAndRetrieveDataWithCredential(class UFirebaseCredential* Crdenntial);
	class UFirebaseFutureSignInResult* LinkAndRetrieveDataWithCredentialLastResult();
	class UFirebaseFutureUser* LinkWithCredential(class UFirebaseCredential* Crdenntial);
	class UFirebaseFutureUser* LinkWithCredentialLastResult();
	struct FUserMetadata Metadata();
	TArray<class UFirebaseUserInfoInterface*> Provider_data();
	class UFirebaseFutureVoid* Reauthenticate(class UFirebaseCredential* Crdenntial);
	class UFirebaseFutureSignInResult* ReauthenticateAndRetrieveData(class UFirebaseCredential* Crdenntial);
	class UFirebaseFutureSignInResult* ReauthenticateAndRetrieveDataLastResult();
	class UFirebaseFutureVoid* ReauthenticateLastResult();
	class UFirebaseFutureVoid* Reload();
	class UFirebaseFutureVoid* ReloadLastResult();
	class UFirebaseFutureVoid* SendEmailVerification();
	class UFirebaseFutureVoid* SendEmailVerificationLastResult();
	class UFirebaseFutureUser* Unlink(const class FString& Provider);
	class UFirebaseFutureVoid* UpdateEmail(const class FString& Email_0);
	class UFirebaseFutureVoid* UpdateEmailLastResult();
	class UFirebaseFutureVoid* UpdatePassword(const class FString& Passwd);
	class UFirebaseFutureVoid* UpdatePasswordLastResult();
	class UFirebaseFutureUser* UpdatePhoneNumberCredential(class UFirebaseCredential* Crdenntial);
	class UFirebaseFutureUser* UpdatePhoneNumberCredentialLastResult();
	class UFirebaseFutureVoid* UpdateUserProfile(const struct FUserProfile& Profile);
	class UFirebaseFutureVoid* UpdateUserProfileLastResult();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseUser">();
	}
	static class UFirebaseUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseUser>();
	}
};
static_assert(alignof(UFirebaseUser) == 0x000008, "Wrong alignment on UFirebaseUser");
static_assert(sizeof(UFirebaseUser) == 0x000038, "Wrong size on UFirebaseUser");

// Class EasyFirebase.FirebaseValueListener
// 0x0020 (0x0050 - 0x0030)
class UFirebaseValueListener final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnEvent;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseValueListener* RunValueListener(class UFirebaseValueListener* Listener);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseValueListener">();
	}
	static class UFirebaseValueListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseValueListener>();
	}
};
static_assert(alignof(UFirebaseValueListener) == 0x000008, "Wrong alignment on UFirebaseValueListener");
static_assert(sizeof(UFirebaseValueListener) == 0x000050, "Wrong size on UFirebaseValueListener");
static_assert(offsetof(UFirebaseValueListener, OnEvent) == 0x000030, "Member 'UFirebaseValueListener::OnEvent' has a wrong offset!");

// Class EasyFirebase.FirebaseVariant
// 0x0088 (0x00B0 - 0x0028)
class UFirebaseVariant final : public UObject
{
public:
	EVariantType                                  DataType;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Int64Value;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatValue;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BoolValue;                                         // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StringValue;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFirebaseVariant*>               VectorValue;                                       // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, class UFirebaseVariant*>  MapValue;                                          // 0x0060(0x0050)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UFirebaseVariant* CreateVariantBool(bool Value);
	static class UFirebaseVariant* CreateVariantFloat(float Value);
	static class UFirebaseVariant* CreateVariantInt64(int64 Value);
	static class UFirebaseVariant* CreateVariantMap(const TMap<class FString, class UFirebaseVariant*>& Value);
	static class UFirebaseVariant* CreateVariantString(const class FString& Value);
	static class UFirebaseVariant* CreateVariantVector(const TArray<class UFirebaseVariant*>& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseVariant">();
	}
	static class UFirebaseVariant* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseVariant>();
	}
};
static_assert(alignof(UFirebaseVariant) == 0x000008, "Wrong alignment on UFirebaseVariant");
static_assert(sizeof(UFirebaseVariant) == 0x0000B0, "Wrong size on UFirebaseVariant");
static_assert(offsetof(UFirebaseVariant, DataType) == 0x000028, "Member 'UFirebaseVariant::DataType' has a wrong offset!");
static_assert(offsetof(UFirebaseVariant, Int64Value) == 0x000030, "Member 'UFirebaseVariant::Int64Value' has a wrong offset!");
static_assert(offsetof(UFirebaseVariant, FloatValue) == 0x000038, "Member 'UFirebaseVariant::FloatValue' has a wrong offset!");
static_assert(offsetof(UFirebaseVariant, BoolValue) == 0x00003C, "Member 'UFirebaseVariant::BoolValue' has a wrong offset!");
static_assert(offsetof(UFirebaseVariant, StringValue) == 0x000040, "Member 'UFirebaseVariant::StringValue' has a wrong offset!");
static_assert(offsetof(UFirebaseVariant, VectorValue) == 0x000050, "Member 'UFirebaseVariant::VectorValue' has a wrong offset!");
static_assert(offsetof(UFirebaseVariant, MapValue) == 0x000060, "Member 'UFirebaseVariant::MapValue' has a wrong offset!");

}

