#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WemixSDK

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class WemixSDK.PlatformInterface
// 0x0000 (0x0028 - 0x0028)
class IPlatformInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlatformInterface">();
	}
	static class IPlatformInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPlatformInterface>();
	}
};
static_assert(alignof(IPlatformInterface) == 0x000008, "Wrong alignment on IPlatformInterface");
static_assert(sizeof(IPlatformInterface) == 0x000028, "Wrong size on IPlatformInterface");

// Class WemixSDK.WemixAccountInformation
// 0x0038 (0x0060 - 0x0028)
class UWemixAccountInformation final : public USaveGame
{
public:
	class FString                                 UserID;                                            // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Address;                                           // 0x0038(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConnectedWallet;                                   // 0x0048(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChainId;                                           // 0x0058(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WemixAccountInformation">();
	}
	static class UWemixAccountInformation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWemixAccountInformation>();
	}
};
static_assert(alignof(UWemixAccountInformation) == 0x000008, "Wrong alignment on UWemixAccountInformation");
static_assert(sizeof(UWemixAccountInformation) == 0x000060, "Wrong size on UWemixAccountInformation");
static_assert(offsetof(UWemixAccountInformation, UserID) == 0x000028, "Member 'UWemixAccountInformation::UserID' has a wrong offset!");
static_assert(offsetof(UWemixAccountInformation, Address) == 0x000038, "Member 'UWemixAccountInformation::Address' has a wrong offset!");
static_assert(offsetof(UWemixAccountInformation, ConnectedWallet) == 0x000048, "Member 'UWemixAccountInformation::ConnectedWallet' has a wrong offset!");
static_assert(offsetof(UWemixAccountInformation, ChainId) == 0x000058, "Member 'UWemixAccountInformation::ChainId' has a wrong offset!");

// Class WemixSDK.WemixSDKBPLibrary
// 0x0000 (0x0028 - 0x0028)
class UWemixSDKBPLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float WemixSDKSampleFunction(float Param);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WemixSDKBPLibrary">();
	}
	static class UWemixSDKBPLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWemixSDKBPLibrary>();
	}
};
static_assert(alignof(UWemixSDKBPLibrary) == 0x000008, "Wrong alignment on UWemixSDKBPLibrary");
static_assert(sizeof(UWemixSDKBPLibrary) == 0x000028, "Wrong size on UWemixSDKBPLibrary");

// Class WemixSDK.WemixWebBrowser
// 0x0058 (0x0160 - 0x0108)
class UWemixWebBrowser final : public UWidget
{
public:
	UMulticastInlineDelegateProperty_             OnUrlChanged;                                      // 0x0108(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnBeforePopup;                                     // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnConsoleMessage;                                  // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 InitialURL;                                        // 0x0138(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsTransparency;                             // 0x0148(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_149[0x17];                                     // 0x0149(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void UnrealSendMessage(const class FString& Name_0, const class FString& Body);

	void BindUObject(const class FString& Name_0, class UObject* Object, bool bIsPermanent);
	void ExecuteJavascript(const class FString& ScriptText);
	void LoadString(const class FString& Contents, const class FString& DummyURL);
	void LoadURL(const class FString& NewURL);
	void OnBeforePopup__DelegateSignature(const class FString& URL, const class FString& Frame);
	void OnConsoleMessage__DelegateSignature(const class FString& Message, const class FString& Source, int32 Line);
	void OnUrlChanged__DelegateSignature(const class FText& Text);

	class FText GetTitleText() const;
	class FString GetUrl() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WemixWebBrowser">();
	}
	static class UWemixWebBrowser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWemixWebBrowser>();
	}
};
static_assert(alignof(UWemixWebBrowser) == 0x000008, "Wrong alignment on UWemixWebBrowser");
static_assert(sizeof(UWemixWebBrowser) == 0x000160, "Wrong size on UWemixWebBrowser");
static_assert(offsetof(UWemixWebBrowser, OnUrlChanged) == 0x000108, "Member 'UWemixWebBrowser::OnUrlChanged' has a wrong offset!");
static_assert(offsetof(UWemixWebBrowser, OnBeforePopup) == 0x000118, "Member 'UWemixWebBrowser::OnBeforePopup' has a wrong offset!");
static_assert(offsetof(UWemixWebBrowser, OnConsoleMessage) == 0x000128, "Member 'UWemixWebBrowser::OnConsoleMessage' has a wrong offset!");
static_assert(offsetof(UWemixWebBrowser, InitialURL) == 0x000138, "Member 'UWemixWebBrowser::InitialURL' has a wrong offset!");
static_assert(offsetof(UWemixWebBrowser, bSupportsTransparency) == 0x000148, "Member 'UWemixWebBrowser::bSupportsTransparency' has a wrong offset!");

// Class WemixSDK.WemixWebBrowserWidget
// 0x0000 (0x0240 - 0x0240)
class UWemixWebBrowserWidget final : public UUserWidget
{
public:
	class FString GetSignMessage();
	class FString GetWebBaseUrl();
	class FString GetWemixHost();
	bool IsDarkMode();
	void OnCancel();
	void OnDisconnectEvent();
	void OnFailedConnect(const class FString& Error);
	void OnFailedSign(const class FString& Error);
	void OnSuccessConnect(const class FString& Data);
	void OnSuccessForcedDisconnect();
	void OnSuccessSign(const class FString& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WemixWebBrowserWidget">();
	}
	static class UWemixWebBrowserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWemixWebBrowserWidget>();
	}
};
static_assert(alignof(UWemixWebBrowserWidget) == 0x000008, "Wrong alignment on UWemixWebBrowserWidget");
static_assert(sizeof(UWemixWebBrowserWidget) == 0x000240, "Wrong size on UWemixWebBrowserWidget");

}

