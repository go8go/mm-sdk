#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyFirebase

#include "Basic.hpp"

#include "EasyFirebase_classes.hpp"
#include "EasyFirebase_parameters.hpp"


namespace SDK
{

// Function EasyFirebase.FirebaseAppleCredential.RequestAppleCredential
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseAppleCredential*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseAppleCredential* UFirebaseAppleCredential::RequestAppleCredential()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseAppleCredential", "RequestAppleCredential");

	Params::FirebaseAppleCredential_RequestAppleCredential Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.GetFirebaseAuth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseAuth*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseAuth* UFirebaseAuth::GetFirebaseAuth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseAuth", "GetFirebaseAuth");

	Params::FirebaseAuth_GetFirebaseAuth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.AddAuthStateListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseAuthStateListener*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseAuthStateListener* UFirebaseAuth::AddAuthStateListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "AddAuthStateListener");

	Params::FirebaseAuth_AddAuthStateListener Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.CreateUserWithEmailAndPassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Passwd                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::CreateUserWithEmailAndPassword(const class FString& Email, const class FString& Passwd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "CreateUserWithEmailAndPassword");

	Params::FirebaseAuth_CreateUserWithEmailAndPassword Parms{};

	Parms.Email = std::move(Email);
	Parms.Passwd = std::move(Passwd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.CreateUserWithEmailAndPasswordLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::CreateUserWithEmailAndPasswordLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "CreateUserWithEmailAndPasswordLastResult");

	Params::FirebaseAuth_CreateUserWithEmailAndPasswordLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.current_user
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseUser*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseUser* UFirebaseAuth::Current_user()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "current_user");

	Params::FirebaseAuth_Current_user Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.FetchProvidersForEmail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureFetchProvideResult*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureFetchProvideResult* UFirebaseAuth::FetchProvidersForEmail(const class FString& Email)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "FetchProvidersForEmail");

	Params::FirebaseAuth_FetchProvidersForEmail Parms{};

	Parms.Email = std::move(Email);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.FetchProvidersForEmailLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureFetchProvideResult*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureFetchProvideResult* UFirebaseAuth::FetchProvidersForEmailLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "FetchProvidersForEmailLastResult");

	Params::FirebaseAuth_FetchProvidersForEmailLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.GetPlayServiceCredential
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ServerAuthCode                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseCredential*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseCredential* UFirebaseAuth::GetPlayServiceCredential(const class FString& ServerAuthCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "GetPlayServiceCredential");

	Params::FirebaseAuth_GetPlayServiceCredential Parms{};

	Parms.ServerAuthCode = std::move(ServerAuthCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.RemoveAuthStateListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseAuthStateListener*       Listener                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseAuth::RemoveAuthStateListener(class UFirebaseAuthStateListener* Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "RemoveAuthStateListener");

	Params::FirebaseAuth_RemoveAuthStateListener Parms{};

	Parms.Listener = Listener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseAuth.SendPasswordResetEmail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseAuth::SendPasswordResetEmail(const class FString& Email)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SendPasswordResetEmail");

	Params::FirebaseAuth_SendPasswordResetEmail Parms{};

	Parms.Email = std::move(Email);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SendPasswordResetEmailLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseAuth::SendPasswordResetEmailLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SendPasswordResetEmailLastResult");

	Params::FirebaseAuth_SendPasswordResetEmailLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInAndRetrieveDataWithCredential
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseCredential*              Credential                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureSignInResult*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureSignInResult* UFirebaseAuth::SignInAndRetrieveDataWithCredential(class UFirebaseCredential* Credential)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInAndRetrieveDataWithCredential");

	Params::FirebaseAuth_SignInAndRetrieveDataWithCredential Parms{};

	Parms.Credential = Credential;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInAndRetrieveDataWithCredentialLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureSignInResult*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureSignInResult* UFirebaseAuth::SignInAndRetrieveDataWithCredentialLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInAndRetrieveDataWithCredentialLastResult");

	Params::FirebaseAuth_SignInAndRetrieveDataWithCredentialLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInAnonymously
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::SignInAnonymously()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInAnonymously");

	Params::FirebaseAuth_SignInAnonymously Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInWithCredential
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseCredential*              Credential                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::SignInWithCredential(class UFirebaseCredential* Credential)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInWithCredential");

	Params::FirebaseAuth_SignInWithCredential Parms{};

	Parms.Credential = Credential;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInWithCredentialLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::SignInWithCredentialLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInWithCredentialLastResult");

	Params::FirebaseAuth_SignInWithCredentialLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInWithCustomToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Token                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::SignInWithCustomToken(const class FString& Token)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInWithCustomToken");

	Params::FirebaseAuth_SignInWithCustomToken Parms{};

	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInWithCustomTokenLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::SignInWithCustomTokenLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInWithCustomTokenLastResult");

	Params::FirebaseAuth_SignInWithCustomTokenLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInWithEmailAndPassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Passwd                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::SignInWithEmailAndPassword(const class FString& Email, const class FString& Passwd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInWithEmailAndPassword");

	Params::FirebaseAuth_SignInWithEmailAndPassword Parms{};

	Parms.Email = std::move(Email);
	Parms.Passwd = std::move(Passwd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignInWithEmailAndPasswordLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseAuth::SignInWithEmailAndPasswordLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignInWithEmailAndPasswordLastResult");

	Params::FirebaseAuth_SignInWithEmailAndPasswordLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseAuth.SignOut
// (Final, Native, Public, BlueprintCallable)

void UFirebaseAuth::SignOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseAuth", "SignOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseAuthStateListener.RunValueListener
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseAuthStateListener*       Listener                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseAuthStateListener*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseAuthStateListener* UFirebaseAuthStateListener::RunValueListener(class UFirebaseAuthStateListener* Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseAuthStateListener", "RunValueListener");

	Params::FirebaseAuthStateListener_RunValueListener Parms{};

	Parms.Listener = Listener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseChildListener.RunChildListener
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseChildListener*           Listener                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseChildListener*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseChildListener* UFirebaseChildListener::RunChildListener(class UFirebaseChildListener* Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseChildListener", "RunChildListener");

	Params::FirebaseChildListener_RunChildListener Parms{};

	Parms.Listener = Listener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseCredential.is_valid
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseCredential::Is_valid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseCredential", "is_valid");

	Params::FirebaseCredential_Is_valid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseCredential.provider
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseCredential::Provider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseCredential", "provider");

	Params::FirebaseCredential_Provider Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.AddChildListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseChildListener*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseChildListener* UFirebaseQuery::AddChildListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "AddChildListener");

	Params::FirebaseQuery_AddChildListener Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.AddValueListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseValueListener*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseValueListener* UFirebaseQuery::AddValueListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "AddValueListener");

	Params::FirebaseQuery_AddValueListener Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.EndAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 OrderValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::EndAt(class UFirebaseVariant* OrderValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "EndAt");

	Params::FirebaseQuery_EndAt Parms{};

	Parms.OrderValue = OrderValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.EndWithKeyAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 OrderValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::EndWithKeyAt(class UFirebaseVariant* OrderValue, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "EndWithKeyAt");

	Params::FirebaseQuery_EndWithKeyAt Parms{};

	Parms.OrderValue = OrderValue;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.EqualTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 OrderValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::EqualTo(class UFirebaseVariant* OrderValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "EqualTo");

	Params::FirebaseQuery_EqualTo Parms{};

	Parms.OrderValue = OrderValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.EqualWithKeyTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 OrderValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::EqualWithKeyTo(class UFirebaseVariant* OrderValue, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "EqualWithKeyTo");

	Params::FirebaseQuery_EqualWithKeyTo Parms{};

	Parms.OrderValue = OrderValue;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.GetReference
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseDatabaseRef*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseDatabaseRef* UFirebaseQuery::GetReference()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "GetReference");

	Params::FirebaseQuery_GetReference Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureDataSnapshot*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureDataSnapshot* UFirebaseQuery::GetValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "GetValue");

	Params::FirebaseQuery_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.GetValueLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureDataSnapshot*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureDataSnapshot* UFirebaseQuery::GetValueLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "GetValueLastResult");

	Params::FirebaseQuery_GetValueLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.isValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseQuery::IsValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "isValid");

	Params::FirebaseQuery_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.LimitToFirst
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Limit                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::LimitToFirst(int64 Limit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "LimitToFirst");

	Params::FirebaseQuery_LimitToFirst Parms{};

	Parms.Limit = Limit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.LimitToLast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   Limit                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::LimitToLast(int64 Limit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "LimitToLast");

	Params::FirebaseQuery_LimitToLast Parms{};

	Parms.Limit = Limit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.OrderByChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::OrderByChild(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "OrderByChild");

	Params::FirebaseQuery_OrderByChild Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.OrderByKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::OrderByKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "OrderByKey");

	Params::FirebaseQuery_OrderByKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.OrderByPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::OrderByPriority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "OrderByPriority");

	Params::FirebaseQuery_OrderByPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.OrderByValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::OrderByValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "OrderByValue");

	Params::FirebaseQuery_OrderByValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.RemoveAllChildListeners
// (Final, Native, Public, BlueprintCallable)

void UFirebaseQuery::RemoveAllChildListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "RemoveAllChildListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseQuery.RemoveAllValueListeners
// (Final, Native, Public, BlueprintCallable)

void UFirebaseQuery::RemoveAllValueListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "RemoveAllValueListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseQuery.RemoveChildListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseChildListener*           Listener                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseQuery::RemoveChildListener(class UFirebaseChildListener* Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "RemoveChildListener");

	Params::FirebaseQuery_RemoveChildListener Parms{};

	Parms.Listener = Listener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseQuery.RemoveValueListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseValueListener*           Listner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseQuery::RemoveValueListener(class UFirebaseValueListener* Listner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "RemoveValueListener");

	Params::FirebaseQuery_RemoveValueListener Parms{};

	Parms.Listner = Listner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseQuery.SetKeepSynchronized
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Keep_sync                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseQuery::SetKeepSynchronized(bool Keep_sync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "SetKeepSynchronized");

	Params::FirebaseQuery_SetKeepSynchronized Parms{};

	Parms.Keep_sync = Keep_sync;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseQuery.StartAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 OrderValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::StartAt(class UFirebaseVariant* OrderValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "StartAt");

	Params::FirebaseQuery_StartAt Parms{};

	Parms.OrderValue = OrderValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseQuery.StartWithKeyAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 OrderValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseQuery*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseQuery* UFirebaseQuery::StartWithKeyAt(class UFirebaseVariant* OrderValue, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseQuery", "StartWithKeyAt");

	Params::FirebaseQuery_StartWithKeyAt Parms{};

	Parms.OrderValue = OrderValue;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.GetRootDatabaseRef
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseDatabaseRef*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseDatabaseRef* UFirebaseDatabaseRef::GetRootDatabaseRef()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseDatabaseRef", "GetRootDatabaseRef");

	Params::FirebaseDatabaseRef_GetRootDatabaseRef Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.GetRootDatabaseRefFromUrl
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           URL_0                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseDatabaseRef*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseDatabaseRef* UFirebaseDatabaseRef::GetRootDatabaseRefFromUrl(const class FString& URL_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseDatabaseRef", "GetRootDatabaseRefFromUrl");

	Params::FirebaseDatabaseRef_GetRootDatabaseRefFromUrl Parms{};

	Parms.URL_0 = std::move(URL_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.Child
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseDatabaseRef*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseDatabaseRef* UFirebaseDatabaseRef::Child(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "Child");

	Params::FirebaseDatabaseRef_Child Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.GetParent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseDatabaseRef*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseDatabaseRef* UFirebaseDatabaseRef::GetParent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "GetParent");

	Params::FirebaseDatabaseRef_GetParent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.GetRoot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseDatabaseRef*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseDatabaseRef* UFirebaseDatabaseRef::GetRoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "GetRoot");

	Params::FirebaseDatabaseRef_GetRoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.GoOffline
// (Final, Native, Public, BlueprintCallable)

void UFirebaseDatabaseRef::GoOffline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "GoOffline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseDatabaseRef.GoOnline
// (Final, Native, Public, BlueprintCallable)

void UFirebaseDatabaseRef::GoOnline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "GoOnline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseDatabaseRef.IsDatabaseValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseDatabaseRef::IsDatabaseValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "IsDatabaseValid");

	Params::FirebaseDatabaseRef_IsDatabaseValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.IsRoot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseDatabaseRef::IsRoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "IsRoot");

	Params::FirebaseDatabaseRef_IsRoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.Key
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseDatabaseRef::Key()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "Key");

	Params::FirebaseDatabaseRef_Key Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.PushChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseDatabaseRef*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseDatabaseRef* UFirebaseDatabaseRef::PushChild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "PushChild");

	Params::FirebaseDatabaseRef_PushChild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.RemoveValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::RemoveValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "RemoveValue");

	Params::FirebaseDatabaseRef_RemoveValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.RemoveValueLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::RemoveValueLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "RemoveValueLastResult");

	Params::FirebaseDatabaseRef_RemoveValueLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.SetPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 Variant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::SetPriority(class UFirebaseVariant* Variant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "SetPriority");

	Params::FirebaseDatabaseRef_SetPriority Parms{};

	Parms.Variant = Variant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.SetPriorityLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::SetPriorityLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "SetPriorityLastResult");

	Params::FirebaseDatabaseRef_SetPriorityLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 Variant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::SetValue(class UFirebaseVariant* Variant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "SetValue");

	Params::FirebaseDatabaseRef_SetValue Parms{};

	Parms.Variant = Variant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.SetValueAndPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseVariant*                 Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::SetValueAndPriority(class UFirebaseVariant* Value, class UFirebaseVariant* Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "SetValueAndPriority");

	Params::FirebaseDatabaseRef_SetValueAndPriority Parms{};

	Parms.Value = Value;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.SetValueAndPriorityLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::SetValueAndPriorityLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "SetValueAndPriorityLastResult");

	Params::FirebaseDatabaseRef_SetValueAndPriorityLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.SetValueLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::SetValueLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "SetValueLastResult");

	Params::FirebaseDatabaseRef_SetValueLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.UpdateChildren
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseVariant*                 Values                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::UpdateChildren(class UFirebaseVariant* Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "UpdateChildren");

	Params::FirebaseDatabaseRef_UpdateChildren Parms{};

	Parms.Values = Values;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.UpdateChildrenLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseDatabaseRef::UpdateChildrenLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "UpdateChildrenLastResult");

	Params::FirebaseDatabaseRef_UpdateChildrenLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDatabaseRef.URL
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseDatabaseRef::URL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDatabaseRef", "URL");

	Params::FirebaseDatabaseRef_URL Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.Child
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseDataSnapshot*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseDataSnapshot* UFirebaseDataSnapshot::Child(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "Child");

	Params::FirebaseDataSnapshot_Child Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.Children
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFirebaseDataSnapshot*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFirebaseDataSnapshot*> UFirebaseDataSnapshot::Children()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "Children");

	Params::FirebaseDataSnapshot_Children Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.ChildrenCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UFirebaseDataSnapshot::ChildrenCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "ChildrenCount");

	Params::FirebaseDataSnapshot_ChildrenCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.Exists
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseDataSnapshot::Exists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "Exists");

	Params::FirebaseDataSnapshot_Exists Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.HasChild
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseDataSnapshot::HasChild(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "HasChild");

	Params::FirebaseDataSnapshot_HasChild Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.HasChildren
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseDataSnapshot::HasChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "HasChildren");

	Params::FirebaseDataSnapshot_HasChildren Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.isValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseDataSnapshot::IsValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "isValid");

	Params::FirebaseDataSnapshot_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.Key
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseDataSnapshot::Key()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "Key");

	Params::FirebaseDataSnapshot_Key Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.Priority
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseVariant*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseVariant* UFirebaseDataSnapshot::Priority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "Priority");

	Params::FirebaseDataSnapshot_Priority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseDataSnapshot.Value
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseVariant*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseVariant* UFirebaseDataSnapshot::Value()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseDataSnapshot", "Value");

	Params::FirebaseDataSnapshot_Value Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFacebookCredential.RequestFacebookCredential
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFacebookCredential*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFacebookCredential* UFirebaseFacebookCredential::RequestFacebookCredential()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFacebookCredential", "RequestFacebookCredential");

	Params::FirebaseFacebookCredential_RequestFacebookCredential Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.ActivateFetched
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseFunctionLibrary::ActivateFetched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "ActivateFetched");

	Params::FirebaseFunctionLibrary_ActivateFetched Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.CrashTest
// (Final, Native, Static, Public, BlueprintCallable)

void UFirebaseFunctionLibrary::CrashTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "CrashTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.CrashTest2
// (Final, Native, Static, Public, BlueprintCallable)

void UFirebaseFunctionLibrary::CrashTest2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "CrashTest2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.CrashTest3
// (Final, Native, Static, Public, BlueprintCallable)

void UFirebaseFunctionLibrary::CrashTest3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "CrashTest3");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.Fetch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   Cache_expiration_in_seconds                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseFunctionLibrary::Fetch(int64 Cache_expiration_in_seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "Fetch");

	Params::FirebaseFunctionLibrary_Fetch Parms{};

	Parms.Cache_expiration_in_seconds = Cache_expiration_in_seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.FireBaseInitialize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseFunctionLibrary::FireBaseInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "FireBaseInitialize");

	Params::FirebaseFunctionLibrary_FireBaseInitialize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.ForceCrash
// (Final, Native, Static, Public, BlueprintCallable)

void UFirebaseFunctionLibrary::ForceCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "ForceCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.GetBoolean
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FValueInfo                       Info                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseFunctionLibrary::GetBoolean(const class FString& Key, struct FValueInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "GetBoolean");

	Params::FirebaseFunctionLibrary_GetBoolean Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Info != nullptr)
		*Info = std::move(Parms.Info);

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.GetDouble
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FValueInfo                       Info                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFirebaseFunctionLibrary::GetDouble(const class FString& Key, struct FValueInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "GetDouble");

	Params::FirebaseFunctionLibrary_GetDouble Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Info != nullptr)
		*Info = std::move(Parms.Info);

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.GetKeys
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UFirebaseFunctionLibrary::GetKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "GetKeys");

	Params::FirebaseFunctionLibrary_GetKeys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.GetKeysByPrefix
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UFirebaseFunctionLibrary::GetKeysByPrefix(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "GetKeysByPrefix");

	Params::FirebaseFunctionLibrary_GetKeysByPrefix Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.GetLong
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FValueInfo                       Info                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UFirebaseFunctionLibrary::GetLong(const class FString& Key, struct FValueInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "GetLong");

	Params::FirebaseFunctionLibrary_GetLong Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Info != nullptr)
		*Info = std::move(Parms.Info);

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.GetString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FValueInfo                       Info                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseFunctionLibrary::GetString(const class FString& Key, struct FValueInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "GetString");

	Params::FirebaseFunctionLibrary_GetString Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Info != nullptr)
		*Info = std::move(Parms.Info);

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.IsSupportAppleSignIn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseFunctionLibrary::IsSupportAppleSignIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "IsSupportAppleSignIn");

	Params::FirebaseFunctionLibrary_IsSupportAppleSignIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogCustomEvent(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogCustomEvent");

	Params::FirebaseFunctionLibrary_LogCustomEvent Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomEventWithParameterList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAnalyticsParam>          ParameterList                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogCustomEventWithParameterList(const class FString& Name_0, const TArray<struct FAnalyticsParam>& ParameterList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogCustomEventWithParameterList");

	Params::FirebaseFunctionLibrary_LogCustomEventWithParameterList Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.ParameterList = std::move(ParameterList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomFloatEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Parameter_name                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Parameter_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogCustomFloatEvent(const class FString& Name_0, const class FString& Parameter_name, float Parameter_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogCustomFloatEvent");

	Params::FirebaseFunctionLibrary_LogCustomFloatEvent Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Parameter_name = std::move(Parameter_name);
	Parms.Parameter_value = Parameter_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomInt64Event
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Parameter_name                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Parameter_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogCustomInt64Event(const class FString& Name_0, const class FString& Parameter_name, int64 Parameter_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogCustomInt64Event");

	Params::FirebaseFunctionLibrary_LogCustomInt64Event Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Parameter_name = std::move(Parameter_name);
	Parms.Parameter_value = Parameter_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomIntEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Parameter_name                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Parameter_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogCustomIntEvent(const class FString& Name_0, const class FString& Parameter_name, int32 Parameter_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogCustomIntEvent");

	Params::FirebaseFunctionLibrary_LogCustomIntEvent Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Parameter_name = std::move(Parameter_name);
	Parms.Parameter_value = Parameter_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomStringEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Parameter_name                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Parameter_value                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogCustomStringEvent(const class FString& Name_0, const class FString& Parameter_name, const class FString& Parameter_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogCustomStringEvent");

	Params::FirebaseFunctionLibrary_LogCustomStringEvent Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Parameter_name = std::move(Parameter_name);
	Parms.Parameter_value = std::move(Parameter_value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAnalyticsEvent                         Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogEvent(EAnalyticsEvent Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogEvent");

	Params::FirebaseFunctionLibrary_LogEvent Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogFloatEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAnalyticsEvent                         Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnalyticsParameter                     Parameter_name                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Parameter_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogFloatEvent(EAnalyticsEvent Name_0, EAnalyticsParameter Parameter_name, float Parameter_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogFloatEvent");

	Params::FirebaseFunctionLibrary_LogFloatEvent Parms{};

	Parms.Name_0 = Name_0;
	Parms.Parameter_name = Parameter_name;
	Parms.Parameter_value = Parameter_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogInt64Event
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAnalyticsEvent                         Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnalyticsParameter                     Parameter_name                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Parameter_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogInt64Event(EAnalyticsEvent Name_0, EAnalyticsParameter Parameter_name, int64 Parameter_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogInt64Event");

	Params::FirebaseFunctionLibrary_LogInt64Event Parms{};

	Parms.Name_0 = Name_0;
	Parms.Parameter_name = Parameter_name;
	Parms.Parameter_value = Parameter_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogIntEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAnalyticsEvent                         Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnalyticsParameter                     Parameter_name                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Parameter_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogIntEvent(EAnalyticsEvent Name_0, EAnalyticsParameter Parameter_name, int32 Parameter_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogIntEvent");

	Params::FirebaseFunctionLibrary_LogIntEvent Parms{};

	Parms.Name_0 = Name_0;
	Parms.Parameter_name = Parameter_name;
	Parms.Parameter_value = Parameter_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.LogStringEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EAnalyticsEvent                         Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnalyticsParameter                     Parameter_name                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Parameter_value                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::LogStringEvent(EAnalyticsEvent Name_0, EAnalyticsParameter Parameter_name, const class FString& Parameter_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "LogStringEvent");

	Params::FirebaseFunctionLibrary_LogStringEvent Parms{};

	Parms.Name_0 = Name_0;
	Parms.Parameter_name = Parameter_name;
	Parms.Parameter_value = std::move(Parameter_value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.PollMessage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFirebaseMessage                 Message                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseFunctionLibrary::PollMessage(struct FFirebaseMessage* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "PollMessage");

	Params::FirebaseFunctionLibrary_PollMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Message != nullptr)
		*Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.PollRegistrationToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseFunctionLibrary::PollRegistrationToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "PollRegistrationToken");

	Params::FirebaseFunctionLibrary_PollRegistrationToken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.RequestPermission
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseFunctionLibrary::RequestPermission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "RequestPermission");

	Params::FirebaseFunctionLibrary_RequestPermission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.RequestPermissionLastResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseFunctionLibrary::RequestPermissionLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "RequestPermissionLastResult");

	Params::FirebaseFunctionLibrary_RequestPermissionLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SetBool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::SetBool(const class FString& Key, const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SetBool");

	Params::FirebaseFunctionLibrary_SetBool Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SetCurrentScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Screen_name                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Screen_class                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::SetCurrentScreen(const class FString& Screen_name, const class FString& Screen_class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SetCurrentScreen");

	Params::FirebaseFunctionLibrary_SetCurrentScreen Parms{};

	Parms.Screen_name = std::move(Screen_name);
	Parms.Screen_class = std::move(Screen_class);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SetDefaults
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFirebaseConfigKeyValueVariant>Defaults                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::SetDefaults(const TArray<struct FFirebaseConfigKeyValueVariant>& Defaults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SetDefaults");

	Params::FirebaseFunctionLibrary_SetDefaults Parms{};

	Parms.Defaults = std::move(Defaults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SetFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::SetFloat(const class FString& Key, const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SetFloat");

	Params::FirebaseFunctionLibrary_SetFloat Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SetInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::SetInteger(const class FString& Key, const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SetInteger");

	Params::FirebaseFunctionLibrary_SetInteger Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SetString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::SetString(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SetString");

	Params::FirebaseFunctionLibrary_SetString Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SetUserId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           UserID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::SetUserId(const class FString& UserID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SetUserId");

	Params::FirebaseFunctionLibrary_SetUserId Parms{};

	Parms.UserID = std::move(UserID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SetUserProperty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Property                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::SetUserProperty(const class FString& Name_0, const class FString& Property)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SetUserProperty");

	Params::FirebaseFunctionLibrary_SetUserProperty Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Property = std::move(Property);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.Subscribe
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Topic                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseFunctionLibrary::Subscribe(const class FString& Topic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "Subscribe");

	Params::FirebaseFunctionLibrary_Subscribe Parms{};

	Parms.Topic = std::move(Topic);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.SubscribeLastResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseFunctionLibrary::SubscribeLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "SubscribeLastResult");

	Params::FirebaseFunctionLibrary_SubscribeLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.Unsubscribe
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Topic                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseFunctionLibrary::Unsubscribe(const class FString& Topic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "Unsubscribe");

	Params::FirebaseFunctionLibrary_Unsubscribe Parms{};

	Parms.Topic = std::move(Topic);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.UnsubscribeLastResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseFunctionLibrary::UnsubscribeLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "UnsubscribeLastResult");

	Params::FirebaseFunctionLibrary_UnsubscribeLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFunctionLibrary.WriteError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Log                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::WriteError(const class FString& Log, int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "WriteError");

	Params::FirebaseFunctionLibrary_WriteError Parms{};

	Parms.Log = std::move(Log);
	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFunctionLibrary.WriteLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Log                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFirebaseFunctionLibrary::WriteLog(const class FString& Log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFunctionLibrary", "WriteLog");

	Params::FirebaseFunctionLibrary_WriteLog Parms{};

	Parms.Log = std::move(Log);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyFirebase.FirebaseFutureDataSnapshot.WaitFuture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureDataSnapshot*      Future                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureDataSnapshot*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureDataSnapshot* UFirebaseFutureDataSnapshot::WaitFuture(class UFirebaseFutureDataSnapshot* Future)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFutureDataSnapshot", "WaitFuture");

	Params::FirebaseFutureDataSnapshot_WaitFuture Parms{};

	Parms.Future = Future;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFutureFetchProvideResult.WaitFuture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureFetchProvideResult*Future                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureFetchProvideResult*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureFetchProvideResult* UFirebaseFutureFetchProvideResult::WaitFuture(class UFirebaseFutureFetchProvideResult* Future)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFutureFetchProvideResult", "WaitFuture");

	Params::FirebaseFutureFetchProvideResult_WaitFuture Parms{};

	Parms.Future = Future;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFutureSignInResult.WaitFuture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureSignInResult*      Future                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureSignInResult*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureSignInResult* UFirebaseFutureSignInResult::WaitFuture(class UFirebaseFutureSignInResult* Future)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFutureSignInResult", "WaitFuture");

	Params::FirebaseFutureSignInResult_WaitFuture Parms{};

	Parms.Future = Future;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFutureString.WaitFuture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureString*            Future                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureString*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureString* UFirebaseFutureString::WaitFuture(class UFirebaseFutureString* Future)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFutureString", "WaitFuture");

	Params::FirebaseFutureString_WaitFuture Parms{};

	Parms.Future = Future;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFutureUser.WaitFuture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureUser*              Future                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseFutureUser::WaitFuture(class UFirebaseFutureUser* Future)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFutureUser", "WaitFuture");

	Params::FirebaseFutureUser_WaitFuture Parms{};

	Parms.Future = Future;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseFutureVoid.WaitFuture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              Future                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseFutureVoid::WaitFuture(class UFirebaseFutureVoid* Future)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseFutureVoid", "WaitFuture");

	Params::FirebaseFutureVoid_WaitFuture Parms{};

	Parms.Future = Future;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseGameCenterCredential.RequestGameCenterCredential
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseGameCenterCredential*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseGameCenterCredential* UFirebaseGameCenterCredential::RequestGameCenterCredential()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseGameCenterCredential", "RequestGameCenterCredential");

	Params::FirebaseGameCenterCredential_RequestGameCenterCredential Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseGoogleCredential.RequestGoogleCredential
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseGoogleCredential*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseGoogleCredential* UFirebaseGoogleCredential::RequestGoogleCredential()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseGoogleCredential", "RequestGoogleCredential");

	Params::FirebaseGoogleCredential_RequestGoogleCredential Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseGoogleServerAuthCode.RequestGoogleServerAuthCode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseGoogleServerAuthCode*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseGoogleServerAuthCode* UFirebaseGoogleServerAuthCode::RequestGoogleServerAuthCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseGoogleServerAuthCode", "RequestGoogleServerAuthCode");

	Params::FirebaseGoogleServerAuthCode_RequestGoogleServerAuthCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseMessageInitlize.FirebaseMessageInitlize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseMessageInitlize*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseMessageInitlize* UFirebaseMessageInitlize::FirebaseMessageInitlize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseMessageInitlize", "FirebaseMessageInitlize");

	Params::FirebaseMessageInitlize_FirebaseMessageInitlize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUserInfoInterface.display_name
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseUserInfoInterface::Display_name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUserInfoInterface", "display_name");

	Params::FirebaseUserInfoInterface_Display_name Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUserInfoInterface.email
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseUserInfoInterface::Email()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUserInfoInterface", "email");

	Params::FirebaseUserInfoInterface_Email Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUserInfoInterface.phone_number
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseUserInfoInterface::Phone_number()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUserInfoInterface", "phone_number");

	Params::FirebaseUserInfoInterface_Phone_number Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUserInfoInterface.photo_url
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseUserInfoInterface::Photo_url()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUserInfoInterface", "photo_url");

	Params::FirebaseUserInfoInterface_Photo_url Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUserInfoInterface.provider_id
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseUserInfoInterface::Provider_id()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUserInfoInterface", "provider_id");

	Params::FirebaseUserInfoInterface_Provider_id Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUserInfoInterface.uid
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFirebaseUserInfoInterface::Uid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUserInfoInterface", "uid");

	Params::FirebaseUserInfoInterface_Uid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.Delete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::Delete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "Delete");

	Params::FirebaseUser_Delete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.DeleteLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::DeleteLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "DeleteLastResult");

	Params::FirebaseUser_DeleteLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.GetToken
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ForceRefresh                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureString*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureString* UFirebaseUser::GetToken(bool ForceRefresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "GetToken");

	Params::FirebaseUser_GetToken Parms{};

	Parms.ForceRefresh = ForceRefresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.GetTokenLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureString*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureString* UFirebaseUser::GetTokenLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "GetTokenLastResult");

	Params::FirebaseUser_GetTokenLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.is_anonymous
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseUser::Is_anonymous()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "is_anonymous");

	Params::FirebaseUser_Is_anonymous Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.is_email_verified
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirebaseUser::Is_email_verified()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "is_email_verified");

	Params::FirebaseUser_Is_email_verified Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.LinkAndRetrieveDataWithCredential
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseCredential*              Crdenntial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureSignInResult*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureSignInResult* UFirebaseUser::LinkAndRetrieveDataWithCredential(class UFirebaseCredential* Crdenntial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "LinkAndRetrieveDataWithCredential");

	Params::FirebaseUser_LinkAndRetrieveDataWithCredential Parms{};

	Parms.Crdenntial = Crdenntial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.LinkAndRetrieveDataWithCredentialLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureSignInResult*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureSignInResult* UFirebaseUser::LinkAndRetrieveDataWithCredentialLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "LinkAndRetrieveDataWithCredentialLastResult");

	Params::FirebaseUser_LinkAndRetrieveDataWithCredentialLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.LinkWithCredential
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseCredential*              Crdenntial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseUser::LinkWithCredential(class UFirebaseCredential* Crdenntial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "LinkWithCredential");

	Params::FirebaseUser_LinkWithCredential Parms{};

	Parms.Crdenntial = Crdenntial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.LinkWithCredentialLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseUser::LinkWithCredentialLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "LinkWithCredentialLastResult");

	Params::FirebaseUser_LinkWithCredentialLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.metadata
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserMetadata                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FUserMetadata UFirebaseUser::Metadata()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "metadata");

	Params::FirebaseUser_Metadata Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.provider_data
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFirebaseUserInfoInterface*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFirebaseUserInfoInterface*> UFirebaseUser::Provider_data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "provider_data");

	Params::FirebaseUser_Provider_data Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.Reauthenticate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseCredential*              Crdenntial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::Reauthenticate(class UFirebaseCredential* Crdenntial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "Reauthenticate");

	Params::FirebaseUser_Reauthenticate Parms{};

	Parms.Crdenntial = Crdenntial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.ReauthenticateAndRetrieveData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseCredential*              Crdenntial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureSignInResult*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureSignInResult* UFirebaseUser::ReauthenticateAndRetrieveData(class UFirebaseCredential* Crdenntial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "ReauthenticateAndRetrieveData");

	Params::FirebaseUser_ReauthenticateAndRetrieveData Parms{};

	Parms.Crdenntial = Crdenntial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.ReauthenticateAndRetrieveDataLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureSignInResult*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureSignInResult* UFirebaseUser::ReauthenticateAndRetrieveDataLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "ReauthenticateAndRetrieveDataLastResult");

	Params::FirebaseUser_ReauthenticateAndRetrieveDataLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.ReauthenticateLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::ReauthenticateLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "ReauthenticateLastResult");

	Params::FirebaseUser_ReauthenticateLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.Reload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "Reload");

	Params::FirebaseUser_Reload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.ReloadLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::ReloadLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "ReloadLastResult");

	Params::FirebaseUser_ReloadLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.SendEmailVerification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::SendEmailVerification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "SendEmailVerification");

	Params::FirebaseUser_SendEmailVerification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.SendEmailVerificationLastResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::SendEmailVerificationLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "SendEmailVerificationLastResult");

	Params::FirebaseUser_SendEmailVerificationLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.Unlink
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Provider                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseUser::Unlink(const class FString& Provider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "Unlink");

	Params::FirebaseUser_Unlink Parms{};

	Parms.Provider = std::move(Provider);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.UpdateEmail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Email_0                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::UpdateEmail(const class FString& Email_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "UpdateEmail");

	Params::FirebaseUser_UpdateEmail Parms{};

	Parms.Email_0 = std::move(Email_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.UpdateEmailLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::UpdateEmailLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "UpdateEmailLastResult");

	Params::FirebaseUser_UpdateEmailLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.UpdatePassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Passwd                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::UpdatePassword(const class FString& Passwd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "UpdatePassword");

	Params::FirebaseUser_UpdatePassword Parms{};

	Parms.Passwd = std::move(Passwd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.UpdatePasswordLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::UpdatePasswordLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "UpdatePasswordLastResult");

	Params::FirebaseUser_UpdatePasswordLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.UpdatePhoneNumberCredential
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseCredential*              Crdenntial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseUser::UpdatePhoneNumberCredential(class UFirebaseCredential* Crdenntial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "UpdatePhoneNumberCredential");

	Params::FirebaseUser_UpdatePhoneNumberCredential Parms{};

	Parms.Crdenntial = Crdenntial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.UpdatePhoneNumberCredentialLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureUser*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureUser* UFirebaseUser::UpdatePhoneNumberCredentialLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "UpdatePhoneNumberCredentialLastResult");

	Params::FirebaseUser_UpdatePhoneNumberCredentialLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.UpdateUserProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserProfile                     Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::UpdateUserProfile(const struct FUserProfile& Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "UpdateUserProfile");

	Params::FirebaseUser_UpdateUserProfile Parms{};

	Parms.Profile = std::move(Profile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseUser.UpdateUserProfileLastResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFirebaseFutureVoid*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseFutureVoid* UFirebaseUser::UpdateUserProfileLastResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FirebaseUser", "UpdateUserProfileLastResult");

	Params::FirebaseUser_UpdateUserProfileLastResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseValueListener.RunValueListener
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFirebaseValueListener*           Listener                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseValueListener*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseValueListener* UFirebaseValueListener::RunValueListener(class UFirebaseValueListener* Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseValueListener", "RunValueListener");

	Params::FirebaseValueListener_RunValueListener Parms{};

	Parms.Listener = Listener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseVariant.CreateVariantBool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseVariant*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseVariant* UFirebaseVariant::CreateVariantBool(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseVariant", "CreateVariantBool");

	Params::FirebaseVariant_CreateVariantBool Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseVariant.CreateVariantFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseVariant*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseVariant* UFirebaseVariant::CreateVariantFloat(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseVariant", "CreateVariantFloat");

	Params::FirebaseVariant_CreateVariantFloat Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseVariant.CreateVariantInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseVariant*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseVariant* UFirebaseVariant::CreateVariantInt64(int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseVariant", "CreateVariantInt64");

	Params::FirebaseVariant_CreateVariantInt64 Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseVariant.CreateVariantMap
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<class FString, class UFirebaseVariant*>Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UFirebaseVariant*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseVariant* UFirebaseVariant::CreateVariantMap(const TMap<class FString, class UFirebaseVariant*>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseVariant", "CreateVariantMap");

	Params::FirebaseVariant_CreateVariantMap Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseVariant.CreateVariantString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFirebaseVariant*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseVariant* UFirebaseVariant::CreateVariantString(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseVariant", "CreateVariantString");

	Params::FirebaseVariant_CreateVariantString Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyFirebase.FirebaseVariant.CreateVariantVector
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFirebaseVariant*>         Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UFirebaseVariant*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFirebaseVariant* UFirebaseVariant::CreateVariantVector(const TArray<class UFirebaseVariant*>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirebaseVariant", "CreateVariantVector");

	Params::FirebaseVariant_CreateVariantVector Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

