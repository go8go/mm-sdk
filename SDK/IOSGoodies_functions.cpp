#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IOSGoodies

#include "Basic.hpp"

#include "IOSGoodies_classes.hpp"
#include "IOSGoodies_parameters.hpp"


namespace SDK
{

// Function IOSGoodies.IGApps.OpenAppOnAppStore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           AppId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGApps::OpenAppOnAppStore(const class FString& AppId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGApps", "OpenAppOnAppStore");

	Params::IGApps_OpenAppOnAppStore Parms{};

	Parms.AppId = std::move(AppId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGApps.OpenAppSettings
// (Final, Native, Static, Public, BlueprintCallable)

void UIGApps::OpenAppSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGApps", "OpenAppSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGApps.OpenDialer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Number                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGApps::OpenDialer(const class FString& Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGApps", "OpenDialer");

	Params::IGApps_OpenDialer Parms{};

	Parms.Number = std::move(Number);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGApps.OpenYoutubeVideo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGApps::OpenYoutubeVideo(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGApps", "OpenYoutubeVideo");

	Params::IGApps_OpenYoutubeVideo Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGApps.RequestRating
// (Final, Native, Static, Public, BlueprintCallable)

void UIGApps::RequestRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGApps", "RequestRating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGApps.StartFaceTimeAudioCall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGApps::StartFaceTimeAudioCall(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGApps", "StartFaceTimeAudioCall");

	Params::IGApps_StartFaceTimeAudioCall Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGApps.StartFaceTimeVideoCall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGApps::StartFaceTimeVideoCall(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGApps", "StartFaceTimeVideoCall");

	Params::IGApps_StartFaceTimeVideoCall Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDateTimePickerBPL.ShowCoundownTimer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Hour                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>OnTimerSetCallback                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDateTimePickerBPL::ShowCoundownTimer(int32 Hour, int32 Minute, const TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>& OnTimerSetCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDateTimePickerBPL", "ShowCoundownTimer");

	Params::IGDateTimePickerBPL_ShowCoundownTimer Parms{};

	Parms.Hour = Hour;
	Parms.Minute = Minute;
	Parms.OnTimerSetCallback = OnTimerSetCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDateTimePickerBPL.ShowDatePicker
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        InitialDate                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>OnDateSetCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDateTimePickerBPL::ShowDatePicker(const struct FDateTime& InitialDate, const TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>& OnDateSetCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDateTimePickerBPL", "ShowDatePicker");

	Params::IGDateTimePickerBPL_ShowDatePicker Parms{};

	Parms.InitialDate = std::move(InitialDate);
	Parms.OnDateSetCallback = OnDateSetCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDateTimePickerBPL.ShowDatePickerWithLimits
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        InitialDate                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        FromDate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ToDate                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>OnDateSetCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDateTimePickerBPL::ShowDatePickerWithLimits(const struct FDateTime& InitialDate, const struct FDateTime& FromDate, const struct FDateTime& ToDate, const TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>& OnDateSetCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDateTimePickerBPL", "ShowDatePickerWithLimits");

	Params::IGDateTimePickerBPL_ShowDatePickerWithLimits Parms{};

	Parms.InitialDate = std::move(InitialDate);
	Parms.FromDate = std::move(FromDate);
	Parms.ToDate = std::move(ToDate);
	Parms.OnDateSetCallback = OnDateSetCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDateTimePickerBPL.ShowDateTimePicker
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        InitialDate                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Hour                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>OnDateTimeSetCallback                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDateTimePickerBPL::ShowDateTimePicker(const struct FDateTime& InitialDate, int32 Hour, int32 Minute, const TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>& OnDateTimeSetCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDateTimePickerBPL", "ShowDateTimePicker");

	Params::IGDateTimePickerBPL_ShowDateTimePicker Parms{};

	Parms.InitialDate = std::move(InitialDate);
	Parms.Hour = Hour;
	Parms.Minute = Minute;
	Parms.OnDateTimeSetCallback = OnDateTimeSetCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDateTimePickerBPL.ShowDateTimePickerWithLimits
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        InitialDate                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        FromDate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ToDate                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Hour                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FromHour                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FromMinute                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ToHour                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ToMinute                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>OnDateTimeSetCallback                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDateTimePickerBPL::ShowDateTimePickerWithLimits(const struct FDateTime& InitialDate, const struct FDateTime& FromDate, const struct FDateTime& ToDate, int32 Hour, int32 Minute, int32 FromHour, int32 FromMinute, int32 ToHour, int32 ToMinute, const TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>& OnDateTimeSetCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDateTimePickerBPL", "ShowDateTimePickerWithLimits");

	Params::IGDateTimePickerBPL_ShowDateTimePickerWithLimits Parms{};

	Parms.InitialDate = std::move(InitialDate);
	Parms.FromDate = std::move(FromDate);
	Parms.ToDate = std::move(ToDate);
	Parms.Hour = Hour;
	Parms.Minute = Minute;
	Parms.FromHour = FromHour;
	Parms.FromMinute = FromMinute;
	Parms.ToHour = ToHour;
	Parms.ToMinute = ToMinute;
	Parms.OnDateTimeSetCallback = OnDateTimeSetCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDateTimePickerBPL.ShowTimePicker
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Hour                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>OnTimeSetCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDateTimePickerBPL::ShowTimePicker(int32 Hour, int32 Minute, const TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>& OnTimeSetCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDateTimePickerBPL", "ShowTimePicker");

	Params::IGDateTimePickerBPL_ShowTimePicker Parms{};

	Parms.Hour = Hour;
	Parms.Minute = Minute;
	Parms.OnTimeSetCallback = OnTimeSetCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDateTimePickerBPL.ShowTimePickerWithLimits
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Hour                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FromHour                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FromMinute                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ToHour                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ToMinute                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>OnTimeSetCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDateTimePickerBPL::ShowTimePickerWithLimits(int32 Hour, int32 Minute, int32 FromHour, int32 FromMinute, int32 ToHour, int32 ToMinute, const TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)>& OnTimeSetCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDateTimePickerBPL", "ShowTimePickerWithLimits");

	Params::IGDateTimePickerBPL_ShowTimePickerWithLimits Parms{};

	Parms.Hour = Hour;
	Parms.Minute = Minute;
	Parms.FromHour = FromHour;
	Parms.FromMinute = FromMinute;
	Parms.ToHour = ToHour;
	Parms.ToMinute = ToMinute;
	Parms.OnTimeSetCallback = OnTimeSetCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDeviceInfo.GetBatteryLevel
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UIGDeviceInfo::GetBatteryLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetBatteryLevel");

	Params::IGDeviceInfo_GetBatteryLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.GetBatteryState
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// EBatteryState                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBatteryState UIGDeviceInfo::GetBatteryState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetBatteryState");

	Params::IGDeviceInfo_GetBatteryState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.GetLocalizedModel
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIGDeviceInfo::GetLocalizedModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetLocalizedModel");

	Params::IGDeviceInfo_GetLocalizedModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.GetModel
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIGDeviceInfo::GetModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetModel");

	Params::IGDeviceInfo_GetModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.GetName
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIGDeviceInfo::GetName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetName");

	Params::IGDeviceInfo_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.GetSystemName
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIGDeviceInfo::GetSystemName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetSystemName");

	Params::IGDeviceInfo_GetSystemName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.GetSystemVersion
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIGDeviceInfo::GetSystemVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetSystemVersion");

	Params::IGDeviceInfo_GetSystemVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.GetUserInterfaceIdiom
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// EUserInterfaceIdiom                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUserInterfaceIdiom UIGDeviceInfo::GetUserInterfaceIdiom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetUserInterfaceIdiom");

	Params::IGDeviceInfo_GetUserInterfaceIdiom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.GetUUID
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIGDeviceInfo::GetUUID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "GetUUID");

	Params::IGDeviceInfo_GetUUID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.IsBatteryMonitoringEnabled
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGDeviceInfo::IsBatteryMonitoringEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "IsBatteryMonitoringEnabled");

	Params::IGDeviceInfo_IsBatteryMonitoringEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.IsMultitaskingSupported
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGDeviceInfo::IsMultitaskingSupported()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "IsMultitaskingSupported");

	Params::IGDeviceInfo_IsMultitaskingSupported Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.IsProximityMonitoringEnabled
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGDeviceInfo::IsProximityMonitoringEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "IsProximityMonitoringEnabled");

	Params::IGDeviceInfo_IsProximityMonitoringEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.ProximityState
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGDeviceInfo::ProximityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "ProximityState");

	Params::IGDeviceInfo_ProximityState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGDeviceInfo.SetBatteryMonitoringEnabled
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGDeviceInfo::SetBatteryMonitoringEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "SetBatteryMonitoringEnabled");

	Params::IGDeviceInfo_SetBatteryMonitoringEnabled Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDeviceInfo.SetProximityMonitoringEnabled
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGDeviceInfo::SetProximityMonitoringEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDeviceInfo", "SetProximityMonitoringEnabled");

	Params::IGDeviceInfo_SetProximityMonitoringEnabled Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.DismissLoadingDialog
// (Final, Native, Static, Public, BlueprintCallable)

void UIGDialogBPL::DismissLoadingDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "DismissLoadingDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.ShowActionSheetComplexDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CancelButtonText                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DestructiveButtonText                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ActionButtonsTexts                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelButtonClickedCallback                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnDestructiveButtonClickedCallback                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Index)>            ActionButtonCallback                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDialogBPL::ShowActionSheetComplexDialog(const class FString& Title, const class FString& CancelButtonText, const class FString& DestructiveButtonText, const TArray<class FString>& ActionButtonsTexts, int32 PosX, int32 PosY, const TDelegate<void()>& OnCancelButtonClickedCallback, const TDelegate<void()>& OnDestructiveButtonClickedCallback, const TDelegate<void(int32 Index)>& ActionButtonCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "ShowActionSheetComplexDialog");

	Params::IGDialogBPL_ShowActionSheetComplexDialog Parms{};

	Parms.Title = std::move(Title);
	Parms.CancelButtonText = std::move(CancelButtonText);
	Parms.DestructiveButtonText = std::move(DestructiveButtonText);
	Parms.ActionButtonsTexts = std::move(ActionButtonsTexts);
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnCancelButtonClickedCallback = OnCancelButtonClickedCallback;
	Parms.OnDestructiveButtonClickedCallback = OnDestructiveButtonClickedCallback;
	Parms.ActionButtonCallback = ActionButtonCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.ShowActionSheetSimpleDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CancelButtonText                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ActionButtonsTexts                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelButtonClickedCallback                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(int32 Index)>            ActionButtonCallback                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDialogBPL::ShowActionSheetSimpleDialog(const class FString& Title, const class FString& CancelButtonText, const TArray<class FString>& ActionButtonsTexts, int32 PosX, int32 PosY, const TDelegate<void()>& OnCancelButtonClickedCallback, const TDelegate<void(int32 Index)>& ActionButtonCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "ShowActionSheetSimpleDialog");

	Params::IGDialogBPL_ShowActionSheetSimpleDialog Parms{};

	Parms.Title = std::move(Title);
	Parms.CancelButtonText = std::move(CancelButtonText);
	Parms.ActionButtonsTexts = std::move(ActionButtonsTexts);
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnCancelButtonClickedCallback = OnCancelButtonClickedCallback;
	Parms.ActionButtonCallback = ActionButtonCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.ShowInputFieldDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Text                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InputPlaceholderText                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           buttonOkTitle                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           buttonCancelTitle                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Result)>OnConfirmInputButtonClickedCallback                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelButtonClickedCallback                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDialogBPL::ShowInputFieldDialog(const class FString& Title, const class FString& Text, const class FString& InputPlaceholderText, const class FString& buttonOkTitle, const class FString& buttonCancelTitle, const TDelegate<void(const class FString& Result)>& OnConfirmInputButtonClickedCallback, const TDelegate<void()>& OnCancelButtonClickedCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "ShowInputFieldDialog");

	Params::IGDialogBPL_ShowInputFieldDialog Parms{};

	Parms.Title = std::move(Title);
	Parms.Text = std::move(Text);
	Parms.InputPlaceholderText = std::move(InputPlaceholderText);
	Parms.buttonOkTitle = std::move(buttonOkTitle);
	Parms.buttonCancelTitle = std::move(buttonCancelTitle);
	Parms.OnConfirmInputButtonClickedCallback = OnConfirmInputButtonClickedCallback;
	Parms.OnCancelButtonClickedCallback = OnCancelButtonClickedCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.ShowLoadingDialog
// (Final, Native, Static, Public, BlueprintCallable)

void UIGDialogBPL::ShowLoadingDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "ShowLoadingDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.ShowSingleButtonDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ConfirmButtonText                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnConfirmButtonClickedCallback                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDialogBPL::ShowSingleButtonDialog(const class FString& Title, const class FString& Message, const class FString& ConfirmButtonText, const TDelegate<void()>& OnConfirmButtonClickedCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "ShowSingleButtonDialog");

	Params::IGDialogBPL_ShowSingleButtonDialog Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.ConfirmButtonText = std::move(ConfirmButtonText);
	Parms.OnConfirmButtonClickedCallback = OnConfirmButtonClickedCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.ShowThreeButtonsDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FirstOptionButtonText                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SecondOptionButtonText                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CancelButtonText                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnFirstOptionButtonClickedCallback                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSecondOptionButtonClickedCallback                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelButtonClickedCallback                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDialogBPL::ShowThreeButtonsDialog(const class FString& Title, const class FString& Message, const class FString& FirstOptionButtonText, const class FString& SecondOptionButtonText, const class FString& CancelButtonText, const TDelegate<void()>& OnFirstOptionButtonClickedCallback, const TDelegate<void()>& OnSecondOptionButtonClickedCallback, const TDelegate<void()>& OnCancelButtonClickedCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "ShowThreeButtonsDialog");

	Params::IGDialogBPL_ShowThreeButtonsDialog Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.FirstOptionButtonText = std::move(FirstOptionButtonText);
	Parms.SecondOptionButtonText = std::move(SecondOptionButtonText);
	Parms.CancelButtonText = std::move(CancelButtonText);
	Parms.OnFirstOptionButtonClickedCallback = OnFirstOptionButtonClickedCallback;
	Parms.OnSecondOptionButtonClickedCallback = OnSecondOptionButtonClickedCallback;
	Parms.OnCancelButtonClickedCallback = OnCancelButtonClickedCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.ShowTwoButtonsDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ConfirmButtonText                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CancelButtonText                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnConfirmButtonClickedCallback                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelButtonClickedCallback                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGDialogBPL::ShowTwoButtonsDialog(const class FString& Title, const class FString& Message, const class FString& ConfirmButtonText, const class FString& CancelButtonText, const TDelegate<void()>& OnConfirmButtonClickedCallback, const TDelegate<void()>& OnCancelButtonClickedCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "ShowTwoButtonsDialog");

	Params::IGDialogBPL_ShowTwoButtonsDialog Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.ConfirmButtonText = std::move(ConfirmButtonText);
	Parms.CancelButtonText = std::move(CancelButtonText);
	Parms.OnConfirmButtonClickedCallback = OnConfirmButtonClickedCallback;
	Parms.OnCancelButtonClickedCallback = OnCancelButtonClickedCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGDialogBPL.ToggleStatusBar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    StatusBarHidden                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStatusBarStyle                         StatusBarStyle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGDialogBPL::ToggleStatusBar(bool StatusBarHidden, EStatusBarStyle StatusBarStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGDialogBPL", "ToggleStatusBar");

	Params::IGDialogBPL_ToggleStatusBar Parms{};

	Parms.StatusBarHidden = StatusBarHidden;
	Parms.StatusBarStyle = StatusBarStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGEvents.CompleteReminder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReminderId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Complete                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGEvents::CompleteReminder(const class FString& ReminderId, bool Complete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGEvents", "CompleteReminder");

	Params::IGEvents_CompleteReminder Parms{};

	Parms.ReminderId = std::move(ReminderId);
	Parms.Complete = Complete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGEvents.CreateCalendarEvent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Notes                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        StartDate                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        EndDate                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& EventId)>OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Error)>OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGEvents::CreateCalendarEvent(const class FString& Title, const class FString& Notes, const struct FDateTime& StartDate, const struct FDateTime& EndDate, const TDelegate<void(const class FString& EventId)>& OnSuccessCallback, const TDelegate<void(const class FString& Error)>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGEvents", "CreateCalendarEvent");

	Params::IGEvents_CreateCalendarEvent Parms{};

	Parms.Title = std::move(Title);
	Parms.Notes = std::move(Notes);
	Parms.StartDate = std::move(StartDate);
	Parms.EndDate = std::move(EndDate);
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGEvents.CreateReminder
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        StartDate                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        DueDate                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& EventId)>OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Error)>OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGEvents::CreateReminder(const class FString& Title, const struct FDateTime& StartDate, const struct FDateTime& DueDate, const TDelegate<void(const class FString& EventId)>& OnSuccessCallback, const TDelegate<void(const class FString& Error)>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGEvents", "CreateReminder");

	Params::IGEvents_CreateReminder Parms{};

	Parms.Title = std::move(Title);
	Parms.StartDate = std::move(StartDate);
	Parms.DueDate = std::move(DueDate);
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGEvents.CreateRepeatingEvent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Notes                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        StartDate                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        EndDate                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        RepeatUntilDate                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERecurrencyRuleType                     RuleType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Interval                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& EventId)>OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Error)>OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGEvents::CreateRepeatingEvent(const class FString& Title, const class FString& Notes, const struct FDateTime& StartDate, const struct FDateTime& EndDate, const struct FDateTime& RepeatUntilDate, ERecurrencyRuleType RuleType, int32 Interval, const TDelegate<void(const class FString& EventId)>& OnSuccessCallback, const TDelegate<void(const class FString& Error)>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGEvents", "CreateRepeatingEvent");

	Params::IGEvents_CreateRepeatingEvent Parms{};

	Parms.Title = std::move(Title);
	Parms.Notes = std::move(Notes);
	Parms.StartDate = std::move(StartDate);
	Parms.EndDate = std::move(EndDate);
	Parms.RepeatUntilDate = std::move(RepeatUntilDate);
	Parms.RuleType = RuleType;
	Parms.Interval = Interval;
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGEvents.DeleteReminder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReminderId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGEvents::DeleteReminder(const class FString& ReminderId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGEvents", "DeleteReminder");

	Params::IGEvents_DeleteReminder Parms{};

	Parms.ReminderId = std::move(ReminderId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGEvents.OpenCalendar
// (Final, Native, Static, Public, BlueprintCallable)

void UIGEvents::OpenCalendar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGEvents", "OpenCalendar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGEvents.OpenCalendarAtDate
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        Date                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGEvents::OpenCalendarAtDate(const struct FDateTime& Date)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGEvents", "OpenCalendarAtDate");

	Params::IGEvents_OpenCalendarAtDate Parms{};

	Parms.Date = std::move(Date);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGEvents.RemoveCalendarEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           EventId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnRemovedCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGEvents::RemoveCalendarEvent(const class FString& EventId, const TDelegate<void()>& OnRemovedCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGEvents", "RemoveCalendarEvent");

	Params::IGEvents_RemoveCalendarEvent Parms{};

	Parms.EventId = std::move(EventId);
	Parms.OnRemovedCallback = OnRemovedCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGFilePickerBPL.ExportFilesToService
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   FilePaths                                              (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<class FString>& Paths)>OnSuccess                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancel                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGFilePickerBPL::ExportFilesToService(const TArray<class FString>& FilePaths, const TDelegate<void(TArray<class FString>& Paths)>& OnSuccess, const TDelegate<void()>& OnCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGFilePickerBPL", "ExportFilesToService");

	Params::IGFilePickerBPL_ExportFilesToService Parms{};

	Parms.FilePaths = std::move(FilePaths);
	Parms.OnSuccess = OnSuccess;
	Parms.OnCancel = OnCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGFilePickerBPL.ImportFiles
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   FileTypes                                              (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    AllowMultiple                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<class FString>& Paths)>OnSuccess                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancel                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGFilePickerBPL::ImportFiles(const TArray<class FString>& FileTypes, bool AllowMultiple, const TDelegate<void(TArray<class FString>& Paths)>& OnSuccess, const TDelegate<void()>& OnCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGFilePickerBPL", "ImportFiles");

	Params::IGFilePickerBPL_ImportFiles Parms{};

	Parms.FileTypes = std::move(FileTypes);
	Parms.AllowMultiple = AllowMultiple;
	Parms.OnSuccess = OnSuccess;
	Parms.OnCancel = OnCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGFilePickerBPL.MoveFilesToService
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   FilePaths                                              (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<class FString>& Paths)>OnSuccess                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancel                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGFilePickerBPL::MoveFilesToService(const TArray<class FString>& FilePaths, const TDelegate<void(TArray<class FString>& Paths)>& OnSuccess, const TDelegate<void()>& OnCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGFilePickerBPL", "MoveFilesToService");

	Params::IGFilePickerBPL_MoveFilesToService Parms{};

	Parms.FilePaths = std::move(FilePaths);
	Parms.OnSuccess = OnSuccess;
	Parms.OnCancel = OnCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGFilePickerBPL.OpenFiles
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   FileTypes                                              (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    AllowMultiple                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<class FString>& Paths)>OnSuccess                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancel                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGFilePickerBPL::OpenFiles(const TArray<class FString>& FileTypes, bool AllowMultiple, const TDelegate<void(TArray<class FString>& Paths)>& OnSuccess, const TDelegate<void()>& OnCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGFilePickerBPL", "OpenFiles");

	Params::IGFilePickerBPL_OpenFiles Parms{};

	Parms.FileTypes = std::move(FileTypes);
	Parms.AllowMultiple = AllowMultiple;
	Parms.OnSuccess = OnSuccess;
	Parms.OnCancel = OnCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGFlashlight.DeviceHasFlashlight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGFlashlight::DeviceHasFlashlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGFlashlight", "DeviceHasFlashlight");

	Params::IGFlashlight_DeviceHasFlashlight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGFlashlight.EnableFlashlight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGFlashlight::EnableFlashlight(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGFlashlight", "EnableFlashlight");

	Params::IGFlashlight_EnableFlashlight Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGFlashlight.SetFlashlightLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGFlashlight::SetFlashlightLevel(float Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGFlashlight", "SetFlashlightLevel");

	Params::IGFlashlight_SetFlashlightLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGHaptics.IsHapticFeedbackSupported
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGHaptics::IsHapticFeedbackSupported()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGHaptics", "IsHapticFeedbackSupported");

	Params::IGHaptics_IsHapticFeedbackSupported Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGHaptics.SendImpactHapticFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EImpactStrength                         Strength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGHaptics::SendImpactHapticFeedback(EImpactStrength Strength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGHaptics", "SendImpactHapticFeedback");

	Params::IGHaptics_SendImpactHapticFeedback Parms{};

	Parms.Strength = Strength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGHaptics.SendNotificationHapticFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ENotificationType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGHaptics::SendNotificationHapticFeedback(ENotificationType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGHaptics", "SendNotificationHapticFeedback");

	Params::IGHaptics_SendNotificationHapticFeedback Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGHaptics.SendSelectionHapticFeedback
// (Final, Native, Static, Public, BlueprintCallable)

void UIGHaptics::SendSelectionHapticFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGHaptics", "SendSelectionHapticFeedback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGHaptics.Vibrate
// (Final, Native, Static, Public, BlueprintCallable)

void UIGHaptics::Vibrate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGHaptics", "Vibrate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGImagePicker.DeleteImageFromGallery
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// EGallerySourceType                      SourceType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGImagePicker::DeleteImageFromGallery(EGallerySourceType SourceType, int32 PosX, int32 PosY, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGImagePicker", "DeleteImageFromGallery");

	Params::IGImagePicker_DeleteImageFromGallery Parms{};

	Parms.SourceType = SourceType;
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGImagePicker.PickImageFromGallery
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// EGallerySourceType                      SourceType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AllowEditing                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UTexture2D* Texture)>OnPickImageFromGalleryCallback                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   MaxSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGImagePicker::PickImageFromGallery(EGallerySourceType SourceType, bool AllowEditing, int32 PosX, int32 PosY, const TDelegate<void(class UTexture2D* Texture)>& OnPickImageFromGalleryCallback, const TDelegate<void()>& OnCancelCallback, int32 MaxSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGImagePicker", "PickImageFromGallery");

	Params::IGImagePicker_PickImageFromGallery Parms{};

	Parms.SourceType = SourceType;
	Parms.AllowEditing = AllowEditing;
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnPickImageFromGalleryCallback = OnPickImageFromGalleryCallback;
	Parms.OnCancelCallback = OnCancelCallback;
	Parms.MaxSize = MaxSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGImagePicker.PickMediaFromGallery
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// EGallerySourceType                      SourceType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AllowEditing                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FIGPickedMedia& Media)>OnPickMediaFromGalleryCallback                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   MediaTypes                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   MaxSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGImagePicker::PickMediaFromGallery(EGallerySourceType SourceType, bool AllowEditing, int32 PosX, int32 PosY, const TDelegate<void(const struct FIGPickedMedia& Media)>& OnPickMediaFromGalleryCallback, const TDelegate<void()>& OnCancelCallback, const TArray<class FString>& MediaTypes, int32 MaxSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGImagePicker", "PickMediaFromGallery");

	Params::IGImagePicker_PickMediaFromGallery Parms{};

	Parms.SourceType = SourceType;
	Parms.AllowEditing = AllowEditing;
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnPickMediaFromGalleryCallback = OnPickMediaFromGalleryCallback;
	Parms.OnCancelCallback = OnCancelCallback;
	Parms.MediaTypes = std::move(MediaTypes);
	Parms.MaxSize = MaxSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGImagePicker.PickPhotoFromCamera
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AllowEditing                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseRearCamera                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECameraFlashMode                        FlashMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UTexture2D* Texture)>OnPickPhotoFromCameraCallback                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   MaxSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGImagePicker::PickPhotoFromCamera(bool AllowEditing, bool UseRearCamera, ECameraFlashMode FlashMode, const TDelegate<void(class UTexture2D* Texture)>& OnPickPhotoFromCameraCallback, const TDelegate<void()>& OnCancelCallback, int32 MaxSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGImagePicker", "PickPhotoFromCamera");

	Params::IGImagePicker_PickPhotoFromCamera Parms{};

	Parms.AllowEditing = AllowEditing;
	Parms.UseRearCamera = UseRearCamera;
	Parms.FlashMode = FlashMode;
	Parms.OnPickPhotoFromCameraCallback = OnPickPhotoFromCameraCallback;
	Parms.OnCancelCallback = OnCancelCallback;
	Parms.MaxSize = MaxSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGImagePicker.SaveImageToGallery
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnImageSavedCallback                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSaveErrorCallback                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGImagePicker::SaveImageToGallery(class UTexture2D* Texture, const TDelegate<void()>& OnImageSavedCallback, const TDelegate<void()>& OnSaveErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGImagePicker", "SaveImageToGallery");

	Params::IGImagePicker_SaveImageToGallery Parms{};

	Parms.Texture = Texture;
	Parms.OnImageSavedCallback = OnImageSavedCallback;
	Parms.OnSaveErrorCallback = OnSaveErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGImagePicker.TakeScreenShot
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UTexture2D* Texture)>OnScreenShotTakenCallback                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGImagePicker::TakeScreenShot(const TDelegate<void(class UTexture2D* Texture)>& OnScreenShotTakenCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGImagePicker", "TakeScreenShot");

	Params::IGImagePicker_TakeScreenShot Parms{};

	Parms.OnScreenShotTakenCallback = OnScreenShotTakenCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGMapsBPL.GetDirections
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           DestinationAddress                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SourceAddress                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETransportType                          TransportType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMapViewType                            ViewType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGMapsBPL::GetDirections(const class FString& DestinationAddress, const class FString& SourceAddress, ETransportType TransportType, EMapViewType ViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGMapsBPL", "GetDirections");

	Params::IGMapsBPL_GetDirections Parms{};

	Parms.DestinationAddress = std::move(DestinationAddress);
	Parms.SourceAddress = std::move(SourceAddress);
	Parms.TransportType = TransportType;
	Parms.ViewType = ViewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGMapsBPL.OpenMapAddress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Address                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMapViewType                            ViewType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGMapsBPL::OpenMapAddress(const class FString& Address, const class FString& Label, EMapViewType ViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGMapsBPL", "OpenMapAddress");

	Params::IGMapsBPL_OpenMapAddress Parms{};

	Parms.Address = std::move(Address);
	Parms.Label = std::move(Label);
	Parms.ViewType = ViewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGMapsBPL.OpenMapLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Latitude                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Longitude                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Label                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMapViewType                            ViewType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGMapsBPL::OpenMapLocation(float Latitude, float Longitude, const class FString& Label, EMapViewType ViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGMapsBPL", "OpenMapLocation");

	Params::IGMapsBPL_OpenMapLocation Parms{};

	Parms.Latitude = Latitude;
	Parms.Longitude = Longitude;
	Parms.Label = std::move(Label);
	Parms.ViewType = ViewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGMapsBPL.PerformSearch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Query                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMapViewType                            ViewType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGMapsBPL::PerformSearch(const class FString& Query, EMapViewType ViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGMapsBPL", "PerformSearch");

	Params::IGMapsBPL_PerformSearch Parms{};

	Parms.Query = std::move(Query);
	Parms.ViewType = ViewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGMapsBPL.PerformSearchNearLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Query                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Latitude                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Longitude                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Zoom                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMapViewType                            ViewType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGMapsBPL::PerformSearchNearLocation(const class FString& Query, float Latitude, float Longitude, int32 Zoom, EMapViewType ViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGMapsBPL", "PerformSearchNearLocation");

	Params::IGMapsBPL_PerformSearchNearLocation Parms{};

	Parms.Query = std::move(Query);
	Parms.Latitude = Latitude;
	Parms.Longitude = Longitude;
	Parms.Zoom = Zoom;
	Parms.ViewType = ViewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.CanSendEmail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGShare::CanSendEmail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "CanSendEmail");

	Params::IGShare_CanSendEmail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGShare.CanSendSMS
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGShare::CanSendSMS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "CanSendSMS");

	Params::IGShare_CanSendSMS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IOSGoodies.IGShare.SendEMail
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Subject                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Body                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Recipients                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   Cc                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   bcc                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelDelegate                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSavedDraftCallback                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGShare::SendEMail(const class FString& Subject, const class FString& Body, class UTexture2D* Texture, const TArray<class FString>& Recipients, const TArray<class FString>& Cc, const TArray<class FString>& bcc, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnErrorCallback, const TDelegate<void()>& OnCancelDelegate, const TDelegate<void()>& OnSavedDraftCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "SendEMail");

	Params::IGShare_SendEMail Parms{};

	Parms.Subject = std::move(Subject);
	Parms.Body = std::move(Body);
	Parms.Texture = Texture;
	Parms.Recipients = std::move(Recipients);
	Parms.Cc = std::move(Cc);
	Parms.bcc = std::move(bcc);
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;
	Parms.OnCancelDelegate = OnCancelDelegate;
	Parms.OnSavedDraftCallback = OnSavedDraftCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.SendEmailViaDefaultApp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Subject                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Body                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Recipients                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   Cc                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   bcc                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UIGShare::SendEmailViaDefaultApp(const class FString& Subject, const class FString& Body, const TArray<class FString>& Recipients, const TArray<class FString>& Cc, const TArray<class FString>& bcc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "SendEmailViaDefaultApp");

	Params::IGShare_SendEmailViaDefaultApp Parms{};

	Parms.Subject = std::move(Subject);
	Parms.Body = std::move(Body);
	Parms.Recipients = std::move(Recipients);
	Parms.Cc = std::move(Cc);
	Parms.bcc = std::move(bcc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.SendSms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PhoneNumber                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MsgText                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnCancelCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGShare::SendSms(const class FString& PhoneNumber, const class FString& MsgText, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnErrorCallback, const TDelegate<void()>& OnCancelCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "SendSms");

	Params::IGShare_SendSms Parms{};

	Parms.PhoneNumber = std::move(PhoneNumber);
	Parms.MsgText = std::move(MsgText);
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;
	Parms.OnCancelCallback = OnCancelCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.SendSMSViaDefaultApp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PhoneNumber                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MsgText                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGShare::SendSMSViaDefaultApp(const class FString& PhoneNumber, const class FString& MsgText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "SendSMSViaDefaultApp");

	Params::IGShare_SendSMSViaDefaultApp Parms{};

	Parms.PhoneNumber = std::move(PhoneNumber);
	Parms.MsgText = std::move(MsgText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.ShareImage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGShare::ShareImage(class UTexture2D* Texture, int32 PosX, int32 PosY, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "ShareImage");

	Params::IGShare_ShareImage Parms{};

	Parms.Texture = Texture;
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.ShareLink
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Link                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGShare::ShareLink(const class FString& Link, int32 PosX, int32 PosY, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "ShareLink");

	Params::IGShare_ShareLink Parms{};

	Parms.Link = std::move(Link);
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.ShareText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGShare::ShareText(const class FString& Message, int32 PosX, int32 PosY, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "ShareText");

	Params::IGShare_ShareText Parms{};

	Parms.Message = std::move(Message);
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.ShareTextWithImage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGShare::ShareTextWithImage(const class FString& Message, class UTexture2D* Texture, int32 PosX, int32 PosY, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "ShareTextWithImage");

	Params::IGShare_ShareTextWithImage Parms{};

	Parms.Message = std::move(Message);
	Parms.Texture = Texture;
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.ShareTextWithImageAndLink
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Link                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGShare::ShareTextWithImageAndLink(const class FString& Message, class UTexture2D* Texture, const class FString& Link, int32 PosX, int32 PosY, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "ShareTextWithImageAndLink");

	Params::IGShare_ShareTextWithImageAndLink Parms{};

	Parms.Message = std::move(Message);
	Parms.Texture = Texture;
	Parms.Link = std::move(Link);
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IOSGoodies.IGShare.ShareTextWithLink
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Link                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnSuccessCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnErrorCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIGShare::ShareTextWithLink(const class FString& Message, const class FString& Link, int32 PosX, int32 PosY, const TDelegate<void()>& OnSuccessCallback, const TDelegate<void()>& OnErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGShare", "ShareTextWithLink");

	Params::IGShare_ShareTextWithLink Parms{};

	Parms.Message = std::move(Message);
	Parms.Link = std::move(Link);
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.OnSuccessCallback = OnSuccessCallback;
	Parms.OnErrorCallback = OnErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

