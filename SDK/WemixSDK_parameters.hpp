#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WemixSDK

#include "Basic.hpp"


namespace SDK::Params
{

// Function WemixSDK.WemixSDKBPLibrary.WemixSDKSampleFunction
// 0x0008 (0x0008 - 0x0000)
struct WemixSDKBPLibrary_WemixSDKSampleFunction final
{
public:
	float                                         Param;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixSDKBPLibrary_WemixSDKSampleFunction) == 0x000004, "Wrong alignment on WemixSDKBPLibrary_WemixSDKSampleFunction");
static_assert(sizeof(WemixSDKBPLibrary_WemixSDKSampleFunction) == 0x000008, "Wrong size on WemixSDKBPLibrary_WemixSDKSampleFunction");
static_assert(offsetof(WemixSDKBPLibrary_WemixSDKSampleFunction, Param) == 0x000000, "Member 'WemixSDKBPLibrary_WemixSDKSampleFunction::Param' has a wrong offset!");
static_assert(offsetof(WemixSDKBPLibrary_WemixSDKSampleFunction, ReturnValue) == 0x000004, "Member 'WemixSDKBPLibrary_WemixSDKSampleFunction::ReturnValue' has a wrong offset!");

// Function WemixSDK.WemixWebBrowser.UnrealSendMessage
// 0x0020 (0x0020 - 0x0000)
struct WemixWebBrowser_UnrealSendMessage final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Body;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowser_UnrealSendMessage) == 0x000008, "Wrong alignment on WemixWebBrowser_UnrealSendMessage");
static_assert(sizeof(WemixWebBrowser_UnrealSendMessage) == 0x000020, "Wrong size on WemixWebBrowser_UnrealSendMessage");
static_assert(offsetof(WemixWebBrowser_UnrealSendMessage, Name_0) == 0x000000, "Member 'WemixWebBrowser_UnrealSendMessage::Name_0' has a wrong offset!");
static_assert(offsetof(WemixWebBrowser_UnrealSendMessage, Body) == 0x000010, "Member 'WemixWebBrowser_UnrealSendMessage::Body' has a wrong offset!");

// Function WemixSDK.WemixWebBrowser.BindUObject
// 0x0020 (0x0020 - 0x0000)
struct WemixWebBrowser_BindUObject final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPermanent;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WemixWebBrowser_BindUObject) == 0x000008, "Wrong alignment on WemixWebBrowser_BindUObject");
static_assert(sizeof(WemixWebBrowser_BindUObject) == 0x000020, "Wrong size on WemixWebBrowser_BindUObject");
static_assert(offsetof(WemixWebBrowser_BindUObject, Name_0) == 0x000000, "Member 'WemixWebBrowser_BindUObject::Name_0' has a wrong offset!");
static_assert(offsetof(WemixWebBrowser_BindUObject, Object) == 0x000010, "Member 'WemixWebBrowser_BindUObject::Object' has a wrong offset!");
static_assert(offsetof(WemixWebBrowser_BindUObject, bIsPermanent) == 0x000018, "Member 'WemixWebBrowser_BindUObject::bIsPermanent' has a wrong offset!");

// Function WemixSDK.WemixWebBrowser.ExecuteJavascript
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowser_ExecuteJavascript final
{
public:
	class FString                                 ScriptText;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowser_ExecuteJavascript) == 0x000008, "Wrong alignment on WemixWebBrowser_ExecuteJavascript");
static_assert(sizeof(WemixWebBrowser_ExecuteJavascript) == 0x000010, "Wrong size on WemixWebBrowser_ExecuteJavascript");
static_assert(offsetof(WemixWebBrowser_ExecuteJavascript, ScriptText) == 0x000000, "Member 'WemixWebBrowser_ExecuteJavascript::ScriptText' has a wrong offset!");

// Function WemixSDK.WemixWebBrowser.LoadString
// 0x0020 (0x0020 - 0x0000)
struct WemixWebBrowser_LoadString final
{
public:
	class FString                                 Contents;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DummyURL;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowser_LoadString) == 0x000008, "Wrong alignment on WemixWebBrowser_LoadString");
static_assert(sizeof(WemixWebBrowser_LoadString) == 0x000020, "Wrong size on WemixWebBrowser_LoadString");
static_assert(offsetof(WemixWebBrowser_LoadString, Contents) == 0x000000, "Member 'WemixWebBrowser_LoadString::Contents' has a wrong offset!");
static_assert(offsetof(WemixWebBrowser_LoadString, DummyURL) == 0x000010, "Member 'WemixWebBrowser_LoadString::DummyURL' has a wrong offset!");

// Function WemixSDK.WemixWebBrowser.LoadURL
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowser_LoadURL final
{
public:
	class FString                                 NewURL;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowser_LoadURL) == 0x000008, "Wrong alignment on WemixWebBrowser_LoadURL");
static_assert(sizeof(WemixWebBrowser_LoadURL) == 0x000010, "Wrong size on WemixWebBrowser_LoadURL");
static_assert(offsetof(WemixWebBrowser_LoadURL, NewURL) == 0x000000, "Member 'WemixWebBrowser_LoadURL::NewURL' has a wrong offset!");

// DelegateFunction WemixSDK.WemixWebBrowser.OnBeforePopup__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WemixWebBrowser_OnBeforePopup__DelegateSignature final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Frame;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowser_OnBeforePopup__DelegateSignature) == 0x000008, "Wrong alignment on WemixWebBrowser_OnBeforePopup__DelegateSignature");
static_assert(sizeof(WemixWebBrowser_OnBeforePopup__DelegateSignature) == 0x000020, "Wrong size on WemixWebBrowser_OnBeforePopup__DelegateSignature");
static_assert(offsetof(WemixWebBrowser_OnBeforePopup__DelegateSignature, URL) == 0x000000, "Member 'WemixWebBrowser_OnBeforePopup__DelegateSignature::URL' has a wrong offset!");
static_assert(offsetof(WemixWebBrowser_OnBeforePopup__DelegateSignature, Frame) == 0x000010, "Member 'WemixWebBrowser_OnBeforePopup__DelegateSignature::Frame' has a wrong offset!");

// DelegateFunction WemixSDK.WemixWebBrowser.OnConsoleMessage__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct WemixWebBrowser_OnConsoleMessage__DelegateSignature final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Source;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Line;                                              // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WemixWebBrowser_OnConsoleMessage__DelegateSignature) == 0x000008, "Wrong alignment on WemixWebBrowser_OnConsoleMessage__DelegateSignature");
static_assert(sizeof(WemixWebBrowser_OnConsoleMessage__DelegateSignature) == 0x000028, "Wrong size on WemixWebBrowser_OnConsoleMessage__DelegateSignature");
static_assert(offsetof(WemixWebBrowser_OnConsoleMessage__DelegateSignature, Message) == 0x000000, "Member 'WemixWebBrowser_OnConsoleMessage__DelegateSignature::Message' has a wrong offset!");
static_assert(offsetof(WemixWebBrowser_OnConsoleMessage__DelegateSignature, Source) == 0x000010, "Member 'WemixWebBrowser_OnConsoleMessage__DelegateSignature::Source' has a wrong offset!");
static_assert(offsetof(WemixWebBrowser_OnConsoleMessage__DelegateSignature, Line) == 0x000020, "Member 'WemixWebBrowser_OnConsoleMessage__DelegateSignature::Line' has a wrong offset!");

// DelegateFunction WemixSDK.WemixWebBrowser.OnUrlChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WemixWebBrowser_OnUrlChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowser_OnUrlChanged__DelegateSignature) == 0x000008, "Wrong alignment on WemixWebBrowser_OnUrlChanged__DelegateSignature");
static_assert(sizeof(WemixWebBrowser_OnUrlChanged__DelegateSignature) == 0x000018, "Wrong size on WemixWebBrowser_OnUrlChanged__DelegateSignature");
static_assert(offsetof(WemixWebBrowser_OnUrlChanged__DelegateSignature, Text) == 0x000000, "Member 'WemixWebBrowser_OnUrlChanged__DelegateSignature::Text' has a wrong offset!");

// Function WemixSDK.WemixWebBrowser.GetTitleText
// 0x0018 (0x0018 - 0x0000)
struct WemixWebBrowser_GetTitleText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowser_GetTitleText) == 0x000008, "Wrong alignment on WemixWebBrowser_GetTitleText");
static_assert(sizeof(WemixWebBrowser_GetTitleText) == 0x000018, "Wrong size on WemixWebBrowser_GetTitleText");
static_assert(offsetof(WemixWebBrowser_GetTitleText, ReturnValue) == 0x000000, "Member 'WemixWebBrowser_GetTitleText::ReturnValue' has a wrong offset!");

// Function WemixSDK.WemixWebBrowser.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowser_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowser_GetUrl) == 0x000008, "Wrong alignment on WemixWebBrowser_GetUrl");
static_assert(sizeof(WemixWebBrowser_GetUrl) == 0x000010, "Wrong size on WemixWebBrowser_GetUrl");
static_assert(offsetof(WemixWebBrowser_GetUrl, ReturnValue) == 0x000000, "Member 'WemixWebBrowser_GetUrl::ReturnValue' has a wrong offset!");

// Function WemixSDK.WemixWebBrowserWidget.GetSignMessage
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowserWidget_GetSignMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowserWidget_GetSignMessage) == 0x000008, "Wrong alignment on WemixWebBrowserWidget_GetSignMessage");
static_assert(sizeof(WemixWebBrowserWidget_GetSignMessage) == 0x000010, "Wrong size on WemixWebBrowserWidget_GetSignMessage");
static_assert(offsetof(WemixWebBrowserWidget_GetSignMessage, ReturnValue) == 0x000000, "Member 'WemixWebBrowserWidget_GetSignMessage::ReturnValue' has a wrong offset!");

// Function WemixSDK.WemixWebBrowserWidget.GetWebBaseUrl
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowserWidget_GetWebBaseUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowserWidget_GetWebBaseUrl) == 0x000008, "Wrong alignment on WemixWebBrowserWidget_GetWebBaseUrl");
static_assert(sizeof(WemixWebBrowserWidget_GetWebBaseUrl) == 0x000010, "Wrong size on WemixWebBrowserWidget_GetWebBaseUrl");
static_assert(offsetof(WemixWebBrowserWidget_GetWebBaseUrl, ReturnValue) == 0x000000, "Member 'WemixWebBrowserWidget_GetWebBaseUrl::ReturnValue' has a wrong offset!");

// Function WemixSDK.WemixWebBrowserWidget.GetWemixHost
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowserWidget_GetWemixHost final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowserWidget_GetWemixHost) == 0x000008, "Wrong alignment on WemixWebBrowserWidget_GetWemixHost");
static_assert(sizeof(WemixWebBrowserWidget_GetWemixHost) == 0x000010, "Wrong size on WemixWebBrowserWidget_GetWemixHost");
static_assert(offsetof(WemixWebBrowserWidget_GetWemixHost, ReturnValue) == 0x000000, "Member 'WemixWebBrowserWidget_GetWemixHost::ReturnValue' has a wrong offset!");

// Function WemixSDK.WemixWebBrowserWidget.IsDarkMode
// 0x0001 (0x0001 - 0x0000)
struct WemixWebBrowserWidget_IsDarkMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowserWidget_IsDarkMode) == 0x000001, "Wrong alignment on WemixWebBrowserWidget_IsDarkMode");
static_assert(sizeof(WemixWebBrowserWidget_IsDarkMode) == 0x000001, "Wrong size on WemixWebBrowserWidget_IsDarkMode");
static_assert(offsetof(WemixWebBrowserWidget_IsDarkMode, ReturnValue) == 0x000000, "Member 'WemixWebBrowserWidget_IsDarkMode::ReturnValue' has a wrong offset!");

// Function WemixSDK.WemixWebBrowserWidget.OnFailedConnect
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowserWidget_OnFailedConnect final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowserWidget_OnFailedConnect) == 0x000008, "Wrong alignment on WemixWebBrowserWidget_OnFailedConnect");
static_assert(sizeof(WemixWebBrowserWidget_OnFailedConnect) == 0x000010, "Wrong size on WemixWebBrowserWidget_OnFailedConnect");
static_assert(offsetof(WemixWebBrowserWidget_OnFailedConnect, Error) == 0x000000, "Member 'WemixWebBrowserWidget_OnFailedConnect::Error' has a wrong offset!");

// Function WemixSDK.WemixWebBrowserWidget.OnFailedSign
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowserWidget_OnFailedSign final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowserWidget_OnFailedSign) == 0x000008, "Wrong alignment on WemixWebBrowserWidget_OnFailedSign");
static_assert(sizeof(WemixWebBrowserWidget_OnFailedSign) == 0x000010, "Wrong size on WemixWebBrowserWidget_OnFailedSign");
static_assert(offsetof(WemixWebBrowserWidget_OnFailedSign, Error) == 0x000000, "Member 'WemixWebBrowserWidget_OnFailedSign::Error' has a wrong offset!");

// Function WemixSDK.WemixWebBrowserWidget.OnSuccessConnect
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowserWidget_OnSuccessConnect final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowserWidget_OnSuccessConnect) == 0x000008, "Wrong alignment on WemixWebBrowserWidget_OnSuccessConnect");
static_assert(sizeof(WemixWebBrowserWidget_OnSuccessConnect) == 0x000010, "Wrong size on WemixWebBrowserWidget_OnSuccessConnect");
static_assert(offsetof(WemixWebBrowserWidget_OnSuccessConnect, Data) == 0x000000, "Member 'WemixWebBrowserWidget_OnSuccessConnect::Data' has a wrong offset!");

// Function WemixSDK.WemixWebBrowserWidget.OnSuccessSign
// 0x0010 (0x0010 - 0x0000)
struct WemixWebBrowserWidget_OnSuccessSign final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WemixWebBrowserWidget_OnSuccessSign) == 0x000008, "Wrong alignment on WemixWebBrowserWidget_OnSuccessSign");
static_assert(sizeof(WemixWebBrowserWidget_OnSuccessSign) == 0x000010, "Wrong size on WemixWebBrowserWidget_OnSuccessSign");
static_assert(offsetof(WemixWebBrowserWidget_OnSuccessSign, Data) == 0x000000, "Member 'WemixWebBrowserWidget_OnSuccessSign::Data' has a wrong offset!");

}

