#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IOSGoodies

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "IOSGoodies_structs.hpp"


namespace SDK::Params
{

// Function IOSGoodies.IGApps.OpenAppOnAppStore
// 0x0010 (0x0010 - 0x0000)
struct IGApps_OpenAppOnAppStore final
{
public:
	class FString                                 AppId;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGApps_OpenAppOnAppStore) == 0x000008, "Wrong alignment on IGApps_OpenAppOnAppStore");
static_assert(sizeof(IGApps_OpenAppOnAppStore) == 0x000010, "Wrong size on IGApps_OpenAppOnAppStore");
static_assert(offsetof(IGApps_OpenAppOnAppStore, AppId) == 0x000000, "Member 'IGApps_OpenAppOnAppStore::AppId' has a wrong offset!");

// Function IOSGoodies.IGApps.OpenDialer
// 0x0010 (0x0010 - 0x0000)
struct IGApps_OpenDialer final
{
public:
	class FString                                 Number;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGApps_OpenDialer) == 0x000008, "Wrong alignment on IGApps_OpenDialer");
static_assert(sizeof(IGApps_OpenDialer) == 0x000010, "Wrong size on IGApps_OpenDialer");
static_assert(offsetof(IGApps_OpenDialer, Number) == 0x000000, "Member 'IGApps_OpenDialer::Number' has a wrong offset!");

// Function IOSGoodies.IGApps.OpenYoutubeVideo
// 0x0010 (0x0010 - 0x0000)
struct IGApps_OpenYoutubeVideo final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGApps_OpenYoutubeVideo) == 0x000008, "Wrong alignment on IGApps_OpenYoutubeVideo");
static_assert(sizeof(IGApps_OpenYoutubeVideo) == 0x000010, "Wrong size on IGApps_OpenYoutubeVideo");
static_assert(offsetof(IGApps_OpenYoutubeVideo, ID) == 0x000000, "Member 'IGApps_OpenYoutubeVideo::ID' has a wrong offset!");

// Function IOSGoodies.IGApps.StartFaceTimeAudioCall
// 0x0010 (0x0010 - 0x0000)
struct IGApps_StartFaceTimeAudioCall final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGApps_StartFaceTimeAudioCall) == 0x000008, "Wrong alignment on IGApps_StartFaceTimeAudioCall");
static_assert(sizeof(IGApps_StartFaceTimeAudioCall) == 0x000010, "Wrong size on IGApps_StartFaceTimeAudioCall");
static_assert(offsetof(IGApps_StartFaceTimeAudioCall, ID) == 0x000000, "Member 'IGApps_StartFaceTimeAudioCall::ID' has a wrong offset!");

// Function IOSGoodies.IGApps.StartFaceTimeVideoCall
// 0x0010 (0x0010 - 0x0000)
struct IGApps_StartFaceTimeVideoCall final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGApps_StartFaceTimeVideoCall) == 0x000008, "Wrong alignment on IGApps_StartFaceTimeVideoCall");
static_assert(sizeof(IGApps_StartFaceTimeVideoCall) == 0x000010, "Wrong size on IGApps_StartFaceTimeVideoCall");
static_assert(offsetof(IGApps_StartFaceTimeVideoCall, ID) == 0x000000, "Member 'IGApps_StartFaceTimeVideoCall::ID' has a wrong offset!");

// Function IOSGoodies.IGDateTimePickerBPL.ShowCoundownTimer
// 0x0028 (0x0028 - 0x0000)
struct IGDateTimePickerBPL_ShowCoundownTimer final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minute;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)> OnTimerSetCallback;                                // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDateTimePickerBPL_ShowCoundownTimer) == 0x000004, "Wrong alignment on IGDateTimePickerBPL_ShowCoundownTimer");
static_assert(sizeof(IGDateTimePickerBPL_ShowCoundownTimer) == 0x000028, "Wrong size on IGDateTimePickerBPL_ShowCoundownTimer");
static_assert(offsetof(IGDateTimePickerBPL_ShowCoundownTimer, Hour) == 0x000000, "Member 'IGDateTimePickerBPL_ShowCoundownTimer::Hour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowCoundownTimer, Minute) == 0x000004, "Member 'IGDateTimePickerBPL_ShowCoundownTimer::Minute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowCoundownTimer, OnTimerSetCallback) == 0x000008, "Member 'IGDateTimePickerBPL_ShowCoundownTimer::OnTimerSetCallback' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowCoundownTimer, OnCancelCallback) == 0x000018, "Member 'IGDateTimePickerBPL_ShowCoundownTimer::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGDateTimePickerBPL.ShowDatePicker
// 0x0028 (0x0028 - 0x0000)
struct IGDateTimePickerBPL_ShowDatePicker final
{
public:
	struct FDateTime                              InitialDate;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)> OnDateSetCallback;                                 // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDateTimePickerBPL_ShowDatePicker) == 0x000008, "Wrong alignment on IGDateTimePickerBPL_ShowDatePicker");
static_assert(sizeof(IGDateTimePickerBPL_ShowDatePicker) == 0x000028, "Wrong size on IGDateTimePickerBPL_ShowDatePicker");
static_assert(offsetof(IGDateTimePickerBPL_ShowDatePicker, InitialDate) == 0x000000, "Member 'IGDateTimePickerBPL_ShowDatePicker::InitialDate' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDatePicker, OnDateSetCallback) == 0x000008, "Member 'IGDateTimePickerBPL_ShowDatePicker::OnDateSetCallback' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDatePicker, OnCancelCallback) == 0x000018, "Member 'IGDateTimePickerBPL_ShowDatePicker::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGDateTimePickerBPL.ShowDatePickerWithLimits
// 0x0038 (0x0038 - 0x0000)
struct IGDateTimePickerBPL_ShowDatePickerWithLimits final
{
public:
	struct FDateTime                              InitialDate;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              FromDate;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ToDate;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)> OnDateSetCallback;                                 // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDateTimePickerBPL_ShowDatePickerWithLimits) == 0x000008, "Wrong alignment on IGDateTimePickerBPL_ShowDatePickerWithLimits");
static_assert(sizeof(IGDateTimePickerBPL_ShowDatePickerWithLimits) == 0x000038, "Wrong size on IGDateTimePickerBPL_ShowDatePickerWithLimits");
static_assert(offsetof(IGDateTimePickerBPL_ShowDatePickerWithLimits, InitialDate) == 0x000000, "Member 'IGDateTimePickerBPL_ShowDatePickerWithLimits::InitialDate' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDatePickerWithLimits, FromDate) == 0x000008, "Member 'IGDateTimePickerBPL_ShowDatePickerWithLimits::FromDate' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDatePickerWithLimits, ToDate) == 0x000010, "Member 'IGDateTimePickerBPL_ShowDatePickerWithLimits::ToDate' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDatePickerWithLimits, OnDateSetCallback) == 0x000018, "Member 'IGDateTimePickerBPL_ShowDatePickerWithLimits::OnDateSetCallback' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDatePickerWithLimits, OnCancelCallback) == 0x000028, "Member 'IGDateTimePickerBPL_ShowDatePickerWithLimits::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGDateTimePickerBPL.ShowDateTimePicker
// 0x0030 (0x0030 - 0x0000)
struct IGDateTimePickerBPL_ShowDateTimePicker final
{
public:
	struct FDateTime                              InitialDate;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Hour;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minute;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)> OnDateTimeSetCallback;                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDateTimePickerBPL_ShowDateTimePicker) == 0x000008, "Wrong alignment on IGDateTimePickerBPL_ShowDateTimePicker");
static_assert(sizeof(IGDateTimePickerBPL_ShowDateTimePicker) == 0x000030, "Wrong size on IGDateTimePickerBPL_ShowDateTimePicker");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePicker, InitialDate) == 0x000000, "Member 'IGDateTimePickerBPL_ShowDateTimePicker::InitialDate' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePicker, Hour) == 0x000008, "Member 'IGDateTimePickerBPL_ShowDateTimePicker::Hour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePicker, Minute) == 0x00000C, "Member 'IGDateTimePickerBPL_ShowDateTimePicker::Minute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePicker, OnDateTimeSetCallback) == 0x000010, "Member 'IGDateTimePickerBPL_ShowDateTimePicker::OnDateTimeSetCallback' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePicker, OnCancelCallback) == 0x000020, "Member 'IGDateTimePickerBPL_ShowDateTimePicker::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGDateTimePickerBPL.ShowDateTimePickerWithLimits
// 0x0050 (0x0050 - 0x0000)
struct IGDateTimePickerBPL_ShowDateTimePickerWithLimits final
{
public:
	struct FDateTime                              InitialDate;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              FromDate;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ToDate;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Hour;                                              // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minute;                                            // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FromHour;                                          // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FromMinute;                                        // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ToHour;                                            // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ToMinute;                                          // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)> OnDateTimeSetCallback;                             // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits) == 0x000008, "Wrong alignment on IGDateTimePickerBPL_ShowDateTimePickerWithLimits");
static_assert(sizeof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits) == 0x000050, "Wrong size on IGDateTimePickerBPL_ShowDateTimePickerWithLimits");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, InitialDate) == 0x000000, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::InitialDate' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, FromDate) == 0x000008, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::FromDate' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, ToDate) == 0x000010, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::ToDate' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, Hour) == 0x000018, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::Hour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, Minute) == 0x00001C, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::Minute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, FromHour) == 0x000020, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::FromHour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, FromMinute) == 0x000024, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::FromMinute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, ToHour) == 0x000028, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::ToHour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, ToMinute) == 0x00002C, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::ToMinute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, OnDateTimeSetCallback) == 0x000030, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::OnDateTimeSetCallback' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowDateTimePickerWithLimits, OnCancelCallback) == 0x000040, "Member 'IGDateTimePickerBPL_ShowDateTimePickerWithLimits::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGDateTimePickerBPL.ShowTimePicker
// 0x0028 (0x0028 - 0x0000)
struct IGDateTimePickerBPL_ShowTimePicker final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minute;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)> OnTimeSetCallback;                                 // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDateTimePickerBPL_ShowTimePicker) == 0x000004, "Wrong alignment on IGDateTimePickerBPL_ShowTimePicker");
static_assert(sizeof(IGDateTimePickerBPL_ShowTimePicker) == 0x000028, "Wrong size on IGDateTimePickerBPL_ShowTimePicker");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePicker, Hour) == 0x000000, "Member 'IGDateTimePickerBPL_ShowTimePicker::Hour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePicker, Minute) == 0x000004, "Member 'IGDateTimePickerBPL_ShowTimePicker::Minute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePicker, OnTimeSetCallback) == 0x000008, "Member 'IGDateTimePickerBPL_ShowTimePicker::OnTimeSetCallback' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePicker, OnCancelCallback) == 0x000018, "Member 'IGDateTimePickerBPL_ShowTimePicker::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGDateTimePickerBPL.ShowTimePickerWithLimits
// 0x0038 (0x0038 - 0x0000)
struct IGDateTimePickerBPL_ShowTimePickerWithLimits final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minute;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FromHour;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FromMinute;                                        // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ToHour;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ToMinute;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Year, int32 Month, int32 Day, int32 Hour, int32 Minute)> OnTimeSetCallback;                                 // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDateTimePickerBPL_ShowTimePickerWithLimits) == 0x000004, "Wrong alignment on IGDateTimePickerBPL_ShowTimePickerWithLimits");
static_assert(sizeof(IGDateTimePickerBPL_ShowTimePickerWithLimits) == 0x000038, "Wrong size on IGDateTimePickerBPL_ShowTimePickerWithLimits");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePickerWithLimits, Hour) == 0x000000, "Member 'IGDateTimePickerBPL_ShowTimePickerWithLimits::Hour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePickerWithLimits, Minute) == 0x000004, "Member 'IGDateTimePickerBPL_ShowTimePickerWithLimits::Minute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePickerWithLimits, FromHour) == 0x000008, "Member 'IGDateTimePickerBPL_ShowTimePickerWithLimits::FromHour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePickerWithLimits, FromMinute) == 0x00000C, "Member 'IGDateTimePickerBPL_ShowTimePickerWithLimits::FromMinute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePickerWithLimits, ToHour) == 0x000010, "Member 'IGDateTimePickerBPL_ShowTimePickerWithLimits::ToHour' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePickerWithLimits, ToMinute) == 0x000014, "Member 'IGDateTimePickerBPL_ShowTimePickerWithLimits::ToMinute' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePickerWithLimits, OnTimeSetCallback) == 0x000018, "Member 'IGDateTimePickerBPL_ShowTimePickerWithLimits::OnTimeSetCallback' has a wrong offset!");
static_assert(offsetof(IGDateTimePickerBPL_ShowTimePickerWithLimits, OnCancelCallback) == 0x000028, "Member 'IGDateTimePickerBPL_ShowTimePickerWithLimits::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetBatteryLevel
// 0x0004 (0x0004 - 0x0000)
struct IGDeviceInfo_GetBatteryLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetBatteryLevel) == 0x000004, "Wrong alignment on IGDeviceInfo_GetBatteryLevel");
static_assert(sizeof(IGDeviceInfo_GetBatteryLevel) == 0x000004, "Wrong size on IGDeviceInfo_GetBatteryLevel");
static_assert(offsetof(IGDeviceInfo_GetBatteryLevel, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetBatteryLevel::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetBatteryState
// 0x0001 (0x0001 - 0x0000)
struct IGDeviceInfo_GetBatteryState final
{
public:
	EBatteryState                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetBatteryState) == 0x000001, "Wrong alignment on IGDeviceInfo_GetBatteryState");
static_assert(sizeof(IGDeviceInfo_GetBatteryState) == 0x000001, "Wrong size on IGDeviceInfo_GetBatteryState");
static_assert(offsetof(IGDeviceInfo_GetBatteryState, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetBatteryState::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetLocalizedModel
// 0x0010 (0x0010 - 0x0000)
struct IGDeviceInfo_GetLocalizedModel final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetLocalizedModel) == 0x000008, "Wrong alignment on IGDeviceInfo_GetLocalizedModel");
static_assert(sizeof(IGDeviceInfo_GetLocalizedModel) == 0x000010, "Wrong size on IGDeviceInfo_GetLocalizedModel");
static_assert(offsetof(IGDeviceInfo_GetLocalizedModel, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetLocalizedModel::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetModel
// 0x0010 (0x0010 - 0x0000)
struct IGDeviceInfo_GetModel final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetModel) == 0x000008, "Wrong alignment on IGDeviceInfo_GetModel");
static_assert(sizeof(IGDeviceInfo_GetModel) == 0x000010, "Wrong size on IGDeviceInfo_GetModel");
static_assert(offsetof(IGDeviceInfo_GetModel, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetModel::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetName
// 0x0010 (0x0010 - 0x0000)
struct IGDeviceInfo_GetName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetName) == 0x000008, "Wrong alignment on IGDeviceInfo_GetName");
static_assert(sizeof(IGDeviceInfo_GetName) == 0x000010, "Wrong size on IGDeviceInfo_GetName");
static_assert(offsetof(IGDeviceInfo_GetName, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetName::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetSystemName
// 0x0010 (0x0010 - 0x0000)
struct IGDeviceInfo_GetSystemName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetSystemName) == 0x000008, "Wrong alignment on IGDeviceInfo_GetSystemName");
static_assert(sizeof(IGDeviceInfo_GetSystemName) == 0x000010, "Wrong size on IGDeviceInfo_GetSystemName");
static_assert(offsetof(IGDeviceInfo_GetSystemName, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetSystemName::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetSystemVersion
// 0x0010 (0x0010 - 0x0000)
struct IGDeviceInfo_GetSystemVersion final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetSystemVersion) == 0x000008, "Wrong alignment on IGDeviceInfo_GetSystemVersion");
static_assert(sizeof(IGDeviceInfo_GetSystemVersion) == 0x000010, "Wrong size on IGDeviceInfo_GetSystemVersion");
static_assert(offsetof(IGDeviceInfo_GetSystemVersion, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetSystemVersion::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetUserInterfaceIdiom
// 0x0001 (0x0001 - 0x0000)
struct IGDeviceInfo_GetUserInterfaceIdiom final
{
public:
	EUserInterfaceIdiom                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetUserInterfaceIdiom) == 0x000001, "Wrong alignment on IGDeviceInfo_GetUserInterfaceIdiom");
static_assert(sizeof(IGDeviceInfo_GetUserInterfaceIdiom) == 0x000001, "Wrong size on IGDeviceInfo_GetUserInterfaceIdiom");
static_assert(offsetof(IGDeviceInfo_GetUserInterfaceIdiom, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetUserInterfaceIdiom::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.GetUUID
// 0x0010 (0x0010 - 0x0000)
struct IGDeviceInfo_GetUUID final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_GetUUID) == 0x000008, "Wrong alignment on IGDeviceInfo_GetUUID");
static_assert(sizeof(IGDeviceInfo_GetUUID) == 0x000010, "Wrong size on IGDeviceInfo_GetUUID");
static_assert(offsetof(IGDeviceInfo_GetUUID, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_GetUUID::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.IsBatteryMonitoringEnabled
// 0x0001 (0x0001 - 0x0000)
struct IGDeviceInfo_IsBatteryMonitoringEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_IsBatteryMonitoringEnabled) == 0x000001, "Wrong alignment on IGDeviceInfo_IsBatteryMonitoringEnabled");
static_assert(sizeof(IGDeviceInfo_IsBatteryMonitoringEnabled) == 0x000001, "Wrong size on IGDeviceInfo_IsBatteryMonitoringEnabled");
static_assert(offsetof(IGDeviceInfo_IsBatteryMonitoringEnabled, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_IsBatteryMonitoringEnabled::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.IsMultitaskingSupported
// 0x0001 (0x0001 - 0x0000)
struct IGDeviceInfo_IsMultitaskingSupported final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_IsMultitaskingSupported) == 0x000001, "Wrong alignment on IGDeviceInfo_IsMultitaskingSupported");
static_assert(sizeof(IGDeviceInfo_IsMultitaskingSupported) == 0x000001, "Wrong size on IGDeviceInfo_IsMultitaskingSupported");
static_assert(offsetof(IGDeviceInfo_IsMultitaskingSupported, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_IsMultitaskingSupported::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.IsProximityMonitoringEnabled
// 0x0001 (0x0001 - 0x0000)
struct IGDeviceInfo_IsProximityMonitoringEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_IsProximityMonitoringEnabled) == 0x000001, "Wrong alignment on IGDeviceInfo_IsProximityMonitoringEnabled");
static_assert(sizeof(IGDeviceInfo_IsProximityMonitoringEnabled) == 0x000001, "Wrong size on IGDeviceInfo_IsProximityMonitoringEnabled");
static_assert(offsetof(IGDeviceInfo_IsProximityMonitoringEnabled, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_IsProximityMonitoringEnabled::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.ProximityState
// 0x0001 (0x0001 - 0x0000)
struct IGDeviceInfo_ProximityState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_ProximityState) == 0x000001, "Wrong alignment on IGDeviceInfo_ProximityState");
static_assert(sizeof(IGDeviceInfo_ProximityState) == 0x000001, "Wrong size on IGDeviceInfo_ProximityState");
static_assert(offsetof(IGDeviceInfo_ProximityState, ReturnValue) == 0x000000, "Member 'IGDeviceInfo_ProximityState::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.SetBatteryMonitoringEnabled
// 0x0001 (0x0001 - 0x0000)
struct IGDeviceInfo_SetBatteryMonitoringEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_SetBatteryMonitoringEnabled) == 0x000001, "Wrong alignment on IGDeviceInfo_SetBatteryMonitoringEnabled");
static_assert(sizeof(IGDeviceInfo_SetBatteryMonitoringEnabled) == 0x000001, "Wrong size on IGDeviceInfo_SetBatteryMonitoringEnabled");
static_assert(offsetof(IGDeviceInfo_SetBatteryMonitoringEnabled, Enabled) == 0x000000, "Member 'IGDeviceInfo_SetBatteryMonitoringEnabled::Enabled' has a wrong offset!");

// Function IOSGoodies.IGDeviceInfo.SetProximityMonitoringEnabled
// 0x0001 (0x0001 - 0x0000)
struct IGDeviceInfo_SetProximityMonitoringEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDeviceInfo_SetProximityMonitoringEnabled) == 0x000001, "Wrong alignment on IGDeviceInfo_SetProximityMonitoringEnabled");
static_assert(sizeof(IGDeviceInfo_SetProximityMonitoringEnabled) == 0x000001, "Wrong size on IGDeviceInfo_SetProximityMonitoringEnabled");
static_assert(offsetof(IGDeviceInfo_SetProximityMonitoringEnabled, Enabled) == 0x000000, "Member 'IGDeviceInfo_SetProximityMonitoringEnabled::Enabled' has a wrong offset!");

// Function IOSGoodies.IGDialogBPL.ShowActionSheetComplexDialog
// 0x0078 (0x0078 - 0x0000)
struct IGDialogBPL_ShowActionSheetComplexDialog final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CancelButtonText;                                  // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DestructiveButtonText;                             // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ActionButtonsTexts;                                // 0x0030(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         PosX;                                              // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x0044(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelButtonClickedCallback;                     // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnDestructiveButtonClickedCallback;                // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Index)>                  ActionButtonCallback;                              // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDialogBPL_ShowActionSheetComplexDialog) == 0x000008, "Wrong alignment on IGDialogBPL_ShowActionSheetComplexDialog");
static_assert(sizeof(IGDialogBPL_ShowActionSheetComplexDialog) == 0x000078, "Wrong size on IGDialogBPL_ShowActionSheetComplexDialog");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, Title) == 0x000000, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::Title' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, CancelButtonText) == 0x000010, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::CancelButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, DestructiveButtonText) == 0x000020, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::DestructiveButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, ActionButtonsTexts) == 0x000030, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::ActionButtonsTexts' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, PosX) == 0x000040, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::PosX' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, PosY) == 0x000044, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::PosY' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, OnCancelButtonClickedCallback) == 0x000048, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::OnCancelButtonClickedCallback' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, OnDestructiveButtonClickedCallback) == 0x000058, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::OnDestructiveButtonClickedCallback' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetComplexDialog, ActionButtonCallback) == 0x000068, "Member 'IGDialogBPL_ShowActionSheetComplexDialog::ActionButtonCallback' has a wrong offset!");

// Function IOSGoodies.IGDialogBPL.ShowActionSheetSimpleDialog
// 0x0058 (0x0058 - 0x0000)
struct IGDialogBPL_ShowActionSheetSimpleDialog final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CancelButtonText;                                  // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ActionButtonsTexts;                                // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         PosX;                                              // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelButtonClickedCallback;                     // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Index)>                  ActionButtonCallback;                              // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDialogBPL_ShowActionSheetSimpleDialog) == 0x000008, "Wrong alignment on IGDialogBPL_ShowActionSheetSimpleDialog");
static_assert(sizeof(IGDialogBPL_ShowActionSheetSimpleDialog) == 0x000058, "Wrong size on IGDialogBPL_ShowActionSheetSimpleDialog");
static_assert(offsetof(IGDialogBPL_ShowActionSheetSimpleDialog, Title) == 0x000000, "Member 'IGDialogBPL_ShowActionSheetSimpleDialog::Title' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetSimpleDialog, CancelButtonText) == 0x000010, "Member 'IGDialogBPL_ShowActionSheetSimpleDialog::CancelButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetSimpleDialog, ActionButtonsTexts) == 0x000020, "Member 'IGDialogBPL_ShowActionSheetSimpleDialog::ActionButtonsTexts' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetSimpleDialog, PosX) == 0x000030, "Member 'IGDialogBPL_ShowActionSheetSimpleDialog::PosX' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetSimpleDialog, PosY) == 0x000034, "Member 'IGDialogBPL_ShowActionSheetSimpleDialog::PosY' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetSimpleDialog, OnCancelButtonClickedCallback) == 0x000038, "Member 'IGDialogBPL_ShowActionSheetSimpleDialog::OnCancelButtonClickedCallback' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowActionSheetSimpleDialog, ActionButtonCallback) == 0x000048, "Member 'IGDialogBPL_ShowActionSheetSimpleDialog::ActionButtonCallback' has a wrong offset!");

// Function IOSGoodies.IGDialogBPL.ShowInputFieldDialog
// 0x0070 (0x0070 - 0x0000)
struct IGDialogBPL_ShowInputFieldDialog final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InputPlaceholderText;                              // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 buttonOkTitle;                                     // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 buttonCancelTitle;                                 // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnConfirmInputButtonClickedCallback;               // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelButtonClickedCallback;                     // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDialogBPL_ShowInputFieldDialog) == 0x000008, "Wrong alignment on IGDialogBPL_ShowInputFieldDialog");
static_assert(sizeof(IGDialogBPL_ShowInputFieldDialog) == 0x000070, "Wrong size on IGDialogBPL_ShowInputFieldDialog");
static_assert(offsetof(IGDialogBPL_ShowInputFieldDialog, Title) == 0x000000, "Member 'IGDialogBPL_ShowInputFieldDialog::Title' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowInputFieldDialog, Text) == 0x000010, "Member 'IGDialogBPL_ShowInputFieldDialog::Text' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowInputFieldDialog, InputPlaceholderText) == 0x000020, "Member 'IGDialogBPL_ShowInputFieldDialog::InputPlaceholderText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowInputFieldDialog, buttonOkTitle) == 0x000030, "Member 'IGDialogBPL_ShowInputFieldDialog::buttonOkTitle' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowInputFieldDialog, buttonCancelTitle) == 0x000040, "Member 'IGDialogBPL_ShowInputFieldDialog::buttonCancelTitle' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowInputFieldDialog, OnConfirmInputButtonClickedCallback) == 0x000050, "Member 'IGDialogBPL_ShowInputFieldDialog::OnConfirmInputButtonClickedCallback' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowInputFieldDialog, OnCancelButtonClickedCallback) == 0x000060, "Member 'IGDialogBPL_ShowInputFieldDialog::OnCancelButtonClickedCallback' has a wrong offset!");

// Function IOSGoodies.IGDialogBPL.ShowSingleButtonDialog
// 0x0040 (0x0040 - 0x0000)
struct IGDialogBPL_ShowSingleButtonDialog final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConfirmButtonText;                                 // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnConfirmButtonClickedCallback;                    // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDialogBPL_ShowSingleButtonDialog) == 0x000008, "Wrong alignment on IGDialogBPL_ShowSingleButtonDialog");
static_assert(sizeof(IGDialogBPL_ShowSingleButtonDialog) == 0x000040, "Wrong size on IGDialogBPL_ShowSingleButtonDialog");
static_assert(offsetof(IGDialogBPL_ShowSingleButtonDialog, Title) == 0x000000, "Member 'IGDialogBPL_ShowSingleButtonDialog::Title' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowSingleButtonDialog, Message) == 0x000010, "Member 'IGDialogBPL_ShowSingleButtonDialog::Message' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowSingleButtonDialog, ConfirmButtonText) == 0x000020, "Member 'IGDialogBPL_ShowSingleButtonDialog::ConfirmButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowSingleButtonDialog, OnConfirmButtonClickedCallback) == 0x000030, "Member 'IGDialogBPL_ShowSingleButtonDialog::OnConfirmButtonClickedCallback' has a wrong offset!");

// Function IOSGoodies.IGDialogBPL.ShowThreeButtonsDialog
// 0x0080 (0x0080 - 0x0000)
struct IGDialogBPL_ShowThreeButtonsDialog final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FirstOptionButtonText;                             // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SecondOptionButtonText;                            // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CancelButtonText;                                  // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnFirstOptionButtonClickedCallback;                // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSecondOptionButtonClickedCallback;               // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelButtonClickedCallback;                     // 0x0070(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDialogBPL_ShowThreeButtonsDialog) == 0x000008, "Wrong alignment on IGDialogBPL_ShowThreeButtonsDialog");
static_assert(sizeof(IGDialogBPL_ShowThreeButtonsDialog) == 0x000080, "Wrong size on IGDialogBPL_ShowThreeButtonsDialog");
static_assert(offsetof(IGDialogBPL_ShowThreeButtonsDialog, Title) == 0x000000, "Member 'IGDialogBPL_ShowThreeButtonsDialog::Title' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowThreeButtonsDialog, Message) == 0x000010, "Member 'IGDialogBPL_ShowThreeButtonsDialog::Message' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowThreeButtonsDialog, FirstOptionButtonText) == 0x000020, "Member 'IGDialogBPL_ShowThreeButtonsDialog::FirstOptionButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowThreeButtonsDialog, SecondOptionButtonText) == 0x000030, "Member 'IGDialogBPL_ShowThreeButtonsDialog::SecondOptionButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowThreeButtonsDialog, CancelButtonText) == 0x000040, "Member 'IGDialogBPL_ShowThreeButtonsDialog::CancelButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowThreeButtonsDialog, OnFirstOptionButtonClickedCallback) == 0x000050, "Member 'IGDialogBPL_ShowThreeButtonsDialog::OnFirstOptionButtonClickedCallback' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowThreeButtonsDialog, OnSecondOptionButtonClickedCallback) == 0x000060, "Member 'IGDialogBPL_ShowThreeButtonsDialog::OnSecondOptionButtonClickedCallback' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowThreeButtonsDialog, OnCancelButtonClickedCallback) == 0x000070, "Member 'IGDialogBPL_ShowThreeButtonsDialog::OnCancelButtonClickedCallback' has a wrong offset!");

// Function IOSGoodies.IGDialogBPL.ShowTwoButtonsDialog
// 0x0060 (0x0060 - 0x0000)
struct IGDialogBPL_ShowTwoButtonsDialog final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConfirmButtonText;                                 // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CancelButtonText;                                  // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnConfirmButtonClickedCallback;                    // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelButtonClickedCallback;                     // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDialogBPL_ShowTwoButtonsDialog) == 0x000008, "Wrong alignment on IGDialogBPL_ShowTwoButtonsDialog");
static_assert(sizeof(IGDialogBPL_ShowTwoButtonsDialog) == 0x000060, "Wrong size on IGDialogBPL_ShowTwoButtonsDialog");
static_assert(offsetof(IGDialogBPL_ShowTwoButtonsDialog, Title) == 0x000000, "Member 'IGDialogBPL_ShowTwoButtonsDialog::Title' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowTwoButtonsDialog, Message) == 0x000010, "Member 'IGDialogBPL_ShowTwoButtonsDialog::Message' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowTwoButtonsDialog, ConfirmButtonText) == 0x000020, "Member 'IGDialogBPL_ShowTwoButtonsDialog::ConfirmButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowTwoButtonsDialog, CancelButtonText) == 0x000030, "Member 'IGDialogBPL_ShowTwoButtonsDialog::CancelButtonText' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowTwoButtonsDialog, OnConfirmButtonClickedCallback) == 0x000040, "Member 'IGDialogBPL_ShowTwoButtonsDialog::OnConfirmButtonClickedCallback' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ShowTwoButtonsDialog, OnCancelButtonClickedCallback) == 0x000050, "Member 'IGDialogBPL_ShowTwoButtonsDialog::OnCancelButtonClickedCallback' has a wrong offset!");

// Function IOSGoodies.IGDialogBPL.ToggleStatusBar
// 0x0002 (0x0002 - 0x0000)
struct IGDialogBPL_ToggleStatusBar final
{
public:
	bool                                          StatusBarHidden;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStatusBarStyle                               StatusBarStyle;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGDialogBPL_ToggleStatusBar) == 0x000001, "Wrong alignment on IGDialogBPL_ToggleStatusBar");
static_assert(sizeof(IGDialogBPL_ToggleStatusBar) == 0x000002, "Wrong size on IGDialogBPL_ToggleStatusBar");
static_assert(offsetof(IGDialogBPL_ToggleStatusBar, StatusBarHidden) == 0x000000, "Member 'IGDialogBPL_ToggleStatusBar::StatusBarHidden' has a wrong offset!");
static_assert(offsetof(IGDialogBPL_ToggleStatusBar, StatusBarStyle) == 0x000001, "Member 'IGDialogBPL_ToggleStatusBar::StatusBarStyle' has a wrong offset!");

// Function IOSGoodies.IGEvents.CompleteReminder
// 0x0018 (0x0018 - 0x0000)
struct IGEvents_CompleteReminder final
{
public:
	class FString                                 ReminderId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Complete;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGEvents_CompleteReminder) == 0x000008, "Wrong alignment on IGEvents_CompleteReminder");
static_assert(sizeof(IGEvents_CompleteReminder) == 0x000018, "Wrong size on IGEvents_CompleteReminder");
static_assert(offsetof(IGEvents_CompleteReminder, ReminderId) == 0x000000, "Member 'IGEvents_CompleteReminder::ReminderId' has a wrong offset!");
static_assert(offsetof(IGEvents_CompleteReminder, Complete) == 0x000010, "Member 'IGEvents_CompleteReminder::Complete' has a wrong offset!");
static_assert(offsetof(IGEvents_CompleteReminder, ReturnValue) == 0x000011, "Member 'IGEvents_CompleteReminder::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGEvents.CreateCalendarEvent
// 0x0050 (0x0050 - 0x0000)
struct IGEvents_CreateCalendarEvent final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Notes;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              StartDate;                                         // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              EndDate;                                           // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& EventId)> OnSuccessCallback;                                 // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnErrorCallback;                                   // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGEvents_CreateCalendarEvent) == 0x000008, "Wrong alignment on IGEvents_CreateCalendarEvent");
static_assert(sizeof(IGEvents_CreateCalendarEvent) == 0x000050, "Wrong size on IGEvents_CreateCalendarEvent");
static_assert(offsetof(IGEvents_CreateCalendarEvent, Title) == 0x000000, "Member 'IGEvents_CreateCalendarEvent::Title' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateCalendarEvent, Notes) == 0x000010, "Member 'IGEvents_CreateCalendarEvent::Notes' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateCalendarEvent, StartDate) == 0x000020, "Member 'IGEvents_CreateCalendarEvent::StartDate' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateCalendarEvent, EndDate) == 0x000028, "Member 'IGEvents_CreateCalendarEvent::EndDate' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateCalendarEvent, OnSuccessCallback) == 0x000030, "Member 'IGEvents_CreateCalendarEvent::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateCalendarEvent, OnErrorCallback) == 0x000040, "Member 'IGEvents_CreateCalendarEvent::OnErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGEvents.CreateReminder
// 0x0040 (0x0040 - 0x0000)
struct IGEvents_CreateReminder final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              StartDate;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              DueDate;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& EventId)> OnSuccessCallback;                                 // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnErrorCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGEvents_CreateReminder) == 0x000008, "Wrong alignment on IGEvents_CreateReminder");
static_assert(sizeof(IGEvents_CreateReminder) == 0x000040, "Wrong size on IGEvents_CreateReminder");
static_assert(offsetof(IGEvents_CreateReminder, Title) == 0x000000, "Member 'IGEvents_CreateReminder::Title' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateReminder, StartDate) == 0x000010, "Member 'IGEvents_CreateReminder::StartDate' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateReminder, DueDate) == 0x000018, "Member 'IGEvents_CreateReminder::DueDate' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateReminder, OnSuccessCallback) == 0x000020, "Member 'IGEvents_CreateReminder::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateReminder, OnErrorCallback) == 0x000030, "Member 'IGEvents_CreateReminder::OnErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGEvents.CreateRepeatingEvent
// 0x0060 (0x0060 - 0x0000)
struct IGEvents_CreateRepeatingEvent final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Notes;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              StartDate;                                         // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              EndDate;                                           // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              RepeatUntilDate;                                   // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERecurrencyRuleType                           RuleType;                                          // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Interval;                                          // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& EventId)> OnSuccessCallback;                                 // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnErrorCallback;                                   // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGEvents_CreateRepeatingEvent) == 0x000008, "Wrong alignment on IGEvents_CreateRepeatingEvent");
static_assert(sizeof(IGEvents_CreateRepeatingEvent) == 0x000060, "Wrong size on IGEvents_CreateRepeatingEvent");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, Title) == 0x000000, "Member 'IGEvents_CreateRepeatingEvent::Title' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, Notes) == 0x000010, "Member 'IGEvents_CreateRepeatingEvent::Notes' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, StartDate) == 0x000020, "Member 'IGEvents_CreateRepeatingEvent::StartDate' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, EndDate) == 0x000028, "Member 'IGEvents_CreateRepeatingEvent::EndDate' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, RepeatUntilDate) == 0x000030, "Member 'IGEvents_CreateRepeatingEvent::RepeatUntilDate' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, RuleType) == 0x000038, "Member 'IGEvents_CreateRepeatingEvent::RuleType' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, Interval) == 0x00003C, "Member 'IGEvents_CreateRepeatingEvent::Interval' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, OnSuccessCallback) == 0x000040, "Member 'IGEvents_CreateRepeatingEvent::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGEvents_CreateRepeatingEvent, OnErrorCallback) == 0x000050, "Member 'IGEvents_CreateRepeatingEvent::OnErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGEvents.DeleteReminder
// 0x0018 (0x0018 - 0x0000)
struct IGEvents_DeleteReminder final
{
public:
	class FString                                 ReminderId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGEvents_DeleteReminder) == 0x000008, "Wrong alignment on IGEvents_DeleteReminder");
static_assert(sizeof(IGEvents_DeleteReminder) == 0x000018, "Wrong size on IGEvents_DeleteReminder");
static_assert(offsetof(IGEvents_DeleteReminder, ReminderId) == 0x000000, "Member 'IGEvents_DeleteReminder::ReminderId' has a wrong offset!");
static_assert(offsetof(IGEvents_DeleteReminder, ReturnValue) == 0x000010, "Member 'IGEvents_DeleteReminder::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGEvents.OpenCalendarAtDate
// 0x0008 (0x0008 - 0x0000)
struct IGEvents_OpenCalendarAtDate final
{
public:
	struct FDateTime                              Date;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGEvents_OpenCalendarAtDate) == 0x000008, "Wrong alignment on IGEvents_OpenCalendarAtDate");
static_assert(sizeof(IGEvents_OpenCalendarAtDate) == 0x000008, "Wrong size on IGEvents_OpenCalendarAtDate");
static_assert(offsetof(IGEvents_OpenCalendarAtDate, Date) == 0x000000, "Member 'IGEvents_OpenCalendarAtDate::Date' has a wrong offset!");

// Function IOSGoodies.IGEvents.RemoveCalendarEvent
// 0x0020 (0x0020 - 0x0000)
struct IGEvents_RemoveCalendarEvent final
{
public:
	class FString                                 EventId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnRemovedCallback;                                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGEvents_RemoveCalendarEvent) == 0x000008, "Wrong alignment on IGEvents_RemoveCalendarEvent");
static_assert(sizeof(IGEvents_RemoveCalendarEvent) == 0x000020, "Wrong size on IGEvents_RemoveCalendarEvent");
static_assert(offsetof(IGEvents_RemoveCalendarEvent, EventId) == 0x000000, "Member 'IGEvents_RemoveCalendarEvent::EventId' has a wrong offset!");
static_assert(offsetof(IGEvents_RemoveCalendarEvent, OnRemovedCallback) == 0x000010, "Member 'IGEvents_RemoveCalendarEvent::OnRemovedCallback' has a wrong offset!");

// Function IOSGoodies.IGFilePickerBPL.ExportFilesToService
// 0x0030 (0x0030 - 0x0000)
struct IGFilePickerBPL_ExportFilesToService final
{
public:
	TArray<class FString>                         FilePaths;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<class FString>& Paths)> OnSuccess;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancel;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGFilePickerBPL_ExportFilesToService) == 0x000008, "Wrong alignment on IGFilePickerBPL_ExportFilesToService");
static_assert(sizeof(IGFilePickerBPL_ExportFilesToService) == 0x000030, "Wrong size on IGFilePickerBPL_ExportFilesToService");
static_assert(offsetof(IGFilePickerBPL_ExportFilesToService, FilePaths) == 0x000000, "Member 'IGFilePickerBPL_ExportFilesToService::FilePaths' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_ExportFilesToService, OnSuccess) == 0x000010, "Member 'IGFilePickerBPL_ExportFilesToService::OnSuccess' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_ExportFilesToService, OnCancel) == 0x000020, "Member 'IGFilePickerBPL_ExportFilesToService::OnCancel' has a wrong offset!");

// Function IOSGoodies.IGFilePickerBPL.ImportFiles
// 0x0038 (0x0038 - 0x0000)
struct IGFilePickerBPL_ImportFiles final
{
public:
	TArray<class FString>                         FileTypes;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          AllowMultiple;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<class FString>& Paths)> OnSuccess;                                         // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancel;                                          // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGFilePickerBPL_ImportFiles) == 0x000008, "Wrong alignment on IGFilePickerBPL_ImportFiles");
static_assert(sizeof(IGFilePickerBPL_ImportFiles) == 0x000038, "Wrong size on IGFilePickerBPL_ImportFiles");
static_assert(offsetof(IGFilePickerBPL_ImportFiles, FileTypes) == 0x000000, "Member 'IGFilePickerBPL_ImportFiles::FileTypes' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_ImportFiles, AllowMultiple) == 0x000010, "Member 'IGFilePickerBPL_ImportFiles::AllowMultiple' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_ImportFiles, OnSuccess) == 0x000014, "Member 'IGFilePickerBPL_ImportFiles::OnSuccess' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_ImportFiles, OnCancel) == 0x000024, "Member 'IGFilePickerBPL_ImportFiles::OnCancel' has a wrong offset!");

// Function IOSGoodies.IGFilePickerBPL.MoveFilesToService
// 0x0030 (0x0030 - 0x0000)
struct IGFilePickerBPL_MoveFilesToService final
{
public:
	TArray<class FString>                         FilePaths;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<class FString>& Paths)> OnSuccess;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancel;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGFilePickerBPL_MoveFilesToService) == 0x000008, "Wrong alignment on IGFilePickerBPL_MoveFilesToService");
static_assert(sizeof(IGFilePickerBPL_MoveFilesToService) == 0x000030, "Wrong size on IGFilePickerBPL_MoveFilesToService");
static_assert(offsetof(IGFilePickerBPL_MoveFilesToService, FilePaths) == 0x000000, "Member 'IGFilePickerBPL_MoveFilesToService::FilePaths' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_MoveFilesToService, OnSuccess) == 0x000010, "Member 'IGFilePickerBPL_MoveFilesToService::OnSuccess' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_MoveFilesToService, OnCancel) == 0x000020, "Member 'IGFilePickerBPL_MoveFilesToService::OnCancel' has a wrong offset!");

// Function IOSGoodies.IGFilePickerBPL.OpenFiles
// 0x0038 (0x0038 - 0x0000)
struct IGFilePickerBPL_OpenFiles final
{
public:
	TArray<class FString>                         FileTypes;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          AllowMultiple;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<class FString>& Paths)> OnSuccess;                                         // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancel;                                          // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGFilePickerBPL_OpenFiles) == 0x000008, "Wrong alignment on IGFilePickerBPL_OpenFiles");
static_assert(sizeof(IGFilePickerBPL_OpenFiles) == 0x000038, "Wrong size on IGFilePickerBPL_OpenFiles");
static_assert(offsetof(IGFilePickerBPL_OpenFiles, FileTypes) == 0x000000, "Member 'IGFilePickerBPL_OpenFiles::FileTypes' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_OpenFiles, AllowMultiple) == 0x000010, "Member 'IGFilePickerBPL_OpenFiles::AllowMultiple' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_OpenFiles, OnSuccess) == 0x000014, "Member 'IGFilePickerBPL_OpenFiles::OnSuccess' has a wrong offset!");
static_assert(offsetof(IGFilePickerBPL_OpenFiles, OnCancel) == 0x000024, "Member 'IGFilePickerBPL_OpenFiles::OnCancel' has a wrong offset!");

// Function IOSGoodies.IGFlashlight.DeviceHasFlashlight
// 0x0001 (0x0001 - 0x0000)
struct IGFlashlight_DeviceHasFlashlight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGFlashlight_DeviceHasFlashlight) == 0x000001, "Wrong alignment on IGFlashlight_DeviceHasFlashlight");
static_assert(sizeof(IGFlashlight_DeviceHasFlashlight) == 0x000001, "Wrong size on IGFlashlight_DeviceHasFlashlight");
static_assert(offsetof(IGFlashlight_DeviceHasFlashlight, ReturnValue) == 0x000000, "Member 'IGFlashlight_DeviceHasFlashlight::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGFlashlight.EnableFlashlight
// 0x0001 (0x0001 - 0x0000)
struct IGFlashlight_EnableFlashlight final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGFlashlight_EnableFlashlight) == 0x000001, "Wrong alignment on IGFlashlight_EnableFlashlight");
static_assert(sizeof(IGFlashlight_EnableFlashlight) == 0x000001, "Wrong size on IGFlashlight_EnableFlashlight");
static_assert(offsetof(IGFlashlight_EnableFlashlight, Enable) == 0x000000, "Member 'IGFlashlight_EnableFlashlight::Enable' has a wrong offset!");

// Function IOSGoodies.IGFlashlight.SetFlashlightLevel
// 0x0004 (0x0004 - 0x0000)
struct IGFlashlight_SetFlashlightLevel final
{
public:
	float                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGFlashlight_SetFlashlightLevel) == 0x000004, "Wrong alignment on IGFlashlight_SetFlashlightLevel");
static_assert(sizeof(IGFlashlight_SetFlashlightLevel) == 0x000004, "Wrong size on IGFlashlight_SetFlashlightLevel");
static_assert(offsetof(IGFlashlight_SetFlashlightLevel, Level) == 0x000000, "Member 'IGFlashlight_SetFlashlightLevel::Level' has a wrong offset!");

// Function IOSGoodies.IGHaptics.IsHapticFeedbackSupported
// 0x0001 (0x0001 - 0x0000)
struct IGHaptics_IsHapticFeedbackSupported final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGHaptics_IsHapticFeedbackSupported) == 0x000001, "Wrong alignment on IGHaptics_IsHapticFeedbackSupported");
static_assert(sizeof(IGHaptics_IsHapticFeedbackSupported) == 0x000001, "Wrong size on IGHaptics_IsHapticFeedbackSupported");
static_assert(offsetof(IGHaptics_IsHapticFeedbackSupported, ReturnValue) == 0x000000, "Member 'IGHaptics_IsHapticFeedbackSupported::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGHaptics.SendImpactHapticFeedback
// 0x0001 (0x0001 - 0x0000)
struct IGHaptics_SendImpactHapticFeedback final
{
public:
	EImpactStrength                               Strength;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGHaptics_SendImpactHapticFeedback) == 0x000001, "Wrong alignment on IGHaptics_SendImpactHapticFeedback");
static_assert(sizeof(IGHaptics_SendImpactHapticFeedback) == 0x000001, "Wrong size on IGHaptics_SendImpactHapticFeedback");
static_assert(offsetof(IGHaptics_SendImpactHapticFeedback, Strength) == 0x000000, "Member 'IGHaptics_SendImpactHapticFeedback::Strength' has a wrong offset!");

// Function IOSGoodies.IGHaptics.SendNotificationHapticFeedback
// 0x0001 (0x0001 - 0x0000)
struct IGHaptics_SendNotificationHapticFeedback final
{
public:
	ENotificationType                             Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGHaptics_SendNotificationHapticFeedback) == 0x000001, "Wrong alignment on IGHaptics_SendNotificationHapticFeedback");
static_assert(sizeof(IGHaptics_SendNotificationHapticFeedback) == 0x000001, "Wrong size on IGHaptics_SendNotificationHapticFeedback");
static_assert(offsetof(IGHaptics_SendNotificationHapticFeedback, Type) == 0x000000, "Member 'IGHaptics_SendNotificationHapticFeedback::Type' has a wrong offset!");

// Function IOSGoodies.IGImagePicker.DeleteImageFromGallery
// 0x002C (0x002C - 0x0000)
struct IGImagePicker_DeleteImageFromGallery final
{
public:
	EGallerySourceType                            SourceType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PosX;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x001C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGImagePicker_DeleteImageFromGallery) == 0x000004, "Wrong alignment on IGImagePicker_DeleteImageFromGallery");
static_assert(sizeof(IGImagePicker_DeleteImageFromGallery) == 0x00002C, "Wrong size on IGImagePicker_DeleteImageFromGallery");
static_assert(offsetof(IGImagePicker_DeleteImageFromGallery, SourceType) == 0x000000, "Member 'IGImagePicker_DeleteImageFromGallery::SourceType' has a wrong offset!");
static_assert(offsetof(IGImagePicker_DeleteImageFromGallery, PosX) == 0x000004, "Member 'IGImagePicker_DeleteImageFromGallery::PosX' has a wrong offset!");
static_assert(offsetof(IGImagePicker_DeleteImageFromGallery, PosY) == 0x000008, "Member 'IGImagePicker_DeleteImageFromGallery::PosY' has a wrong offset!");
static_assert(offsetof(IGImagePicker_DeleteImageFromGallery, OnSuccessCallback) == 0x00000C, "Member 'IGImagePicker_DeleteImageFromGallery::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGImagePicker_DeleteImageFromGallery, OnCancelCallback) == 0x00001C, "Member 'IGImagePicker_DeleteImageFromGallery::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGImagePicker.PickImageFromGallery
// 0x0030 (0x0030 - 0x0000)
struct IGImagePicker_PickImageFromGallery final
{
public:
	EGallerySourceType                            SourceType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AllowEditing;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PosX;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UTexture2D* Texture)>    OnPickImageFromGalleryCallback;                    // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x001C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         MaxSize;                                           // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGImagePicker_PickImageFromGallery) == 0x000004, "Wrong alignment on IGImagePicker_PickImageFromGallery");
static_assert(sizeof(IGImagePicker_PickImageFromGallery) == 0x000030, "Wrong size on IGImagePicker_PickImageFromGallery");
static_assert(offsetof(IGImagePicker_PickImageFromGallery, SourceType) == 0x000000, "Member 'IGImagePicker_PickImageFromGallery::SourceType' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickImageFromGallery, AllowEditing) == 0x000001, "Member 'IGImagePicker_PickImageFromGallery::AllowEditing' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickImageFromGallery, PosX) == 0x000004, "Member 'IGImagePicker_PickImageFromGallery::PosX' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickImageFromGallery, PosY) == 0x000008, "Member 'IGImagePicker_PickImageFromGallery::PosY' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickImageFromGallery, OnPickImageFromGalleryCallback) == 0x00000C, "Member 'IGImagePicker_PickImageFromGallery::OnPickImageFromGalleryCallback' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickImageFromGallery, OnCancelCallback) == 0x00001C, "Member 'IGImagePicker_PickImageFromGallery::OnCancelCallback' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickImageFromGallery, MaxSize) == 0x00002C, "Member 'IGImagePicker_PickImageFromGallery::MaxSize' has a wrong offset!");

// Function IOSGoodies.IGImagePicker.PickMediaFromGallery
// 0x0048 (0x0048 - 0x0000)
struct IGImagePicker_PickMediaFromGallery final
{
public:
	EGallerySourceType                            SourceType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AllowEditing;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PosX;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FIGPickedMedia& Media)> OnPickMediaFromGalleryCallback;                    // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x001C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         MediaTypes;                                        // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         MaxSize;                                           // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGImagePicker_PickMediaFromGallery) == 0x000008, "Wrong alignment on IGImagePicker_PickMediaFromGallery");
static_assert(sizeof(IGImagePicker_PickMediaFromGallery) == 0x000048, "Wrong size on IGImagePicker_PickMediaFromGallery");
static_assert(offsetof(IGImagePicker_PickMediaFromGallery, SourceType) == 0x000000, "Member 'IGImagePicker_PickMediaFromGallery::SourceType' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickMediaFromGallery, AllowEditing) == 0x000001, "Member 'IGImagePicker_PickMediaFromGallery::AllowEditing' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickMediaFromGallery, PosX) == 0x000004, "Member 'IGImagePicker_PickMediaFromGallery::PosX' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickMediaFromGallery, PosY) == 0x000008, "Member 'IGImagePicker_PickMediaFromGallery::PosY' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickMediaFromGallery, OnPickMediaFromGalleryCallback) == 0x00000C, "Member 'IGImagePicker_PickMediaFromGallery::OnPickMediaFromGalleryCallback' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickMediaFromGallery, OnCancelCallback) == 0x00001C, "Member 'IGImagePicker_PickMediaFromGallery::OnCancelCallback' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickMediaFromGallery, MediaTypes) == 0x000030, "Member 'IGImagePicker_PickMediaFromGallery::MediaTypes' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickMediaFromGallery, MaxSize) == 0x000040, "Member 'IGImagePicker_PickMediaFromGallery::MaxSize' has a wrong offset!");

// Function IOSGoodies.IGImagePicker.PickPhotoFromCamera
// 0x0028 (0x0028 - 0x0000)
struct IGImagePicker_PickPhotoFromCamera final
{
public:
	bool                                          AllowEditing;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseRearCamera;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECameraFlashMode                              FlashMode;                                         // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UTexture2D* Texture)>    OnPickPhotoFromCameraCallback;                     // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         MaxSize;                                           // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGImagePicker_PickPhotoFromCamera) == 0x000004, "Wrong alignment on IGImagePicker_PickPhotoFromCamera");
static_assert(sizeof(IGImagePicker_PickPhotoFromCamera) == 0x000028, "Wrong size on IGImagePicker_PickPhotoFromCamera");
static_assert(offsetof(IGImagePicker_PickPhotoFromCamera, AllowEditing) == 0x000000, "Member 'IGImagePicker_PickPhotoFromCamera::AllowEditing' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickPhotoFromCamera, UseRearCamera) == 0x000001, "Member 'IGImagePicker_PickPhotoFromCamera::UseRearCamera' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickPhotoFromCamera, FlashMode) == 0x000002, "Member 'IGImagePicker_PickPhotoFromCamera::FlashMode' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickPhotoFromCamera, OnPickPhotoFromCameraCallback) == 0x000004, "Member 'IGImagePicker_PickPhotoFromCamera::OnPickPhotoFromCameraCallback' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickPhotoFromCamera, OnCancelCallback) == 0x000014, "Member 'IGImagePicker_PickPhotoFromCamera::OnCancelCallback' has a wrong offset!");
static_assert(offsetof(IGImagePicker_PickPhotoFromCamera, MaxSize) == 0x000024, "Member 'IGImagePicker_PickPhotoFromCamera::MaxSize' has a wrong offset!");

// Function IOSGoodies.IGImagePicker.SaveImageToGallery
// 0x0028 (0x0028 - 0x0000)
struct IGImagePicker_SaveImageToGallery final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnImageSavedCallback;                              // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSaveErrorCallback;                               // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGImagePicker_SaveImageToGallery) == 0x000008, "Wrong alignment on IGImagePicker_SaveImageToGallery");
static_assert(sizeof(IGImagePicker_SaveImageToGallery) == 0x000028, "Wrong size on IGImagePicker_SaveImageToGallery");
static_assert(offsetof(IGImagePicker_SaveImageToGallery, Texture) == 0x000000, "Member 'IGImagePicker_SaveImageToGallery::Texture' has a wrong offset!");
static_assert(offsetof(IGImagePicker_SaveImageToGallery, OnImageSavedCallback) == 0x000008, "Member 'IGImagePicker_SaveImageToGallery::OnImageSavedCallback' has a wrong offset!");
static_assert(offsetof(IGImagePicker_SaveImageToGallery, OnSaveErrorCallback) == 0x000018, "Member 'IGImagePicker_SaveImageToGallery::OnSaveErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGImagePicker.TakeScreenShot
// 0x0010 (0x0010 - 0x0000)
struct IGImagePicker_TakeScreenShot final
{
public:
	TDelegate<void(class UTexture2D* Texture)>    OnScreenShotTakenCallback;                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGImagePicker_TakeScreenShot) == 0x000004, "Wrong alignment on IGImagePicker_TakeScreenShot");
static_assert(sizeof(IGImagePicker_TakeScreenShot) == 0x000010, "Wrong size on IGImagePicker_TakeScreenShot");
static_assert(offsetof(IGImagePicker_TakeScreenShot, OnScreenShotTakenCallback) == 0x000000, "Member 'IGImagePicker_TakeScreenShot::OnScreenShotTakenCallback' has a wrong offset!");

// Function IOSGoodies.IGMapsBPL.GetDirections
// 0x0028 (0x0028 - 0x0000)
struct IGMapsBPL_GetDirections final
{
public:
	class FString                                 DestinationAddress;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SourceAddress;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETransportType                                TransportType;                                     // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMapViewType                                  ViewType;                                          // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGMapsBPL_GetDirections) == 0x000008, "Wrong alignment on IGMapsBPL_GetDirections");
static_assert(sizeof(IGMapsBPL_GetDirections) == 0x000028, "Wrong size on IGMapsBPL_GetDirections");
static_assert(offsetof(IGMapsBPL_GetDirections, DestinationAddress) == 0x000000, "Member 'IGMapsBPL_GetDirections::DestinationAddress' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_GetDirections, SourceAddress) == 0x000010, "Member 'IGMapsBPL_GetDirections::SourceAddress' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_GetDirections, TransportType) == 0x000020, "Member 'IGMapsBPL_GetDirections::TransportType' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_GetDirections, ViewType) == 0x000021, "Member 'IGMapsBPL_GetDirections::ViewType' has a wrong offset!");

// Function IOSGoodies.IGMapsBPL.OpenMapAddress
// 0x0028 (0x0028 - 0x0000)
struct IGMapsBPL_OpenMapAddress final
{
public:
	class FString                                 Address;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMapViewType                                  ViewType;                                          // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGMapsBPL_OpenMapAddress) == 0x000008, "Wrong alignment on IGMapsBPL_OpenMapAddress");
static_assert(sizeof(IGMapsBPL_OpenMapAddress) == 0x000028, "Wrong size on IGMapsBPL_OpenMapAddress");
static_assert(offsetof(IGMapsBPL_OpenMapAddress, Address) == 0x000000, "Member 'IGMapsBPL_OpenMapAddress::Address' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_OpenMapAddress, Label) == 0x000010, "Member 'IGMapsBPL_OpenMapAddress::Label' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_OpenMapAddress, ViewType) == 0x000020, "Member 'IGMapsBPL_OpenMapAddress::ViewType' has a wrong offset!");

// Function IOSGoodies.IGMapsBPL.OpenMapLocation
// 0x0020 (0x0020 - 0x0000)
struct IGMapsBPL_OpenMapLocation final
{
public:
	float                                         Latitude;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Longitude;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMapViewType                                  ViewType;                                          // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGMapsBPL_OpenMapLocation) == 0x000008, "Wrong alignment on IGMapsBPL_OpenMapLocation");
static_assert(sizeof(IGMapsBPL_OpenMapLocation) == 0x000020, "Wrong size on IGMapsBPL_OpenMapLocation");
static_assert(offsetof(IGMapsBPL_OpenMapLocation, Latitude) == 0x000000, "Member 'IGMapsBPL_OpenMapLocation::Latitude' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_OpenMapLocation, Longitude) == 0x000004, "Member 'IGMapsBPL_OpenMapLocation::Longitude' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_OpenMapLocation, Label) == 0x000008, "Member 'IGMapsBPL_OpenMapLocation::Label' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_OpenMapLocation, ViewType) == 0x000018, "Member 'IGMapsBPL_OpenMapLocation::ViewType' has a wrong offset!");

// Function IOSGoodies.IGMapsBPL.PerformSearch
// 0x0018 (0x0018 - 0x0000)
struct IGMapsBPL_PerformSearch final
{
public:
	class FString                                 Query;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMapViewType                                  ViewType;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGMapsBPL_PerformSearch) == 0x000008, "Wrong alignment on IGMapsBPL_PerformSearch");
static_assert(sizeof(IGMapsBPL_PerformSearch) == 0x000018, "Wrong size on IGMapsBPL_PerformSearch");
static_assert(offsetof(IGMapsBPL_PerformSearch, Query) == 0x000000, "Member 'IGMapsBPL_PerformSearch::Query' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_PerformSearch, ViewType) == 0x000010, "Member 'IGMapsBPL_PerformSearch::ViewType' has a wrong offset!");

// Function IOSGoodies.IGMapsBPL.PerformSearchNearLocation
// 0x0020 (0x0020 - 0x0000)
struct IGMapsBPL_PerformSearchNearLocation final
{
public:
	class FString                                 Query;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Latitude;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Longitude;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Zoom;                                              // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMapViewType                                  ViewType;                                          // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGMapsBPL_PerformSearchNearLocation) == 0x000008, "Wrong alignment on IGMapsBPL_PerformSearchNearLocation");
static_assert(sizeof(IGMapsBPL_PerformSearchNearLocation) == 0x000020, "Wrong size on IGMapsBPL_PerformSearchNearLocation");
static_assert(offsetof(IGMapsBPL_PerformSearchNearLocation, Query) == 0x000000, "Member 'IGMapsBPL_PerformSearchNearLocation::Query' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_PerformSearchNearLocation, Latitude) == 0x000010, "Member 'IGMapsBPL_PerformSearchNearLocation::Latitude' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_PerformSearchNearLocation, Longitude) == 0x000014, "Member 'IGMapsBPL_PerformSearchNearLocation::Longitude' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_PerformSearchNearLocation, Zoom) == 0x000018, "Member 'IGMapsBPL_PerformSearchNearLocation::Zoom' has a wrong offset!");
static_assert(offsetof(IGMapsBPL_PerformSearchNearLocation, ViewType) == 0x00001C, "Member 'IGMapsBPL_PerformSearchNearLocation::ViewType' has a wrong offset!");

// Function IOSGoodies.IGShare.CanSendEmail
// 0x0001 (0x0001 - 0x0000)
struct IGShare_CanSendEmail final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_CanSendEmail) == 0x000001, "Wrong alignment on IGShare_CanSendEmail");
static_assert(sizeof(IGShare_CanSendEmail) == 0x000001, "Wrong size on IGShare_CanSendEmail");
static_assert(offsetof(IGShare_CanSendEmail, ReturnValue) == 0x000000, "Member 'IGShare_CanSendEmail::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGShare.CanSendSMS
// 0x0001 (0x0001 - 0x0000)
struct IGShare_CanSendSMS final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_CanSendSMS) == 0x000001, "Wrong alignment on IGShare_CanSendSMS");
static_assert(sizeof(IGShare_CanSendSMS) == 0x000001, "Wrong size on IGShare_CanSendSMS");
static_assert(offsetof(IGShare_CanSendSMS, ReturnValue) == 0x000000, "Member 'IGShare_CanSendSMS::ReturnValue' has a wrong offset!");

// Function IOSGoodies.IGShare.SendEMail
// 0x0098 (0x0098 - 0x0000)
struct IGShare_SendEMail final
{
public:
	class FString                                 Subject;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Body;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture;                                           // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Recipients;                                        // 0x0028(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         Cc;                                                // 0x0038(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         bcc;                                               // 0x0048(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnErrorCallback;                                   // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelDelegate;                                  // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSavedDraftCallback;                              // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_SendEMail) == 0x000008, "Wrong alignment on IGShare_SendEMail");
static_assert(sizeof(IGShare_SendEMail) == 0x000098, "Wrong size on IGShare_SendEMail");
static_assert(offsetof(IGShare_SendEMail, Subject) == 0x000000, "Member 'IGShare_SendEMail::Subject' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, Body) == 0x000010, "Member 'IGShare_SendEMail::Body' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, Texture) == 0x000020, "Member 'IGShare_SendEMail::Texture' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, Recipients) == 0x000028, "Member 'IGShare_SendEMail::Recipients' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, Cc) == 0x000038, "Member 'IGShare_SendEMail::Cc' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, bcc) == 0x000048, "Member 'IGShare_SendEMail::bcc' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, OnSuccessCallback) == 0x000058, "Member 'IGShare_SendEMail::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, OnErrorCallback) == 0x000068, "Member 'IGShare_SendEMail::OnErrorCallback' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, OnCancelDelegate) == 0x000078, "Member 'IGShare_SendEMail::OnCancelDelegate' has a wrong offset!");
static_assert(offsetof(IGShare_SendEMail, OnSavedDraftCallback) == 0x000088, "Member 'IGShare_SendEMail::OnSavedDraftCallback' has a wrong offset!");

// Function IOSGoodies.IGShare.SendEmailViaDefaultApp
// 0x0050 (0x0050 - 0x0000)
struct IGShare_SendEmailViaDefaultApp final
{
public:
	class FString                                 Subject;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Body;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Recipients;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         Cc;                                                // 0x0030(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         bcc;                                               // 0x0040(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_SendEmailViaDefaultApp) == 0x000008, "Wrong alignment on IGShare_SendEmailViaDefaultApp");
static_assert(sizeof(IGShare_SendEmailViaDefaultApp) == 0x000050, "Wrong size on IGShare_SendEmailViaDefaultApp");
static_assert(offsetof(IGShare_SendEmailViaDefaultApp, Subject) == 0x000000, "Member 'IGShare_SendEmailViaDefaultApp::Subject' has a wrong offset!");
static_assert(offsetof(IGShare_SendEmailViaDefaultApp, Body) == 0x000010, "Member 'IGShare_SendEmailViaDefaultApp::Body' has a wrong offset!");
static_assert(offsetof(IGShare_SendEmailViaDefaultApp, Recipients) == 0x000020, "Member 'IGShare_SendEmailViaDefaultApp::Recipients' has a wrong offset!");
static_assert(offsetof(IGShare_SendEmailViaDefaultApp, Cc) == 0x000030, "Member 'IGShare_SendEmailViaDefaultApp::Cc' has a wrong offset!");
static_assert(offsetof(IGShare_SendEmailViaDefaultApp, bcc) == 0x000040, "Member 'IGShare_SendEmailViaDefaultApp::bcc' has a wrong offset!");

// Function IOSGoodies.IGShare.SendSms
// 0x0050 (0x0050 - 0x0000)
struct IGShare_SendSms final
{
public:
	class FString                                 PhoneNumber;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MsgText;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnErrorCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnCancelCallback;                                  // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_SendSms) == 0x000008, "Wrong alignment on IGShare_SendSms");
static_assert(sizeof(IGShare_SendSms) == 0x000050, "Wrong size on IGShare_SendSms");
static_assert(offsetof(IGShare_SendSms, PhoneNumber) == 0x000000, "Member 'IGShare_SendSms::PhoneNumber' has a wrong offset!");
static_assert(offsetof(IGShare_SendSms, MsgText) == 0x000010, "Member 'IGShare_SendSms::MsgText' has a wrong offset!");
static_assert(offsetof(IGShare_SendSms, OnSuccessCallback) == 0x000020, "Member 'IGShare_SendSms::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGShare_SendSms, OnErrorCallback) == 0x000030, "Member 'IGShare_SendSms::OnErrorCallback' has a wrong offset!");
static_assert(offsetof(IGShare_SendSms, OnCancelCallback) == 0x000040, "Member 'IGShare_SendSms::OnCancelCallback' has a wrong offset!");

// Function IOSGoodies.IGShare.SendSMSViaDefaultApp
// 0x0020 (0x0020 - 0x0000)
struct IGShare_SendSMSViaDefaultApp final
{
public:
	class FString                                 PhoneNumber;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MsgText;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_SendSMSViaDefaultApp) == 0x000008, "Wrong alignment on IGShare_SendSMSViaDefaultApp");
static_assert(sizeof(IGShare_SendSMSViaDefaultApp) == 0x000020, "Wrong size on IGShare_SendSMSViaDefaultApp");
static_assert(offsetof(IGShare_SendSMSViaDefaultApp, PhoneNumber) == 0x000000, "Member 'IGShare_SendSMSViaDefaultApp::PhoneNumber' has a wrong offset!");
static_assert(offsetof(IGShare_SendSMSViaDefaultApp, MsgText) == 0x000010, "Member 'IGShare_SendSMSViaDefaultApp::MsgText' has a wrong offset!");

// Function IOSGoodies.IGShare.ShareImage
// 0x0030 (0x0030 - 0x0000)
struct IGShare_ShareImage final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosX;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnErrorCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_ShareImage) == 0x000008, "Wrong alignment on IGShare_ShareImage");
static_assert(sizeof(IGShare_ShareImage) == 0x000030, "Wrong size on IGShare_ShareImage");
static_assert(offsetof(IGShare_ShareImage, Texture) == 0x000000, "Member 'IGShare_ShareImage::Texture' has a wrong offset!");
static_assert(offsetof(IGShare_ShareImage, PosX) == 0x000008, "Member 'IGShare_ShareImage::PosX' has a wrong offset!");
static_assert(offsetof(IGShare_ShareImage, PosY) == 0x00000C, "Member 'IGShare_ShareImage::PosY' has a wrong offset!");
static_assert(offsetof(IGShare_ShareImage, OnSuccessCallback) == 0x000010, "Member 'IGShare_ShareImage::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGShare_ShareImage, OnErrorCallback) == 0x000020, "Member 'IGShare_ShareImage::OnErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGShare.ShareLink
// 0x0038 (0x0038 - 0x0000)
struct IGShare_ShareLink final
{
public:
	class FString                                 Link;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosX;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnErrorCallback;                                   // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_ShareLink) == 0x000008, "Wrong alignment on IGShare_ShareLink");
static_assert(sizeof(IGShare_ShareLink) == 0x000038, "Wrong size on IGShare_ShareLink");
static_assert(offsetof(IGShare_ShareLink, Link) == 0x000000, "Member 'IGShare_ShareLink::Link' has a wrong offset!");
static_assert(offsetof(IGShare_ShareLink, PosX) == 0x000010, "Member 'IGShare_ShareLink::PosX' has a wrong offset!");
static_assert(offsetof(IGShare_ShareLink, PosY) == 0x000014, "Member 'IGShare_ShareLink::PosY' has a wrong offset!");
static_assert(offsetof(IGShare_ShareLink, OnSuccessCallback) == 0x000018, "Member 'IGShare_ShareLink::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGShare_ShareLink, OnErrorCallback) == 0x000028, "Member 'IGShare_ShareLink::OnErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGShare.ShareText
// 0x0038 (0x0038 - 0x0000)
struct IGShare_ShareText final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosX;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnErrorCallback;                                   // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_ShareText) == 0x000008, "Wrong alignment on IGShare_ShareText");
static_assert(sizeof(IGShare_ShareText) == 0x000038, "Wrong size on IGShare_ShareText");
static_assert(offsetof(IGShare_ShareText, Message) == 0x000000, "Member 'IGShare_ShareText::Message' has a wrong offset!");
static_assert(offsetof(IGShare_ShareText, PosX) == 0x000010, "Member 'IGShare_ShareText::PosX' has a wrong offset!");
static_assert(offsetof(IGShare_ShareText, PosY) == 0x000014, "Member 'IGShare_ShareText::PosY' has a wrong offset!");
static_assert(offsetof(IGShare_ShareText, OnSuccessCallback) == 0x000018, "Member 'IGShare_ShareText::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGShare_ShareText, OnErrorCallback) == 0x000028, "Member 'IGShare_ShareText::OnErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGShare.ShareTextWithImage
// 0x0040 (0x0040 - 0x0000)
struct IGShare_ShareTextWithImage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosX;                                              // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnErrorCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_ShareTextWithImage) == 0x000008, "Wrong alignment on IGShare_ShareTextWithImage");
static_assert(sizeof(IGShare_ShareTextWithImage) == 0x000040, "Wrong size on IGShare_ShareTextWithImage");
static_assert(offsetof(IGShare_ShareTextWithImage, Message) == 0x000000, "Member 'IGShare_ShareTextWithImage::Message' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImage, Texture) == 0x000010, "Member 'IGShare_ShareTextWithImage::Texture' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImage, PosX) == 0x000018, "Member 'IGShare_ShareTextWithImage::PosX' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImage, PosY) == 0x00001C, "Member 'IGShare_ShareTextWithImage::PosY' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImage, OnSuccessCallback) == 0x000020, "Member 'IGShare_ShareTextWithImage::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImage, OnErrorCallback) == 0x000030, "Member 'IGShare_ShareTextWithImage::OnErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGShare.ShareTextWithImageAndLink
// 0x0050 (0x0050 - 0x0000)
struct IGShare_ShareTextWithImageAndLink final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Link;                                              // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosX;                                              // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnErrorCallback;                                   // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_ShareTextWithImageAndLink) == 0x000008, "Wrong alignment on IGShare_ShareTextWithImageAndLink");
static_assert(sizeof(IGShare_ShareTextWithImageAndLink) == 0x000050, "Wrong size on IGShare_ShareTextWithImageAndLink");
static_assert(offsetof(IGShare_ShareTextWithImageAndLink, Message) == 0x000000, "Member 'IGShare_ShareTextWithImageAndLink::Message' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImageAndLink, Texture) == 0x000010, "Member 'IGShare_ShareTextWithImageAndLink::Texture' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImageAndLink, Link) == 0x000018, "Member 'IGShare_ShareTextWithImageAndLink::Link' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImageAndLink, PosX) == 0x000028, "Member 'IGShare_ShareTextWithImageAndLink::PosX' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImageAndLink, PosY) == 0x00002C, "Member 'IGShare_ShareTextWithImageAndLink::PosY' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImageAndLink, OnSuccessCallback) == 0x000030, "Member 'IGShare_ShareTextWithImageAndLink::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithImageAndLink, OnErrorCallback) == 0x000040, "Member 'IGShare_ShareTextWithImageAndLink::OnErrorCallback' has a wrong offset!");

// Function IOSGoodies.IGShare.ShareTextWithLink
// 0x0048 (0x0048 - 0x0000)
struct IGShare_ShareTextWithLink final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Link;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosX;                                              // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PosY;                                              // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccessCallback;                                 // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnErrorCallback;                                   // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGShare_ShareTextWithLink) == 0x000008, "Wrong alignment on IGShare_ShareTextWithLink");
static_assert(sizeof(IGShare_ShareTextWithLink) == 0x000048, "Wrong size on IGShare_ShareTextWithLink");
static_assert(offsetof(IGShare_ShareTextWithLink, Message) == 0x000000, "Member 'IGShare_ShareTextWithLink::Message' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithLink, Link) == 0x000010, "Member 'IGShare_ShareTextWithLink::Link' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithLink, PosX) == 0x000020, "Member 'IGShare_ShareTextWithLink::PosX' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithLink, PosY) == 0x000024, "Member 'IGShare_ShareTextWithLink::PosY' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithLink, OnSuccessCallback) == 0x000028, "Member 'IGShare_ShareTextWithLink::OnSuccessCallback' has a wrong offset!");
static_assert(offsetof(IGShare_ShareTextWithLink, OnErrorCallback) == 0x000038, "Member 'IGShare_ShareTextWithLink::OnErrorCallback' has a wrong offset!");

}

