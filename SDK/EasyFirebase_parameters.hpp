#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyFirebase

#include "Basic.hpp"

#include "EasyFirebase_structs.hpp"


namespace SDK::Params
{

// Function EasyFirebase.FirebaseAppleCredential.RequestAppleCredential
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAppleCredential_RequestAppleCredential final
{
public:
	class UFirebaseAppleCredential*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAppleCredential_RequestAppleCredential) == 0x000008, "Wrong alignment on FirebaseAppleCredential_RequestAppleCredential");
static_assert(sizeof(FirebaseAppleCredential_RequestAppleCredential) == 0x000008, "Wrong size on FirebaseAppleCredential_RequestAppleCredential");
static_assert(offsetof(FirebaseAppleCredential_RequestAppleCredential, ReturnValue) == 0x000000, "Member 'FirebaseAppleCredential_RequestAppleCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.GetFirebaseAuth
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_GetFirebaseAuth final
{
public:
	class UFirebaseAuth*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_GetFirebaseAuth) == 0x000008, "Wrong alignment on FirebaseAuth_GetFirebaseAuth");
static_assert(sizeof(FirebaseAuth_GetFirebaseAuth) == 0x000008, "Wrong size on FirebaseAuth_GetFirebaseAuth");
static_assert(offsetof(FirebaseAuth_GetFirebaseAuth, ReturnValue) == 0x000000, "Member 'FirebaseAuth_GetFirebaseAuth::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.AddAuthStateListener
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_AddAuthStateListener final
{
public:
	class UFirebaseAuthStateListener*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_AddAuthStateListener) == 0x000008, "Wrong alignment on FirebaseAuth_AddAuthStateListener");
static_assert(sizeof(FirebaseAuth_AddAuthStateListener) == 0x000008, "Wrong size on FirebaseAuth_AddAuthStateListener");
static_assert(offsetof(FirebaseAuth_AddAuthStateListener, ReturnValue) == 0x000000, "Member 'FirebaseAuth_AddAuthStateListener::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.CreateUserWithEmailAndPassword
// 0x0028 (0x0028 - 0x0000)
struct FirebaseAuth_CreateUserWithEmailAndPassword final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Passwd;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_CreateUserWithEmailAndPassword) == 0x000008, "Wrong alignment on FirebaseAuth_CreateUserWithEmailAndPassword");
static_assert(sizeof(FirebaseAuth_CreateUserWithEmailAndPassword) == 0x000028, "Wrong size on FirebaseAuth_CreateUserWithEmailAndPassword");
static_assert(offsetof(FirebaseAuth_CreateUserWithEmailAndPassword, Email) == 0x000000, "Member 'FirebaseAuth_CreateUserWithEmailAndPassword::Email' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_CreateUserWithEmailAndPassword, Passwd) == 0x000010, "Member 'FirebaseAuth_CreateUserWithEmailAndPassword::Passwd' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_CreateUserWithEmailAndPassword, ReturnValue) == 0x000020, "Member 'FirebaseAuth_CreateUserWithEmailAndPassword::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.CreateUserWithEmailAndPasswordLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_CreateUserWithEmailAndPasswordLastResult final
{
public:
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_CreateUserWithEmailAndPasswordLastResult) == 0x000008, "Wrong alignment on FirebaseAuth_CreateUserWithEmailAndPasswordLastResult");
static_assert(sizeof(FirebaseAuth_CreateUserWithEmailAndPasswordLastResult) == 0x000008, "Wrong size on FirebaseAuth_CreateUserWithEmailAndPasswordLastResult");
static_assert(offsetof(FirebaseAuth_CreateUserWithEmailAndPasswordLastResult, ReturnValue) == 0x000000, "Member 'FirebaseAuth_CreateUserWithEmailAndPasswordLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.current_user
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_Current_user final
{
public:
	class UFirebaseUser*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_Current_user) == 0x000008, "Wrong alignment on FirebaseAuth_Current_user");
static_assert(sizeof(FirebaseAuth_Current_user) == 0x000008, "Wrong size on FirebaseAuth_Current_user");
static_assert(offsetof(FirebaseAuth_Current_user, ReturnValue) == 0x000000, "Member 'FirebaseAuth_Current_user::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.FetchProvidersForEmail
// 0x0018 (0x0018 - 0x0000)
struct FirebaseAuth_FetchProvidersForEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureFetchProvideResult*      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_FetchProvidersForEmail) == 0x000008, "Wrong alignment on FirebaseAuth_FetchProvidersForEmail");
static_assert(sizeof(FirebaseAuth_FetchProvidersForEmail) == 0x000018, "Wrong size on FirebaseAuth_FetchProvidersForEmail");
static_assert(offsetof(FirebaseAuth_FetchProvidersForEmail, Email) == 0x000000, "Member 'FirebaseAuth_FetchProvidersForEmail::Email' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_FetchProvidersForEmail, ReturnValue) == 0x000010, "Member 'FirebaseAuth_FetchProvidersForEmail::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.FetchProvidersForEmailLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_FetchProvidersForEmailLastResult final
{
public:
	class UFirebaseFutureFetchProvideResult*      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_FetchProvidersForEmailLastResult) == 0x000008, "Wrong alignment on FirebaseAuth_FetchProvidersForEmailLastResult");
static_assert(sizeof(FirebaseAuth_FetchProvidersForEmailLastResult) == 0x000008, "Wrong size on FirebaseAuth_FetchProvidersForEmailLastResult");
static_assert(offsetof(FirebaseAuth_FetchProvidersForEmailLastResult, ReturnValue) == 0x000000, "Member 'FirebaseAuth_FetchProvidersForEmailLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.GetPlayServiceCredential
// 0x0018 (0x0018 - 0x0000)
struct FirebaseAuth_GetPlayServiceCredential final
{
public:
	class FString                                 ServerAuthCode;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseCredential*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_GetPlayServiceCredential) == 0x000008, "Wrong alignment on FirebaseAuth_GetPlayServiceCredential");
static_assert(sizeof(FirebaseAuth_GetPlayServiceCredential) == 0x000018, "Wrong size on FirebaseAuth_GetPlayServiceCredential");
static_assert(offsetof(FirebaseAuth_GetPlayServiceCredential, ServerAuthCode) == 0x000000, "Member 'FirebaseAuth_GetPlayServiceCredential::ServerAuthCode' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_GetPlayServiceCredential, ReturnValue) == 0x000010, "Member 'FirebaseAuth_GetPlayServiceCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.RemoveAuthStateListener
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_RemoveAuthStateListener final
{
public:
	class UFirebaseAuthStateListener*             Listener;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_RemoveAuthStateListener) == 0x000008, "Wrong alignment on FirebaseAuth_RemoveAuthStateListener");
static_assert(sizeof(FirebaseAuth_RemoveAuthStateListener) == 0x000008, "Wrong size on FirebaseAuth_RemoveAuthStateListener");
static_assert(offsetof(FirebaseAuth_RemoveAuthStateListener, Listener) == 0x000000, "Member 'FirebaseAuth_RemoveAuthStateListener::Listener' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SendPasswordResetEmail
// 0x0018 (0x0018 - 0x0000)
struct FirebaseAuth_SendPasswordResetEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SendPasswordResetEmail) == 0x000008, "Wrong alignment on FirebaseAuth_SendPasswordResetEmail");
static_assert(sizeof(FirebaseAuth_SendPasswordResetEmail) == 0x000018, "Wrong size on FirebaseAuth_SendPasswordResetEmail");
static_assert(offsetof(FirebaseAuth_SendPasswordResetEmail, Email) == 0x000000, "Member 'FirebaseAuth_SendPasswordResetEmail::Email' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_SendPasswordResetEmail, ReturnValue) == 0x000010, "Member 'FirebaseAuth_SendPasswordResetEmail::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SendPasswordResetEmailLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_SendPasswordResetEmailLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SendPasswordResetEmailLastResult) == 0x000008, "Wrong alignment on FirebaseAuth_SendPasswordResetEmailLastResult");
static_assert(sizeof(FirebaseAuth_SendPasswordResetEmailLastResult) == 0x000008, "Wrong size on FirebaseAuth_SendPasswordResetEmailLastResult");
static_assert(offsetof(FirebaseAuth_SendPasswordResetEmailLastResult, ReturnValue) == 0x000000, "Member 'FirebaseAuth_SendPasswordResetEmailLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInAndRetrieveDataWithCredential
// 0x0010 (0x0010 - 0x0000)
struct FirebaseAuth_SignInAndRetrieveDataWithCredential final
{
public:
	class UFirebaseCredential*                    Credential;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureSignInResult*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInAndRetrieveDataWithCredential) == 0x000008, "Wrong alignment on FirebaseAuth_SignInAndRetrieveDataWithCredential");
static_assert(sizeof(FirebaseAuth_SignInAndRetrieveDataWithCredential) == 0x000010, "Wrong size on FirebaseAuth_SignInAndRetrieveDataWithCredential");
static_assert(offsetof(FirebaseAuth_SignInAndRetrieveDataWithCredential, Credential) == 0x000000, "Member 'FirebaseAuth_SignInAndRetrieveDataWithCredential::Credential' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_SignInAndRetrieveDataWithCredential, ReturnValue) == 0x000008, "Member 'FirebaseAuth_SignInAndRetrieveDataWithCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInAndRetrieveDataWithCredentialLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_SignInAndRetrieveDataWithCredentialLastResult final
{
public:
	class UFirebaseFutureSignInResult*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInAndRetrieveDataWithCredentialLastResult) == 0x000008, "Wrong alignment on FirebaseAuth_SignInAndRetrieveDataWithCredentialLastResult");
static_assert(sizeof(FirebaseAuth_SignInAndRetrieveDataWithCredentialLastResult) == 0x000008, "Wrong size on FirebaseAuth_SignInAndRetrieveDataWithCredentialLastResult");
static_assert(offsetof(FirebaseAuth_SignInAndRetrieveDataWithCredentialLastResult, ReturnValue) == 0x000000, "Member 'FirebaseAuth_SignInAndRetrieveDataWithCredentialLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInAnonymously
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_SignInAnonymously final
{
public:
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInAnonymously) == 0x000008, "Wrong alignment on FirebaseAuth_SignInAnonymously");
static_assert(sizeof(FirebaseAuth_SignInAnonymously) == 0x000008, "Wrong size on FirebaseAuth_SignInAnonymously");
static_assert(offsetof(FirebaseAuth_SignInAnonymously, ReturnValue) == 0x000000, "Member 'FirebaseAuth_SignInAnonymously::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInWithCredential
// 0x0010 (0x0010 - 0x0000)
struct FirebaseAuth_SignInWithCredential final
{
public:
	class UFirebaseCredential*                    Credential;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInWithCredential) == 0x000008, "Wrong alignment on FirebaseAuth_SignInWithCredential");
static_assert(sizeof(FirebaseAuth_SignInWithCredential) == 0x000010, "Wrong size on FirebaseAuth_SignInWithCredential");
static_assert(offsetof(FirebaseAuth_SignInWithCredential, Credential) == 0x000000, "Member 'FirebaseAuth_SignInWithCredential::Credential' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_SignInWithCredential, ReturnValue) == 0x000008, "Member 'FirebaseAuth_SignInWithCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInWithCredentialLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_SignInWithCredentialLastResult final
{
public:
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInWithCredentialLastResult) == 0x000008, "Wrong alignment on FirebaseAuth_SignInWithCredentialLastResult");
static_assert(sizeof(FirebaseAuth_SignInWithCredentialLastResult) == 0x000008, "Wrong size on FirebaseAuth_SignInWithCredentialLastResult");
static_assert(offsetof(FirebaseAuth_SignInWithCredentialLastResult, ReturnValue) == 0x000000, "Member 'FirebaseAuth_SignInWithCredentialLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInWithCustomToken
// 0x0018 (0x0018 - 0x0000)
struct FirebaseAuth_SignInWithCustomToken final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInWithCustomToken) == 0x000008, "Wrong alignment on FirebaseAuth_SignInWithCustomToken");
static_assert(sizeof(FirebaseAuth_SignInWithCustomToken) == 0x000018, "Wrong size on FirebaseAuth_SignInWithCustomToken");
static_assert(offsetof(FirebaseAuth_SignInWithCustomToken, Token) == 0x000000, "Member 'FirebaseAuth_SignInWithCustomToken::Token' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_SignInWithCustomToken, ReturnValue) == 0x000010, "Member 'FirebaseAuth_SignInWithCustomToken::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInWithCustomTokenLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_SignInWithCustomTokenLastResult final
{
public:
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInWithCustomTokenLastResult) == 0x000008, "Wrong alignment on FirebaseAuth_SignInWithCustomTokenLastResult");
static_assert(sizeof(FirebaseAuth_SignInWithCustomTokenLastResult) == 0x000008, "Wrong size on FirebaseAuth_SignInWithCustomTokenLastResult");
static_assert(offsetof(FirebaseAuth_SignInWithCustomTokenLastResult, ReturnValue) == 0x000000, "Member 'FirebaseAuth_SignInWithCustomTokenLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInWithEmailAndPassword
// 0x0028 (0x0028 - 0x0000)
struct FirebaseAuth_SignInWithEmailAndPassword final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Passwd;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInWithEmailAndPassword) == 0x000008, "Wrong alignment on FirebaseAuth_SignInWithEmailAndPassword");
static_assert(sizeof(FirebaseAuth_SignInWithEmailAndPassword) == 0x000028, "Wrong size on FirebaseAuth_SignInWithEmailAndPassword");
static_assert(offsetof(FirebaseAuth_SignInWithEmailAndPassword, Email) == 0x000000, "Member 'FirebaseAuth_SignInWithEmailAndPassword::Email' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_SignInWithEmailAndPassword, Passwd) == 0x000010, "Member 'FirebaseAuth_SignInWithEmailAndPassword::Passwd' has a wrong offset!");
static_assert(offsetof(FirebaseAuth_SignInWithEmailAndPassword, ReturnValue) == 0x000020, "Member 'FirebaseAuth_SignInWithEmailAndPassword::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuth.SignInWithEmailAndPasswordLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAuth_SignInWithEmailAndPasswordLastResult final
{
public:
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuth_SignInWithEmailAndPasswordLastResult) == 0x000008, "Wrong alignment on FirebaseAuth_SignInWithEmailAndPasswordLastResult");
static_assert(sizeof(FirebaseAuth_SignInWithEmailAndPasswordLastResult) == 0x000008, "Wrong size on FirebaseAuth_SignInWithEmailAndPasswordLastResult");
static_assert(offsetof(FirebaseAuth_SignInWithEmailAndPasswordLastResult, ReturnValue) == 0x000000, "Member 'FirebaseAuth_SignInWithEmailAndPasswordLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseAuthStateListener.RunValueListener
// 0x0010 (0x0010 - 0x0000)
struct FirebaseAuthStateListener_RunValueListener final
{
public:
	class UFirebaseAuthStateListener*             Listener;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseAuthStateListener*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAuthStateListener_RunValueListener) == 0x000008, "Wrong alignment on FirebaseAuthStateListener_RunValueListener");
static_assert(sizeof(FirebaseAuthStateListener_RunValueListener) == 0x000010, "Wrong size on FirebaseAuthStateListener_RunValueListener");
static_assert(offsetof(FirebaseAuthStateListener_RunValueListener, Listener) == 0x000000, "Member 'FirebaseAuthStateListener_RunValueListener::Listener' has a wrong offset!");
static_assert(offsetof(FirebaseAuthStateListener_RunValueListener, ReturnValue) == 0x000008, "Member 'FirebaseAuthStateListener_RunValueListener::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseChildListener.RunChildListener
// 0x0010 (0x0010 - 0x0000)
struct FirebaseChildListener_RunChildListener final
{
public:
	class UFirebaseChildListener*                 Listener;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseChildListener*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseChildListener_RunChildListener) == 0x000008, "Wrong alignment on FirebaseChildListener_RunChildListener");
static_assert(sizeof(FirebaseChildListener_RunChildListener) == 0x000010, "Wrong size on FirebaseChildListener_RunChildListener");
static_assert(offsetof(FirebaseChildListener_RunChildListener, Listener) == 0x000000, "Member 'FirebaseChildListener_RunChildListener::Listener' has a wrong offset!");
static_assert(offsetof(FirebaseChildListener_RunChildListener, ReturnValue) == 0x000008, "Member 'FirebaseChildListener_RunChildListener::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseCredential.is_valid
// 0x0001 (0x0001 - 0x0000)
struct FirebaseCredential_Is_valid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseCredential_Is_valid) == 0x000001, "Wrong alignment on FirebaseCredential_Is_valid");
static_assert(sizeof(FirebaseCredential_Is_valid) == 0x000001, "Wrong size on FirebaseCredential_Is_valid");
static_assert(offsetof(FirebaseCredential_Is_valid, ReturnValue) == 0x000000, "Member 'FirebaseCredential_Is_valid::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseCredential.provider
// 0x0010 (0x0010 - 0x0000)
struct FirebaseCredential_Provider final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseCredential_Provider) == 0x000008, "Wrong alignment on FirebaseCredential_Provider");
static_assert(sizeof(FirebaseCredential_Provider) == 0x000010, "Wrong size on FirebaseCredential_Provider");
static_assert(offsetof(FirebaseCredential_Provider, ReturnValue) == 0x000000, "Member 'FirebaseCredential_Provider::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.AddChildListener
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_AddChildListener final
{
public:
	class UFirebaseChildListener*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_AddChildListener) == 0x000008, "Wrong alignment on FirebaseQuery_AddChildListener");
static_assert(sizeof(FirebaseQuery_AddChildListener) == 0x000008, "Wrong size on FirebaseQuery_AddChildListener");
static_assert(offsetof(FirebaseQuery_AddChildListener, ReturnValue) == 0x000000, "Member 'FirebaseQuery_AddChildListener::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.AddValueListener
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_AddValueListener final
{
public:
	class UFirebaseValueListener*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_AddValueListener) == 0x000008, "Wrong alignment on FirebaseQuery_AddValueListener");
static_assert(sizeof(FirebaseQuery_AddValueListener) == 0x000008, "Wrong size on FirebaseQuery_AddValueListener");
static_assert(offsetof(FirebaseQuery_AddValueListener, ReturnValue) == 0x000000, "Member 'FirebaseQuery_AddValueListener::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.EndAt
// 0x0010 (0x0010 - 0x0000)
struct FirebaseQuery_EndAt final
{
public:
	class UFirebaseVariant*                       OrderValue;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_EndAt) == 0x000008, "Wrong alignment on FirebaseQuery_EndAt");
static_assert(sizeof(FirebaseQuery_EndAt) == 0x000010, "Wrong size on FirebaseQuery_EndAt");
static_assert(offsetof(FirebaseQuery_EndAt, OrderValue) == 0x000000, "Member 'FirebaseQuery_EndAt::OrderValue' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_EndAt, ReturnValue) == 0x000008, "Member 'FirebaseQuery_EndAt::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.EndWithKeyAt
// 0x0020 (0x0020 - 0x0000)
struct FirebaseQuery_EndWithKeyAt final
{
public:
	class UFirebaseVariant*                       OrderValue;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_EndWithKeyAt) == 0x000008, "Wrong alignment on FirebaseQuery_EndWithKeyAt");
static_assert(sizeof(FirebaseQuery_EndWithKeyAt) == 0x000020, "Wrong size on FirebaseQuery_EndWithKeyAt");
static_assert(offsetof(FirebaseQuery_EndWithKeyAt, OrderValue) == 0x000000, "Member 'FirebaseQuery_EndWithKeyAt::OrderValue' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_EndWithKeyAt, Key) == 0x000008, "Member 'FirebaseQuery_EndWithKeyAt::Key' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_EndWithKeyAt, ReturnValue) == 0x000018, "Member 'FirebaseQuery_EndWithKeyAt::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.EqualTo
// 0x0010 (0x0010 - 0x0000)
struct FirebaseQuery_EqualTo final
{
public:
	class UFirebaseVariant*                       OrderValue;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_EqualTo) == 0x000008, "Wrong alignment on FirebaseQuery_EqualTo");
static_assert(sizeof(FirebaseQuery_EqualTo) == 0x000010, "Wrong size on FirebaseQuery_EqualTo");
static_assert(offsetof(FirebaseQuery_EqualTo, OrderValue) == 0x000000, "Member 'FirebaseQuery_EqualTo::OrderValue' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_EqualTo, ReturnValue) == 0x000008, "Member 'FirebaseQuery_EqualTo::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.EqualWithKeyTo
// 0x0020 (0x0020 - 0x0000)
struct FirebaseQuery_EqualWithKeyTo final
{
public:
	class UFirebaseVariant*                       OrderValue;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_EqualWithKeyTo) == 0x000008, "Wrong alignment on FirebaseQuery_EqualWithKeyTo");
static_assert(sizeof(FirebaseQuery_EqualWithKeyTo) == 0x000020, "Wrong size on FirebaseQuery_EqualWithKeyTo");
static_assert(offsetof(FirebaseQuery_EqualWithKeyTo, OrderValue) == 0x000000, "Member 'FirebaseQuery_EqualWithKeyTo::OrderValue' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_EqualWithKeyTo, Key) == 0x000008, "Member 'FirebaseQuery_EqualWithKeyTo::Key' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_EqualWithKeyTo, ReturnValue) == 0x000018, "Member 'FirebaseQuery_EqualWithKeyTo::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.GetReference
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_GetReference final
{
public:
	class UFirebaseDatabaseRef*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_GetReference) == 0x000008, "Wrong alignment on FirebaseQuery_GetReference");
static_assert(sizeof(FirebaseQuery_GetReference) == 0x000008, "Wrong size on FirebaseQuery_GetReference");
static_assert(offsetof(FirebaseQuery_GetReference, ReturnValue) == 0x000000, "Member 'FirebaseQuery_GetReference::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.GetValue
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_GetValue final
{
public:
	class UFirebaseFutureDataSnapshot*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_GetValue) == 0x000008, "Wrong alignment on FirebaseQuery_GetValue");
static_assert(sizeof(FirebaseQuery_GetValue) == 0x000008, "Wrong size on FirebaseQuery_GetValue");
static_assert(offsetof(FirebaseQuery_GetValue, ReturnValue) == 0x000000, "Member 'FirebaseQuery_GetValue::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.GetValueLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_GetValueLastResult final
{
public:
	class UFirebaseFutureDataSnapshot*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_GetValueLastResult) == 0x000008, "Wrong alignment on FirebaseQuery_GetValueLastResult");
static_assert(sizeof(FirebaseQuery_GetValueLastResult) == 0x000008, "Wrong size on FirebaseQuery_GetValueLastResult");
static_assert(offsetof(FirebaseQuery_GetValueLastResult, ReturnValue) == 0x000000, "Member 'FirebaseQuery_GetValueLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.isValid
// 0x0001 (0x0001 - 0x0000)
struct FirebaseQuery_IsValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_IsValid) == 0x000001, "Wrong alignment on FirebaseQuery_IsValid");
static_assert(sizeof(FirebaseQuery_IsValid) == 0x000001, "Wrong size on FirebaseQuery_IsValid");
static_assert(offsetof(FirebaseQuery_IsValid, ReturnValue) == 0x000000, "Member 'FirebaseQuery_IsValid::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.LimitToFirst
// 0x0010 (0x0010 - 0x0000)
struct FirebaseQuery_LimitToFirst final
{
public:
	int64                                         Limit;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_LimitToFirst) == 0x000008, "Wrong alignment on FirebaseQuery_LimitToFirst");
static_assert(sizeof(FirebaseQuery_LimitToFirst) == 0x000010, "Wrong size on FirebaseQuery_LimitToFirst");
static_assert(offsetof(FirebaseQuery_LimitToFirst, Limit) == 0x000000, "Member 'FirebaseQuery_LimitToFirst::Limit' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_LimitToFirst, ReturnValue) == 0x000008, "Member 'FirebaseQuery_LimitToFirst::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.LimitToLast
// 0x0010 (0x0010 - 0x0000)
struct FirebaseQuery_LimitToLast final
{
public:
	int64                                         Limit;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_LimitToLast) == 0x000008, "Wrong alignment on FirebaseQuery_LimitToLast");
static_assert(sizeof(FirebaseQuery_LimitToLast) == 0x000010, "Wrong size on FirebaseQuery_LimitToLast");
static_assert(offsetof(FirebaseQuery_LimitToLast, Limit) == 0x000000, "Member 'FirebaseQuery_LimitToLast::Limit' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_LimitToLast, ReturnValue) == 0x000008, "Member 'FirebaseQuery_LimitToLast::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.OrderByChild
// 0x0018 (0x0018 - 0x0000)
struct FirebaseQuery_OrderByChild final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_OrderByChild) == 0x000008, "Wrong alignment on FirebaseQuery_OrderByChild");
static_assert(sizeof(FirebaseQuery_OrderByChild) == 0x000018, "Wrong size on FirebaseQuery_OrderByChild");
static_assert(offsetof(FirebaseQuery_OrderByChild, Path) == 0x000000, "Member 'FirebaseQuery_OrderByChild::Path' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_OrderByChild, ReturnValue) == 0x000010, "Member 'FirebaseQuery_OrderByChild::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.OrderByKey
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_OrderByKey final
{
public:
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_OrderByKey) == 0x000008, "Wrong alignment on FirebaseQuery_OrderByKey");
static_assert(sizeof(FirebaseQuery_OrderByKey) == 0x000008, "Wrong size on FirebaseQuery_OrderByKey");
static_assert(offsetof(FirebaseQuery_OrderByKey, ReturnValue) == 0x000000, "Member 'FirebaseQuery_OrderByKey::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.OrderByPriority
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_OrderByPriority final
{
public:
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_OrderByPriority) == 0x000008, "Wrong alignment on FirebaseQuery_OrderByPriority");
static_assert(sizeof(FirebaseQuery_OrderByPriority) == 0x000008, "Wrong size on FirebaseQuery_OrderByPriority");
static_assert(offsetof(FirebaseQuery_OrderByPriority, ReturnValue) == 0x000000, "Member 'FirebaseQuery_OrderByPriority::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.OrderByValue
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_OrderByValue final
{
public:
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_OrderByValue) == 0x000008, "Wrong alignment on FirebaseQuery_OrderByValue");
static_assert(sizeof(FirebaseQuery_OrderByValue) == 0x000008, "Wrong size on FirebaseQuery_OrderByValue");
static_assert(offsetof(FirebaseQuery_OrderByValue, ReturnValue) == 0x000000, "Member 'FirebaseQuery_OrderByValue::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.RemoveChildListener
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_RemoveChildListener final
{
public:
	class UFirebaseChildListener*                 Listener;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_RemoveChildListener) == 0x000008, "Wrong alignment on FirebaseQuery_RemoveChildListener");
static_assert(sizeof(FirebaseQuery_RemoveChildListener) == 0x000008, "Wrong size on FirebaseQuery_RemoveChildListener");
static_assert(offsetof(FirebaseQuery_RemoveChildListener, Listener) == 0x000000, "Member 'FirebaseQuery_RemoveChildListener::Listener' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.RemoveValueListener
// 0x0008 (0x0008 - 0x0000)
struct FirebaseQuery_RemoveValueListener final
{
public:
	class UFirebaseValueListener*                 Listner;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_RemoveValueListener) == 0x000008, "Wrong alignment on FirebaseQuery_RemoveValueListener");
static_assert(sizeof(FirebaseQuery_RemoveValueListener) == 0x000008, "Wrong size on FirebaseQuery_RemoveValueListener");
static_assert(offsetof(FirebaseQuery_RemoveValueListener, Listner) == 0x000000, "Member 'FirebaseQuery_RemoveValueListener::Listner' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.SetKeepSynchronized
// 0x0001 (0x0001 - 0x0000)
struct FirebaseQuery_SetKeepSynchronized final
{
public:
	bool                                          Keep_sync;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_SetKeepSynchronized) == 0x000001, "Wrong alignment on FirebaseQuery_SetKeepSynchronized");
static_assert(sizeof(FirebaseQuery_SetKeepSynchronized) == 0x000001, "Wrong size on FirebaseQuery_SetKeepSynchronized");
static_assert(offsetof(FirebaseQuery_SetKeepSynchronized, Keep_sync) == 0x000000, "Member 'FirebaseQuery_SetKeepSynchronized::Keep_sync' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.StartAt
// 0x0010 (0x0010 - 0x0000)
struct FirebaseQuery_StartAt final
{
public:
	class UFirebaseVariant*                       OrderValue;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_StartAt) == 0x000008, "Wrong alignment on FirebaseQuery_StartAt");
static_assert(sizeof(FirebaseQuery_StartAt) == 0x000010, "Wrong size on FirebaseQuery_StartAt");
static_assert(offsetof(FirebaseQuery_StartAt, OrderValue) == 0x000000, "Member 'FirebaseQuery_StartAt::OrderValue' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_StartAt, ReturnValue) == 0x000008, "Member 'FirebaseQuery_StartAt::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseQuery.StartWithKeyAt
// 0x0020 (0x0020 - 0x0000)
struct FirebaseQuery_StartWithKeyAt final
{
public:
	class UFirebaseVariant*                       OrderValue;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseQuery*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseQuery_StartWithKeyAt) == 0x000008, "Wrong alignment on FirebaseQuery_StartWithKeyAt");
static_assert(sizeof(FirebaseQuery_StartWithKeyAt) == 0x000020, "Wrong size on FirebaseQuery_StartWithKeyAt");
static_assert(offsetof(FirebaseQuery_StartWithKeyAt, OrderValue) == 0x000000, "Member 'FirebaseQuery_StartWithKeyAt::OrderValue' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_StartWithKeyAt, Key) == 0x000008, "Member 'FirebaseQuery_StartWithKeyAt::Key' has a wrong offset!");
static_assert(offsetof(FirebaseQuery_StartWithKeyAt, ReturnValue) == 0x000018, "Member 'FirebaseQuery_StartWithKeyAt::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.GetRootDatabaseRef
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_GetRootDatabaseRef final
{
public:
	class UFirebaseDatabaseRef*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_GetRootDatabaseRef) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_GetRootDatabaseRef");
static_assert(sizeof(FirebaseDatabaseRef_GetRootDatabaseRef) == 0x000008, "Wrong size on FirebaseDatabaseRef_GetRootDatabaseRef");
static_assert(offsetof(FirebaseDatabaseRef_GetRootDatabaseRef, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_GetRootDatabaseRef::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.GetRootDatabaseRefFromUrl
// 0x0018 (0x0018 - 0x0000)
struct FirebaseDatabaseRef_GetRootDatabaseRefFromUrl final
{
public:
	class FString                                 URL_0;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseDatabaseRef*                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_GetRootDatabaseRefFromUrl) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_GetRootDatabaseRefFromUrl");
static_assert(sizeof(FirebaseDatabaseRef_GetRootDatabaseRefFromUrl) == 0x000018, "Wrong size on FirebaseDatabaseRef_GetRootDatabaseRefFromUrl");
static_assert(offsetof(FirebaseDatabaseRef_GetRootDatabaseRefFromUrl, URL_0) == 0x000000, "Member 'FirebaseDatabaseRef_GetRootDatabaseRefFromUrl::URL_0' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseRef_GetRootDatabaseRefFromUrl, ReturnValue) == 0x000010, "Member 'FirebaseDatabaseRef_GetRootDatabaseRefFromUrl::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.Child
// 0x0018 (0x0018 - 0x0000)
struct FirebaseDatabaseRef_Child final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseDatabaseRef*                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_Child) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_Child");
static_assert(sizeof(FirebaseDatabaseRef_Child) == 0x000018, "Wrong size on FirebaseDatabaseRef_Child");
static_assert(offsetof(FirebaseDatabaseRef_Child, Path) == 0x000000, "Member 'FirebaseDatabaseRef_Child::Path' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseRef_Child, ReturnValue) == 0x000010, "Member 'FirebaseDatabaseRef_Child::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.GetParent
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_GetParent final
{
public:
	class UFirebaseDatabaseRef*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_GetParent) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_GetParent");
static_assert(sizeof(FirebaseDatabaseRef_GetParent) == 0x000008, "Wrong size on FirebaseDatabaseRef_GetParent");
static_assert(offsetof(FirebaseDatabaseRef_GetParent, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_GetParent::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.GetRoot
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_GetRoot final
{
public:
	class UFirebaseDatabaseRef*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_GetRoot) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_GetRoot");
static_assert(sizeof(FirebaseDatabaseRef_GetRoot) == 0x000008, "Wrong size on FirebaseDatabaseRef_GetRoot");
static_assert(offsetof(FirebaseDatabaseRef_GetRoot, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_GetRoot::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.IsDatabaseValid
// 0x0001 (0x0001 - 0x0000)
struct FirebaseDatabaseRef_IsDatabaseValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_IsDatabaseValid) == 0x000001, "Wrong alignment on FirebaseDatabaseRef_IsDatabaseValid");
static_assert(sizeof(FirebaseDatabaseRef_IsDatabaseValid) == 0x000001, "Wrong size on FirebaseDatabaseRef_IsDatabaseValid");
static_assert(offsetof(FirebaseDatabaseRef_IsDatabaseValid, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_IsDatabaseValid::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.IsRoot
// 0x0001 (0x0001 - 0x0000)
struct FirebaseDatabaseRef_IsRoot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_IsRoot) == 0x000001, "Wrong alignment on FirebaseDatabaseRef_IsRoot");
static_assert(sizeof(FirebaseDatabaseRef_IsRoot) == 0x000001, "Wrong size on FirebaseDatabaseRef_IsRoot");
static_assert(offsetof(FirebaseDatabaseRef_IsRoot, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_IsRoot::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.Key
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDatabaseRef_Key final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_Key) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_Key");
static_assert(sizeof(FirebaseDatabaseRef_Key) == 0x000010, "Wrong size on FirebaseDatabaseRef_Key");
static_assert(offsetof(FirebaseDatabaseRef_Key, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_Key::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.PushChild
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_PushChild final
{
public:
	class UFirebaseDatabaseRef*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_PushChild) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_PushChild");
static_assert(sizeof(FirebaseDatabaseRef_PushChild) == 0x000008, "Wrong size on FirebaseDatabaseRef_PushChild");
static_assert(offsetof(FirebaseDatabaseRef_PushChild, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_PushChild::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.RemoveValue
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_RemoveValue final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_RemoveValue) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_RemoveValue");
static_assert(sizeof(FirebaseDatabaseRef_RemoveValue) == 0x000008, "Wrong size on FirebaseDatabaseRef_RemoveValue");
static_assert(offsetof(FirebaseDatabaseRef_RemoveValue, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_RemoveValue::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.RemoveValueLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_RemoveValueLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_RemoveValueLastResult) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_RemoveValueLastResult");
static_assert(sizeof(FirebaseDatabaseRef_RemoveValueLastResult) == 0x000008, "Wrong size on FirebaseDatabaseRef_RemoveValueLastResult");
static_assert(offsetof(FirebaseDatabaseRef_RemoveValueLastResult, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_RemoveValueLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.SetPriority
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDatabaseRef_SetPriority final
{
public:
	class UFirebaseVariant*                       Variant;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_SetPriority) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_SetPriority");
static_assert(sizeof(FirebaseDatabaseRef_SetPriority) == 0x000010, "Wrong size on FirebaseDatabaseRef_SetPriority");
static_assert(offsetof(FirebaseDatabaseRef_SetPriority, Variant) == 0x000000, "Member 'FirebaseDatabaseRef_SetPriority::Variant' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseRef_SetPriority, ReturnValue) == 0x000008, "Member 'FirebaseDatabaseRef_SetPriority::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.SetPriorityLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_SetPriorityLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_SetPriorityLastResult) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_SetPriorityLastResult");
static_assert(sizeof(FirebaseDatabaseRef_SetPriorityLastResult) == 0x000008, "Wrong size on FirebaseDatabaseRef_SetPriorityLastResult");
static_assert(offsetof(FirebaseDatabaseRef_SetPriorityLastResult, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_SetPriorityLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.SetValue
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDatabaseRef_SetValue final
{
public:
	class UFirebaseVariant*                       Variant;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_SetValue) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_SetValue");
static_assert(sizeof(FirebaseDatabaseRef_SetValue) == 0x000010, "Wrong size on FirebaseDatabaseRef_SetValue");
static_assert(offsetof(FirebaseDatabaseRef_SetValue, Variant) == 0x000000, "Member 'FirebaseDatabaseRef_SetValue::Variant' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseRef_SetValue, ReturnValue) == 0x000008, "Member 'FirebaseDatabaseRef_SetValue::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.SetValueAndPriority
// 0x0018 (0x0018 - 0x0000)
struct FirebaseDatabaseRef_SetValueAndPriority final
{
public:
	class UFirebaseVariant*                       Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseVariant*                       Priority;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_SetValueAndPriority) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_SetValueAndPriority");
static_assert(sizeof(FirebaseDatabaseRef_SetValueAndPriority) == 0x000018, "Wrong size on FirebaseDatabaseRef_SetValueAndPriority");
static_assert(offsetof(FirebaseDatabaseRef_SetValueAndPriority, Value) == 0x000000, "Member 'FirebaseDatabaseRef_SetValueAndPriority::Value' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseRef_SetValueAndPriority, Priority) == 0x000008, "Member 'FirebaseDatabaseRef_SetValueAndPriority::Priority' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseRef_SetValueAndPriority, ReturnValue) == 0x000010, "Member 'FirebaseDatabaseRef_SetValueAndPriority::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.SetValueAndPriorityLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_SetValueAndPriorityLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_SetValueAndPriorityLastResult) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_SetValueAndPriorityLastResult");
static_assert(sizeof(FirebaseDatabaseRef_SetValueAndPriorityLastResult) == 0x000008, "Wrong size on FirebaseDatabaseRef_SetValueAndPriorityLastResult");
static_assert(offsetof(FirebaseDatabaseRef_SetValueAndPriorityLastResult, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_SetValueAndPriorityLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.SetValueLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_SetValueLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_SetValueLastResult) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_SetValueLastResult");
static_assert(sizeof(FirebaseDatabaseRef_SetValueLastResult) == 0x000008, "Wrong size on FirebaseDatabaseRef_SetValueLastResult");
static_assert(offsetof(FirebaseDatabaseRef_SetValueLastResult, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_SetValueLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.UpdateChildren
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDatabaseRef_UpdateChildren final
{
public:
	class UFirebaseVariant*                       Values;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_UpdateChildren) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_UpdateChildren");
static_assert(sizeof(FirebaseDatabaseRef_UpdateChildren) == 0x000010, "Wrong size on FirebaseDatabaseRef_UpdateChildren");
static_assert(offsetof(FirebaseDatabaseRef_UpdateChildren, Values) == 0x000000, "Member 'FirebaseDatabaseRef_UpdateChildren::Values' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseRef_UpdateChildren, ReturnValue) == 0x000008, "Member 'FirebaseDatabaseRef_UpdateChildren::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.UpdateChildrenLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDatabaseRef_UpdateChildrenLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_UpdateChildrenLastResult) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_UpdateChildrenLastResult");
static_assert(sizeof(FirebaseDatabaseRef_UpdateChildrenLastResult) == 0x000008, "Wrong size on FirebaseDatabaseRef_UpdateChildrenLastResult");
static_assert(offsetof(FirebaseDatabaseRef_UpdateChildrenLastResult, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_UpdateChildrenLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDatabaseRef.URL
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDatabaseRef_URL final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseRef_URL) == 0x000008, "Wrong alignment on FirebaseDatabaseRef_URL");
static_assert(sizeof(FirebaseDatabaseRef_URL) == 0x000010, "Wrong size on FirebaseDatabaseRef_URL");
static_assert(offsetof(FirebaseDatabaseRef_URL, ReturnValue) == 0x000000, "Member 'FirebaseDatabaseRef_URL::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.Child
// 0x0018 (0x0018 - 0x0000)
struct FirebaseDataSnapshot_Child final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseDataSnapshot*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_Child) == 0x000008, "Wrong alignment on FirebaseDataSnapshot_Child");
static_assert(sizeof(FirebaseDataSnapshot_Child) == 0x000018, "Wrong size on FirebaseDataSnapshot_Child");
static_assert(offsetof(FirebaseDataSnapshot_Child, Path) == 0x000000, "Member 'FirebaseDataSnapshot_Child::Path' has a wrong offset!");
static_assert(offsetof(FirebaseDataSnapshot_Child, ReturnValue) == 0x000010, "Member 'FirebaseDataSnapshot_Child::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.Children
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDataSnapshot_Children final
{
public:
	TArray<class UFirebaseDataSnapshot*>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_Children) == 0x000008, "Wrong alignment on FirebaseDataSnapshot_Children");
static_assert(sizeof(FirebaseDataSnapshot_Children) == 0x000010, "Wrong size on FirebaseDataSnapshot_Children");
static_assert(offsetof(FirebaseDataSnapshot_Children, ReturnValue) == 0x000000, "Member 'FirebaseDataSnapshot_Children::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.ChildrenCount
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDataSnapshot_ChildrenCount final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_ChildrenCount) == 0x000008, "Wrong alignment on FirebaseDataSnapshot_ChildrenCount");
static_assert(sizeof(FirebaseDataSnapshot_ChildrenCount) == 0x000008, "Wrong size on FirebaseDataSnapshot_ChildrenCount");
static_assert(offsetof(FirebaseDataSnapshot_ChildrenCount, ReturnValue) == 0x000000, "Member 'FirebaseDataSnapshot_ChildrenCount::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.Exists
// 0x0001 (0x0001 - 0x0000)
struct FirebaseDataSnapshot_Exists final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_Exists) == 0x000001, "Wrong alignment on FirebaseDataSnapshot_Exists");
static_assert(sizeof(FirebaseDataSnapshot_Exists) == 0x000001, "Wrong size on FirebaseDataSnapshot_Exists");
static_assert(offsetof(FirebaseDataSnapshot_Exists, ReturnValue) == 0x000000, "Member 'FirebaseDataSnapshot_Exists::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.HasChild
// 0x0018 (0x0018 - 0x0000)
struct FirebaseDataSnapshot_HasChild final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseDataSnapshot_HasChild) == 0x000008, "Wrong alignment on FirebaseDataSnapshot_HasChild");
static_assert(sizeof(FirebaseDataSnapshot_HasChild) == 0x000018, "Wrong size on FirebaseDataSnapshot_HasChild");
static_assert(offsetof(FirebaseDataSnapshot_HasChild, Path) == 0x000000, "Member 'FirebaseDataSnapshot_HasChild::Path' has a wrong offset!");
static_assert(offsetof(FirebaseDataSnapshot_HasChild, ReturnValue) == 0x000010, "Member 'FirebaseDataSnapshot_HasChild::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.HasChildren
// 0x0001 (0x0001 - 0x0000)
struct FirebaseDataSnapshot_HasChildren final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_HasChildren) == 0x000001, "Wrong alignment on FirebaseDataSnapshot_HasChildren");
static_assert(sizeof(FirebaseDataSnapshot_HasChildren) == 0x000001, "Wrong size on FirebaseDataSnapshot_HasChildren");
static_assert(offsetof(FirebaseDataSnapshot_HasChildren, ReturnValue) == 0x000000, "Member 'FirebaseDataSnapshot_HasChildren::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.isValid
// 0x0001 (0x0001 - 0x0000)
struct FirebaseDataSnapshot_IsValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_IsValid) == 0x000001, "Wrong alignment on FirebaseDataSnapshot_IsValid");
static_assert(sizeof(FirebaseDataSnapshot_IsValid) == 0x000001, "Wrong size on FirebaseDataSnapshot_IsValid");
static_assert(offsetof(FirebaseDataSnapshot_IsValid, ReturnValue) == 0x000000, "Member 'FirebaseDataSnapshot_IsValid::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.Key
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDataSnapshot_Key final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_Key) == 0x000008, "Wrong alignment on FirebaseDataSnapshot_Key");
static_assert(sizeof(FirebaseDataSnapshot_Key) == 0x000010, "Wrong size on FirebaseDataSnapshot_Key");
static_assert(offsetof(FirebaseDataSnapshot_Key, ReturnValue) == 0x000000, "Member 'FirebaseDataSnapshot_Key::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.Priority
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDataSnapshot_Priority final
{
public:
	class UFirebaseVariant*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_Priority) == 0x000008, "Wrong alignment on FirebaseDataSnapshot_Priority");
static_assert(sizeof(FirebaseDataSnapshot_Priority) == 0x000008, "Wrong size on FirebaseDataSnapshot_Priority");
static_assert(offsetof(FirebaseDataSnapshot_Priority, ReturnValue) == 0x000000, "Member 'FirebaseDataSnapshot_Priority::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseDataSnapshot.Value
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDataSnapshot_Value final
{
public:
	class UFirebaseVariant*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDataSnapshot_Value) == 0x000008, "Wrong alignment on FirebaseDataSnapshot_Value");
static_assert(sizeof(FirebaseDataSnapshot_Value) == 0x000008, "Wrong size on FirebaseDataSnapshot_Value");
static_assert(offsetof(FirebaseDataSnapshot_Value, ReturnValue) == 0x000000, "Member 'FirebaseDataSnapshot_Value::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFacebookCredential.RequestFacebookCredential
// 0x0008 (0x0008 - 0x0000)
struct FirebaseFacebookCredential_RequestFacebookCredential final
{
public:
	class UFirebaseFacebookCredential*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFacebookCredential_RequestFacebookCredential) == 0x000008, "Wrong alignment on FirebaseFacebookCredential_RequestFacebookCredential");
static_assert(sizeof(FirebaseFacebookCredential_RequestFacebookCredential) == 0x000008, "Wrong size on FirebaseFacebookCredential_RequestFacebookCredential");
static_assert(offsetof(FirebaseFacebookCredential_RequestFacebookCredential, ReturnValue) == 0x000000, "Member 'FirebaseFacebookCredential_RequestFacebookCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.ActivateFetched
// 0x0001 (0x0001 - 0x0000)
struct FirebaseFunctionLibrary_ActivateFetched final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_ActivateFetched) == 0x000001, "Wrong alignment on FirebaseFunctionLibrary_ActivateFetched");
static_assert(sizeof(FirebaseFunctionLibrary_ActivateFetched) == 0x000001, "Wrong size on FirebaseFunctionLibrary_ActivateFetched");
static_assert(offsetof(FirebaseFunctionLibrary_ActivateFetched, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_ActivateFetched::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.Fetch
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionLibrary_Fetch final
{
public:
	int64                                         Cache_expiration_in_seconds;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_Fetch) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_Fetch");
static_assert(sizeof(FirebaseFunctionLibrary_Fetch) == 0x000010, "Wrong size on FirebaseFunctionLibrary_Fetch");
static_assert(offsetof(FirebaseFunctionLibrary_Fetch, Cache_expiration_in_seconds) == 0x000000, "Member 'FirebaseFunctionLibrary_Fetch::Cache_expiration_in_seconds' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_Fetch, ReturnValue) == 0x000008, "Member 'FirebaseFunctionLibrary_Fetch::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.FireBaseInitialize
// 0x0001 (0x0001 - 0x0000)
struct FirebaseFunctionLibrary_FireBaseInitialize final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_FireBaseInitialize) == 0x000001, "Wrong alignment on FirebaseFunctionLibrary_FireBaseInitialize");
static_assert(sizeof(FirebaseFunctionLibrary_FireBaseInitialize) == 0x000001, "Wrong size on FirebaseFunctionLibrary_FireBaseInitialize");
static_assert(offsetof(FirebaseFunctionLibrary_FireBaseInitialize, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_FireBaseInitialize::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.GetBoolean
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_GetBoolean final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FValueInfo                             Info;                                              // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionLibrary_GetBoolean) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_GetBoolean");
static_assert(sizeof(FirebaseFunctionLibrary_GetBoolean) == 0x000018, "Wrong size on FirebaseFunctionLibrary_GetBoolean");
static_assert(offsetof(FirebaseFunctionLibrary_GetBoolean, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_GetBoolean::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetBoolean, Info) == 0x000010, "Member 'FirebaseFunctionLibrary_GetBoolean::Info' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetBoolean, ReturnValue) == 0x000012, "Member 'FirebaseFunctionLibrary_GetBoolean::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.GetDouble
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_GetDouble final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FValueInfo                             Info;                                              // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_GetDouble) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_GetDouble");
static_assert(sizeof(FirebaseFunctionLibrary_GetDouble) == 0x000018, "Wrong size on FirebaseFunctionLibrary_GetDouble");
static_assert(offsetof(FirebaseFunctionLibrary_GetDouble, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_GetDouble::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetDouble, Info) == 0x000010, "Member 'FirebaseFunctionLibrary_GetDouble::Info' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetDouble, ReturnValue) == 0x000014, "Member 'FirebaseFunctionLibrary_GetDouble::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.GetKeys
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionLibrary_GetKeys final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_GetKeys) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_GetKeys");
static_assert(sizeof(FirebaseFunctionLibrary_GetKeys) == 0x000010, "Wrong size on FirebaseFunctionLibrary_GetKeys");
static_assert(offsetof(FirebaseFunctionLibrary_GetKeys, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_GetKeys::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.GetKeysByPrefix
// 0x0020 (0x0020 - 0x0000)
struct FirebaseFunctionLibrary_GetKeysByPrefix final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_GetKeysByPrefix) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_GetKeysByPrefix");
static_assert(sizeof(FirebaseFunctionLibrary_GetKeysByPrefix) == 0x000020, "Wrong size on FirebaseFunctionLibrary_GetKeysByPrefix");
static_assert(offsetof(FirebaseFunctionLibrary_GetKeysByPrefix, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_GetKeysByPrefix::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetKeysByPrefix, ReturnValue) == 0x000010, "Member 'FirebaseFunctionLibrary_GetKeysByPrefix::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.GetLong
// 0x0020 (0x0020 - 0x0000)
struct FirebaseFunctionLibrary_GetLong final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FValueInfo                             Info;                                              // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_GetLong) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_GetLong");
static_assert(sizeof(FirebaseFunctionLibrary_GetLong) == 0x000020, "Wrong size on FirebaseFunctionLibrary_GetLong");
static_assert(offsetof(FirebaseFunctionLibrary_GetLong, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_GetLong::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetLong, Info) == 0x000010, "Member 'FirebaseFunctionLibrary_GetLong::Info' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetLong, ReturnValue) == 0x000018, "Member 'FirebaseFunctionLibrary_GetLong::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.GetString
// 0x0028 (0x0028 - 0x0000)
struct FirebaseFunctionLibrary_GetString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FValueInfo                             Info;                                              // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_GetString) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_GetString");
static_assert(sizeof(FirebaseFunctionLibrary_GetString) == 0x000028, "Wrong size on FirebaseFunctionLibrary_GetString");
static_assert(offsetof(FirebaseFunctionLibrary_GetString, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_GetString::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetString, Info) == 0x000010, "Member 'FirebaseFunctionLibrary_GetString::Info' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_GetString, ReturnValue) == 0x000018, "Member 'FirebaseFunctionLibrary_GetString::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.IsSupportAppleSignIn
// 0x0001 (0x0001 - 0x0000)
struct FirebaseFunctionLibrary_IsSupportAppleSignIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_IsSupportAppleSignIn) == 0x000001, "Wrong alignment on FirebaseFunctionLibrary_IsSupportAppleSignIn");
static_assert(sizeof(FirebaseFunctionLibrary_IsSupportAppleSignIn) == 0x000001, "Wrong size on FirebaseFunctionLibrary_IsSupportAppleSignIn");
static_assert(offsetof(FirebaseFunctionLibrary_IsSupportAppleSignIn, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_IsSupportAppleSignIn::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomEvent
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionLibrary_LogCustomEvent final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogCustomEvent) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_LogCustomEvent");
static_assert(sizeof(FirebaseFunctionLibrary_LogCustomEvent) == 0x000010, "Wrong size on FirebaseFunctionLibrary_LogCustomEvent");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomEvent, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogCustomEvent::Name_0' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomEventWithParameterList
// 0x0020 (0x0020 - 0x0000)
struct FirebaseFunctionLibrary_LogCustomEventWithParameterList final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAnalyticsParam>                ParameterList;                                     // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogCustomEventWithParameterList) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_LogCustomEventWithParameterList");
static_assert(sizeof(FirebaseFunctionLibrary_LogCustomEventWithParameterList) == 0x000020, "Wrong size on FirebaseFunctionLibrary_LogCustomEventWithParameterList");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomEventWithParameterList, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogCustomEventWithParameterList::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomEventWithParameterList, ParameterList) == 0x000010, "Member 'FirebaseFunctionLibrary_LogCustomEventWithParameterList::ParameterList' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomFloatEvent
// 0x0028 (0x0028 - 0x0000)
struct FirebaseFunctionLibrary_LogCustomFloatEvent final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Parameter_name;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Parameter_value;                                   // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionLibrary_LogCustomFloatEvent) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_LogCustomFloatEvent");
static_assert(sizeof(FirebaseFunctionLibrary_LogCustomFloatEvent) == 0x000028, "Wrong size on FirebaseFunctionLibrary_LogCustomFloatEvent");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomFloatEvent, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogCustomFloatEvent::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomFloatEvent, Parameter_name) == 0x000010, "Member 'FirebaseFunctionLibrary_LogCustomFloatEvent::Parameter_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomFloatEvent, Parameter_value) == 0x000020, "Member 'FirebaseFunctionLibrary_LogCustomFloatEvent::Parameter_value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomInt64Event
// 0x0028 (0x0028 - 0x0000)
struct FirebaseFunctionLibrary_LogCustomInt64Event final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Parameter_name;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Parameter_value;                                   // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogCustomInt64Event) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_LogCustomInt64Event");
static_assert(sizeof(FirebaseFunctionLibrary_LogCustomInt64Event) == 0x000028, "Wrong size on FirebaseFunctionLibrary_LogCustomInt64Event");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomInt64Event, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogCustomInt64Event::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomInt64Event, Parameter_name) == 0x000010, "Member 'FirebaseFunctionLibrary_LogCustomInt64Event::Parameter_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomInt64Event, Parameter_value) == 0x000020, "Member 'FirebaseFunctionLibrary_LogCustomInt64Event::Parameter_value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomIntEvent
// 0x0028 (0x0028 - 0x0000)
struct FirebaseFunctionLibrary_LogCustomIntEvent final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Parameter_name;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Parameter_value;                                   // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionLibrary_LogCustomIntEvent) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_LogCustomIntEvent");
static_assert(sizeof(FirebaseFunctionLibrary_LogCustomIntEvent) == 0x000028, "Wrong size on FirebaseFunctionLibrary_LogCustomIntEvent");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomIntEvent, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogCustomIntEvent::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomIntEvent, Parameter_name) == 0x000010, "Member 'FirebaseFunctionLibrary_LogCustomIntEvent::Parameter_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomIntEvent, Parameter_value) == 0x000020, "Member 'FirebaseFunctionLibrary_LogCustomIntEvent::Parameter_value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogCustomStringEvent
// 0x0030 (0x0030 - 0x0000)
struct FirebaseFunctionLibrary_LogCustomStringEvent final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Parameter_name;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Parameter_value;                                   // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogCustomStringEvent) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_LogCustomStringEvent");
static_assert(sizeof(FirebaseFunctionLibrary_LogCustomStringEvent) == 0x000030, "Wrong size on FirebaseFunctionLibrary_LogCustomStringEvent");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomStringEvent, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogCustomStringEvent::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomStringEvent, Parameter_name) == 0x000010, "Member 'FirebaseFunctionLibrary_LogCustomStringEvent::Parameter_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogCustomStringEvent, Parameter_value) == 0x000020, "Member 'FirebaseFunctionLibrary_LogCustomStringEvent::Parameter_value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogEvent
// 0x0001 (0x0001 - 0x0000)
struct FirebaseFunctionLibrary_LogEvent final
{
public:
	EAnalyticsEvent                               Name_0;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogEvent) == 0x000001, "Wrong alignment on FirebaseFunctionLibrary_LogEvent");
static_assert(sizeof(FirebaseFunctionLibrary_LogEvent) == 0x000001, "Wrong size on FirebaseFunctionLibrary_LogEvent");
static_assert(offsetof(FirebaseFunctionLibrary_LogEvent, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogEvent::Name_0' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogFloatEvent
// 0x0008 (0x0008 - 0x0000)
struct FirebaseFunctionLibrary_LogFloatEvent final
{
public:
	EAnalyticsEvent                               Name_0;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnalyticsParameter                           Parameter_name;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Parameter_value;                                   // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogFloatEvent) == 0x000004, "Wrong alignment on FirebaseFunctionLibrary_LogFloatEvent");
static_assert(sizeof(FirebaseFunctionLibrary_LogFloatEvent) == 0x000008, "Wrong size on FirebaseFunctionLibrary_LogFloatEvent");
static_assert(offsetof(FirebaseFunctionLibrary_LogFloatEvent, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogFloatEvent::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogFloatEvent, Parameter_name) == 0x000001, "Member 'FirebaseFunctionLibrary_LogFloatEvent::Parameter_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogFloatEvent, Parameter_value) == 0x000004, "Member 'FirebaseFunctionLibrary_LogFloatEvent::Parameter_value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogInt64Event
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionLibrary_LogInt64Event final
{
public:
	EAnalyticsEvent                               Name_0;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnalyticsParameter                           Parameter_name;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Parameter_value;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogInt64Event) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_LogInt64Event");
static_assert(sizeof(FirebaseFunctionLibrary_LogInt64Event) == 0x000010, "Wrong size on FirebaseFunctionLibrary_LogInt64Event");
static_assert(offsetof(FirebaseFunctionLibrary_LogInt64Event, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogInt64Event::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogInt64Event, Parameter_name) == 0x000001, "Member 'FirebaseFunctionLibrary_LogInt64Event::Parameter_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogInt64Event, Parameter_value) == 0x000008, "Member 'FirebaseFunctionLibrary_LogInt64Event::Parameter_value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogIntEvent
// 0x0008 (0x0008 - 0x0000)
struct FirebaseFunctionLibrary_LogIntEvent final
{
public:
	EAnalyticsEvent                               Name_0;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnalyticsParameter                           Parameter_name;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Parameter_value;                                   // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogIntEvent) == 0x000004, "Wrong alignment on FirebaseFunctionLibrary_LogIntEvent");
static_assert(sizeof(FirebaseFunctionLibrary_LogIntEvent) == 0x000008, "Wrong size on FirebaseFunctionLibrary_LogIntEvent");
static_assert(offsetof(FirebaseFunctionLibrary_LogIntEvent, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogIntEvent::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogIntEvent, Parameter_name) == 0x000001, "Member 'FirebaseFunctionLibrary_LogIntEvent::Parameter_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogIntEvent, Parameter_value) == 0x000004, "Member 'FirebaseFunctionLibrary_LogIntEvent::Parameter_value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.LogStringEvent
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_LogStringEvent final
{
public:
	EAnalyticsEvent                               Name_0;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnalyticsParameter                           Parameter_name;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Parameter_value;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_LogStringEvent) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_LogStringEvent");
static_assert(sizeof(FirebaseFunctionLibrary_LogStringEvent) == 0x000018, "Wrong size on FirebaseFunctionLibrary_LogStringEvent");
static_assert(offsetof(FirebaseFunctionLibrary_LogStringEvent, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_LogStringEvent::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogStringEvent, Parameter_name) == 0x000001, "Member 'FirebaseFunctionLibrary_LogStringEvent::Parameter_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_LogStringEvent, Parameter_value) == 0x000008, "Member 'FirebaseFunctionLibrary_LogStringEvent::Parameter_value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.PollMessage
// 0x01C8 (0x01C8 - 0x0000)
struct FirebaseFunctionLibrary_PollMessage final
{
public:
	struct FFirebaseMessage                       Message;                                           // 0x0000(0x01C0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionLibrary_PollMessage) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_PollMessage");
static_assert(sizeof(FirebaseFunctionLibrary_PollMessage) == 0x0001C8, "Wrong size on FirebaseFunctionLibrary_PollMessage");
static_assert(offsetof(FirebaseFunctionLibrary_PollMessage, Message) == 0x000000, "Member 'FirebaseFunctionLibrary_PollMessage::Message' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_PollMessage, ReturnValue) == 0x0001C0, "Member 'FirebaseFunctionLibrary_PollMessage::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.PollRegistrationToken
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionLibrary_PollRegistrationToken final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_PollRegistrationToken) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_PollRegistrationToken");
static_assert(sizeof(FirebaseFunctionLibrary_PollRegistrationToken) == 0x000010, "Wrong size on FirebaseFunctionLibrary_PollRegistrationToken");
static_assert(offsetof(FirebaseFunctionLibrary_PollRegistrationToken, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_PollRegistrationToken::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.RequestPermission
// 0x0008 (0x0008 - 0x0000)
struct FirebaseFunctionLibrary_RequestPermission final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_RequestPermission) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_RequestPermission");
static_assert(sizeof(FirebaseFunctionLibrary_RequestPermission) == 0x000008, "Wrong size on FirebaseFunctionLibrary_RequestPermission");
static_assert(offsetof(FirebaseFunctionLibrary_RequestPermission, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_RequestPermission::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.RequestPermissionLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseFunctionLibrary_RequestPermissionLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_RequestPermissionLastResult) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_RequestPermissionLastResult");
static_assert(sizeof(FirebaseFunctionLibrary_RequestPermissionLastResult) == 0x000008, "Wrong size on FirebaseFunctionLibrary_RequestPermissionLastResult");
static_assert(offsetof(FirebaseFunctionLibrary_RequestPermissionLastResult, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_RequestPermissionLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SetBool
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_SetBool final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionLibrary_SetBool) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SetBool");
static_assert(sizeof(FirebaseFunctionLibrary_SetBool) == 0x000018, "Wrong size on FirebaseFunctionLibrary_SetBool");
static_assert(offsetof(FirebaseFunctionLibrary_SetBool, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_SetBool::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_SetBool, Value) == 0x000010, "Member 'FirebaseFunctionLibrary_SetBool::Value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SetCurrentScreen
// 0x0020 (0x0020 - 0x0000)
struct FirebaseFunctionLibrary_SetCurrentScreen final
{
public:
	class FString                                 Screen_name;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Screen_class;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_SetCurrentScreen) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SetCurrentScreen");
static_assert(sizeof(FirebaseFunctionLibrary_SetCurrentScreen) == 0x000020, "Wrong size on FirebaseFunctionLibrary_SetCurrentScreen");
static_assert(offsetof(FirebaseFunctionLibrary_SetCurrentScreen, Screen_name) == 0x000000, "Member 'FirebaseFunctionLibrary_SetCurrentScreen::Screen_name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_SetCurrentScreen, Screen_class) == 0x000010, "Member 'FirebaseFunctionLibrary_SetCurrentScreen::Screen_class' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SetDefaults
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionLibrary_SetDefaults final
{
public:
	TArray<struct FFirebaseConfigKeyValueVariant> Defaults;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_SetDefaults) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SetDefaults");
static_assert(sizeof(FirebaseFunctionLibrary_SetDefaults) == 0x000010, "Wrong size on FirebaseFunctionLibrary_SetDefaults");
static_assert(offsetof(FirebaseFunctionLibrary_SetDefaults, Defaults) == 0x000000, "Member 'FirebaseFunctionLibrary_SetDefaults::Defaults' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SetFloat
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_SetFloat final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionLibrary_SetFloat) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SetFloat");
static_assert(sizeof(FirebaseFunctionLibrary_SetFloat) == 0x000018, "Wrong size on FirebaseFunctionLibrary_SetFloat");
static_assert(offsetof(FirebaseFunctionLibrary_SetFloat, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_SetFloat::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_SetFloat, Value) == 0x000010, "Member 'FirebaseFunctionLibrary_SetFloat::Value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SetInteger
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_SetInteger final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionLibrary_SetInteger) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SetInteger");
static_assert(sizeof(FirebaseFunctionLibrary_SetInteger) == 0x000018, "Wrong size on FirebaseFunctionLibrary_SetInteger");
static_assert(offsetof(FirebaseFunctionLibrary_SetInteger, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_SetInteger::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_SetInteger, Value) == 0x000010, "Member 'FirebaseFunctionLibrary_SetInteger::Value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SetString
// 0x0020 (0x0020 - 0x0000)
struct FirebaseFunctionLibrary_SetString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_SetString) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SetString");
static_assert(sizeof(FirebaseFunctionLibrary_SetString) == 0x000020, "Wrong size on FirebaseFunctionLibrary_SetString");
static_assert(offsetof(FirebaseFunctionLibrary_SetString, Key) == 0x000000, "Member 'FirebaseFunctionLibrary_SetString::Key' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_SetString, Value) == 0x000010, "Member 'FirebaseFunctionLibrary_SetString::Value' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SetUserId
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionLibrary_SetUserId final
{
public:
	class FString                                 UserID;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_SetUserId) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SetUserId");
static_assert(sizeof(FirebaseFunctionLibrary_SetUserId) == 0x000010, "Wrong size on FirebaseFunctionLibrary_SetUserId");
static_assert(offsetof(FirebaseFunctionLibrary_SetUserId, UserID) == 0x000000, "Member 'FirebaseFunctionLibrary_SetUserId::UserID' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SetUserProperty
// 0x0020 (0x0020 - 0x0000)
struct FirebaseFunctionLibrary_SetUserProperty final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Property;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_SetUserProperty) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SetUserProperty");
static_assert(sizeof(FirebaseFunctionLibrary_SetUserProperty) == 0x000020, "Wrong size on FirebaseFunctionLibrary_SetUserProperty");
static_assert(offsetof(FirebaseFunctionLibrary_SetUserProperty, Name_0) == 0x000000, "Member 'FirebaseFunctionLibrary_SetUserProperty::Name_0' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_SetUserProperty, Property) == 0x000010, "Member 'FirebaseFunctionLibrary_SetUserProperty::Property' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.Subscribe
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_Subscribe final
{
public:
	class FString                                 Topic;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_Subscribe) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_Subscribe");
static_assert(sizeof(FirebaseFunctionLibrary_Subscribe) == 0x000018, "Wrong size on FirebaseFunctionLibrary_Subscribe");
static_assert(offsetof(FirebaseFunctionLibrary_Subscribe, Topic) == 0x000000, "Member 'FirebaseFunctionLibrary_Subscribe::Topic' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_Subscribe, ReturnValue) == 0x000010, "Member 'FirebaseFunctionLibrary_Subscribe::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.SubscribeLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseFunctionLibrary_SubscribeLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_SubscribeLastResult) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_SubscribeLastResult");
static_assert(sizeof(FirebaseFunctionLibrary_SubscribeLastResult) == 0x000008, "Wrong size on FirebaseFunctionLibrary_SubscribeLastResult");
static_assert(offsetof(FirebaseFunctionLibrary_SubscribeLastResult, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_SubscribeLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.Unsubscribe
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_Unsubscribe final
{
public:
	class FString                                 Topic;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_Unsubscribe) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_Unsubscribe");
static_assert(sizeof(FirebaseFunctionLibrary_Unsubscribe) == 0x000018, "Wrong size on FirebaseFunctionLibrary_Unsubscribe");
static_assert(offsetof(FirebaseFunctionLibrary_Unsubscribe, Topic) == 0x000000, "Member 'FirebaseFunctionLibrary_Unsubscribe::Topic' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_Unsubscribe, ReturnValue) == 0x000010, "Member 'FirebaseFunctionLibrary_Unsubscribe::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.UnsubscribeLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseFunctionLibrary_UnsubscribeLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_UnsubscribeLastResult) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_UnsubscribeLastResult");
static_assert(sizeof(FirebaseFunctionLibrary_UnsubscribeLastResult) == 0x000008, "Wrong size on FirebaseFunctionLibrary_UnsubscribeLastResult");
static_assert(offsetof(FirebaseFunctionLibrary_UnsubscribeLastResult, ReturnValue) == 0x000000, "Member 'FirebaseFunctionLibrary_UnsubscribeLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.WriteError
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionLibrary_WriteError final
{
public:
	class FString                                 Log;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Code;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionLibrary_WriteError) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_WriteError");
static_assert(sizeof(FirebaseFunctionLibrary_WriteError) == 0x000018, "Wrong size on FirebaseFunctionLibrary_WriteError");
static_assert(offsetof(FirebaseFunctionLibrary_WriteError, Log) == 0x000000, "Member 'FirebaseFunctionLibrary_WriteError::Log' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionLibrary_WriteError, Code) == 0x000010, "Member 'FirebaseFunctionLibrary_WriteError::Code' has a wrong offset!");

// Function EasyFirebase.FirebaseFunctionLibrary.WriteLog
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionLibrary_WriteLog final
{
public:
	class FString                                 Log;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionLibrary_WriteLog) == 0x000008, "Wrong alignment on FirebaseFunctionLibrary_WriteLog");
static_assert(sizeof(FirebaseFunctionLibrary_WriteLog) == 0x000010, "Wrong size on FirebaseFunctionLibrary_WriteLog");
static_assert(offsetof(FirebaseFunctionLibrary_WriteLog, Log) == 0x000000, "Member 'FirebaseFunctionLibrary_WriteLog::Log' has a wrong offset!");

// Function EasyFirebase.FirebaseFutureDataSnapshot.WaitFuture
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFutureDataSnapshot_WaitFuture final
{
public:
	class UFirebaseFutureDataSnapshot*            Future;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureDataSnapshot*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFutureDataSnapshot_WaitFuture) == 0x000008, "Wrong alignment on FirebaseFutureDataSnapshot_WaitFuture");
static_assert(sizeof(FirebaseFutureDataSnapshot_WaitFuture) == 0x000010, "Wrong size on FirebaseFutureDataSnapshot_WaitFuture");
static_assert(offsetof(FirebaseFutureDataSnapshot_WaitFuture, Future) == 0x000000, "Member 'FirebaseFutureDataSnapshot_WaitFuture::Future' has a wrong offset!");
static_assert(offsetof(FirebaseFutureDataSnapshot_WaitFuture, ReturnValue) == 0x000008, "Member 'FirebaseFutureDataSnapshot_WaitFuture::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFutureFetchProvideResult.WaitFuture
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFutureFetchProvideResult_WaitFuture final
{
public:
	class UFirebaseFutureFetchProvideResult*      Future;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureFetchProvideResult*      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFutureFetchProvideResult_WaitFuture) == 0x000008, "Wrong alignment on FirebaseFutureFetchProvideResult_WaitFuture");
static_assert(sizeof(FirebaseFutureFetchProvideResult_WaitFuture) == 0x000010, "Wrong size on FirebaseFutureFetchProvideResult_WaitFuture");
static_assert(offsetof(FirebaseFutureFetchProvideResult_WaitFuture, Future) == 0x000000, "Member 'FirebaseFutureFetchProvideResult_WaitFuture::Future' has a wrong offset!");
static_assert(offsetof(FirebaseFutureFetchProvideResult_WaitFuture, ReturnValue) == 0x000008, "Member 'FirebaseFutureFetchProvideResult_WaitFuture::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFutureSignInResult.WaitFuture
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFutureSignInResult_WaitFuture final
{
public:
	class UFirebaseFutureSignInResult*            Future;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureSignInResult*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFutureSignInResult_WaitFuture) == 0x000008, "Wrong alignment on FirebaseFutureSignInResult_WaitFuture");
static_assert(sizeof(FirebaseFutureSignInResult_WaitFuture) == 0x000010, "Wrong size on FirebaseFutureSignInResult_WaitFuture");
static_assert(offsetof(FirebaseFutureSignInResult_WaitFuture, Future) == 0x000000, "Member 'FirebaseFutureSignInResult_WaitFuture::Future' has a wrong offset!");
static_assert(offsetof(FirebaseFutureSignInResult_WaitFuture, ReturnValue) == 0x000008, "Member 'FirebaseFutureSignInResult_WaitFuture::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFutureString.WaitFuture
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFutureString_WaitFuture final
{
public:
	class UFirebaseFutureString*                  Future;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureString*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFutureString_WaitFuture) == 0x000008, "Wrong alignment on FirebaseFutureString_WaitFuture");
static_assert(sizeof(FirebaseFutureString_WaitFuture) == 0x000010, "Wrong size on FirebaseFutureString_WaitFuture");
static_assert(offsetof(FirebaseFutureString_WaitFuture, Future) == 0x000000, "Member 'FirebaseFutureString_WaitFuture::Future' has a wrong offset!");
static_assert(offsetof(FirebaseFutureString_WaitFuture, ReturnValue) == 0x000008, "Member 'FirebaseFutureString_WaitFuture::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFutureUser.WaitFuture
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFutureUser_WaitFuture final
{
public:
	class UFirebaseFutureUser*                    Future;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFutureUser_WaitFuture) == 0x000008, "Wrong alignment on FirebaseFutureUser_WaitFuture");
static_assert(sizeof(FirebaseFutureUser_WaitFuture) == 0x000010, "Wrong size on FirebaseFutureUser_WaitFuture");
static_assert(offsetof(FirebaseFutureUser_WaitFuture, Future) == 0x000000, "Member 'FirebaseFutureUser_WaitFuture::Future' has a wrong offset!");
static_assert(offsetof(FirebaseFutureUser_WaitFuture, ReturnValue) == 0x000008, "Member 'FirebaseFutureUser_WaitFuture::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseFutureVoid.WaitFuture
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFutureVoid_WaitFuture final
{
public:
	class UFirebaseFutureVoid*                    Future;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFutureVoid_WaitFuture) == 0x000008, "Wrong alignment on FirebaseFutureVoid_WaitFuture");
static_assert(sizeof(FirebaseFutureVoid_WaitFuture) == 0x000010, "Wrong size on FirebaseFutureVoid_WaitFuture");
static_assert(offsetof(FirebaseFutureVoid_WaitFuture, Future) == 0x000000, "Member 'FirebaseFutureVoid_WaitFuture::Future' has a wrong offset!");
static_assert(offsetof(FirebaseFutureVoid_WaitFuture, ReturnValue) == 0x000008, "Member 'FirebaseFutureVoid_WaitFuture::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseGameCenterCredential.RequestGameCenterCredential
// 0x0008 (0x0008 - 0x0000)
struct FirebaseGameCenterCredential_RequestGameCenterCredential final
{
public:
	class UFirebaseGameCenterCredential*          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseGameCenterCredential_RequestGameCenterCredential) == 0x000008, "Wrong alignment on FirebaseGameCenterCredential_RequestGameCenterCredential");
static_assert(sizeof(FirebaseGameCenterCredential_RequestGameCenterCredential) == 0x000008, "Wrong size on FirebaseGameCenterCredential_RequestGameCenterCredential");
static_assert(offsetof(FirebaseGameCenterCredential_RequestGameCenterCredential, ReturnValue) == 0x000000, "Member 'FirebaseGameCenterCredential_RequestGameCenterCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseGoogleCredential.RequestGoogleCredential
// 0x0008 (0x0008 - 0x0000)
struct FirebaseGoogleCredential_RequestGoogleCredential final
{
public:
	class UFirebaseGoogleCredential*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseGoogleCredential_RequestGoogleCredential) == 0x000008, "Wrong alignment on FirebaseGoogleCredential_RequestGoogleCredential");
static_assert(sizeof(FirebaseGoogleCredential_RequestGoogleCredential) == 0x000008, "Wrong size on FirebaseGoogleCredential_RequestGoogleCredential");
static_assert(offsetof(FirebaseGoogleCredential_RequestGoogleCredential, ReturnValue) == 0x000000, "Member 'FirebaseGoogleCredential_RequestGoogleCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseGoogleServerAuthCode.RequestGoogleServerAuthCode
// 0x0008 (0x0008 - 0x0000)
struct FirebaseGoogleServerAuthCode_RequestGoogleServerAuthCode final
{
public:
	class UFirebaseGoogleServerAuthCode*          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseGoogleServerAuthCode_RequestGoogleServerAuthCode) == 0x000008, "Wrong alignment on FirebaseGoogleServerAuthCode_RequestGoogleServerAuthCode");
static_assert(sizeof(FirebaseGoogleServerAuthCode_RequestGoogleServerAuthCode) == 0x000008, "Wrong size on FirebaseGoogleServerAuthCode_RequestGoogleServerAuthCode");
static_assert(offsetof(FirebaseGoogleServerAuthCode_RequestGoogleServerAuthCode, ReturnValue) == 0x000000, "Member 'FirebaseGoogleServerAuthCode_RequestGoogleServerAuthCode::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseMessageInitlize.FirebaseMessageInitlize
// 0x0008 (0x0008 - 0x0000)
struct FirebaseMessageInitlize_FirebaseMessageInitlize final
{
public:
	class UFirebaseMessageInitlize*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseMessageInitlize_FirebaseMessageInitlize) == 0x000008, "Wrong alignment on FirebaseMessageInitlize_FirebaseMessageInitlize");
static_assert(sizeof(FirebaseMessageInitlize_FirebaseMessageInitlize) == 0x000008, "Wrong size on FirebaseMessageInitlize_FirebaseMessageInitlize");
static_assert(offsetof(FirebaseMessageInitlize_FirebaseMessageInitlize, ReturnValue) == 0x000000, "Member 'FirebaseMessageInitlize_FirebaseMessageInitlize::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUserInfoInterface.display_name
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUserInfoInterface_Display_name final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUserInfoInterface_Display_name) == 0x000008, "Wrong alignment on FirebaseUserInfoInterface_Display_name");
static_assert(sizeof(FirebaseUserInfoInterface_Display_name) == 0x000010, "Wrong size on FirebaseUserInfoInterface_Display_name");
static_assert(offsetof(FirebaseUserInfoInterface_Display_name, ReturnValue) == 0x000000, "Member 'FirebaseUserInfoInterface_Display_name::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUserInfoInterface.email
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUserInfoInterface_Email final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUserInfoInterface_Email) == 0x000008, "Wrong alignment on FirebaseUserInfoInterface_Email");
static_assert(sizeof(FirebaseUserInfoInterface_Email) == 0x000010, "Wrong size on FirebaseUserInfoInterface_Email");
static_assert(offsetof(FirebaseUserInfoInterface_Email, ReturnValue) == 0x000000, "Member 'FirebaseUserInfoInterface_Email::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUserInfoInterface.phone_number
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUserInfoInterface_Phone_number final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUserInfoInterface_Phone_number) == 0x000008, "Wrong alignment on FirebaseUserInfoInterface_Phone_number");
static_assert(sizeof(FirebaseUserInfoInterface_Phone_number) == 0x000010, "Wrong size on FirebaseUserInfoInterface_Phone_number");
static_assert(offsetof(FirebaseUserInfoInterface_Phone_number, ReturnValue) == 0x000000, "Member 'FirebaseUserInfoInterface_Phone_number::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUserInfoInterface.photo_url
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUserInfoInterface_Photo_url final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUserInfoInterface_Photo_url) == 0x000008, "Wrong alignment on FirebaseUserInfoInterface_Photo_url");
static_assert(sizeof(FirebaseUserInfoInterface_Photo_url) == 0x000010, "Wrong size on FirebaseUserInfoInterface_Photo_url");
static_assert(offsetof(FirebaseUserInfoInterface_Photo_url, ReturnValue) == 0x000000, "Member 'FirebaseUserInfoInterface_Photo_url::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUserInfoInterface.provider_id
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUserInfoInterface_Provider_id final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUserInfoInterface_Provider_id) == 0x000008, "Wrong alignment on FirebaseUserInfoInterface_Provider_id");
static_assert(sizeof(FirebaseUserInfoInterface_Provider_id) == 0x000010, "Wrong size on FirebaseUserInfoInterface_Provider_id");
static_assert(offsetof(FirebaseUserInfoInterface_Provider_id, ReturnValue) == 0x000000, "Member 'FirebaseUserInfoInterface_Provider_id::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUserInfoInterface.uid
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUserInfoInterface_Uid final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUserInfoInterface_Uid) == 0x000008, "Wrong alignment on FirebaseUserInfoInterface_Uid");
static_assert(sizeof(FirebaseUserInfoInterface_Uid) == 0x000010, "Wrong size on FirebaseUserInfoInterface_Uid");
static_assert(offsetof(FirebaseUserInfoInterface_Uid, ReturnValue) == 0x000000, "Member 'FirebaseUserInfoInterface_Uid::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.Delete
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_Delete final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_Delete) == 0x000008, "Wrong alignment on FirebaseUser_Delete");
static_assert(sizeof(FirebaseUser_Delete) == 0x000008, "Wrong size on FirebaseUser_Delete");
static_assert(offsetof(FirebaseUser_Delete, ReturnValue) == 0x000000, "Member 'FirebaseUser_Delete::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.DeleteLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_DeleteLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_DeleteLastResult) == 0x000008, "Wrong alignment on FirebaseUser_DeleteLastResult");
static_assert(sizeof(FirebaseUser_DeleteLastResult) == 0x000008, "Wrong size on FirebaseUser_DeleteLastResult");
static_assert(offsetof(FirebaseUser_DeleteLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_DeleteLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.GetToken
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUser_GetToken final
{
public:
	bool                                          ForceRefresh;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirebaseFutureString*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_GetToken) == 0x000008, "Wrong alignment on FirebaseUser_GetToken");
static_assert(sizeof(FirebaseUser_GetToken) == 0x000010, "Wrong size on FirebaseUser_GetToken");
static_assert(offsetof(FirebaseUser_GetToken, ForceRefresh) == 0x000000, "Member 'FirebaseUser_GetToken::ForceRefresh' has a wrong offset!");
static_assert(offsetof(FirebaseUser_GetToken, ReturnValue) == 0x000008, "Member 'FirebaseUser_GetToken::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.GetTokenLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_GetTokenLastResult final
{
public:
	class UFirebaseFutureString*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_GetTokenLastResult) == 0x000008, "Wrong alignment on FirebaseUser_GetTokenLastResult");
static_assert(sizeof(FirebaseUser_GetTokenLastResult) == 0x000008, "Wrong size on FirebaseUser_GetTokenLastResult");
static_assert(offsetof(FirebaseUser_GetTokenLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_GetTokenLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.is_anonymous
// 0x0001 (0x0001 - 0x0000)
struct FirebaseUser_Is_anonymous final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_Is_anonymous) == 0x000001, "Wrong alignment on FirebaseUser_Is_anonymous");
static_assert(sizeof(FirebaseUser_Is_anonymous) == 0x000001, "Wrong size on FirebaseUser_Is_anonymous");
static_assert(offsetof(FirebaseUser_Is_anonymous, ReturnValue) == 0x000000, "Member 'FirebaseUser_Is_anonymous::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.is_email_verified
// 0x0001 (0x0001 - 0x0000)
struct FirebaseUser_Is_email_verified final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_Is_email_verified) == 0x000001, "Wrong alignment on FirebaseUser_Is_email_verified");
static_assert(sizeof(FirebaseUser_Is_email_verified) == 0x000001, "Wrong size on FirebaseUser_Is_email_verified");
static_assert(offsetof(FirebaseUser_Is_email_verified, ReturnValue) == 0x000000, "Member 'FirebaseUser_Is_email_verified::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.LinkAndRetrieveDataWithCredential
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUser_LinkAndRetrieveDataWithCredential final
{
public:
	class UFirebaseCredential*                    Crdenntial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureSignInResult*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_LinkAndRetrieveDataWithCredential) == 0x000008, "Wrong alignment on FirebaseUser_LinkAndRetrieveDataWithCredential");
static_assert(sizeof(FirebaseUser_LinkAndRetrieveDataWithCredential) == 0x000010, "Wrong size on FirebaseUser_LinkAndRetrieveDataWithCredential");
static_assert(offsetof(FirebaseUser_LinkAndRetrieveDataWithCredential, Crdenntial) == 0x000000, "Member 'FirebaseUser_LinkAndRetrieveDataWithCredential::Crdenntial' has a wrong offset!");
static_assert(offsetof(FirebaseUser_LinkAndRetrieveDataWithCredential, ReturnValue) == 0x000008, "Member 'FirebaseUser_LinkAndRetrieveDataWithCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.LinkAndRetrieveDataWithCredentialLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_LinkAndRetrieveDataWithCredentialLastResult final
{
public:
	class UFirebaseFutureSignInResult*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_LinkAndRetrieveDataWithCredentialLastResult) == 0x000008, "Wrong alignment on FirebaseUser_LinkAndRetrieveDataWithCredentialLastResult");
static_assert(sizeof(FirebaseUser_LinkAndRetrieveDataWithCredentialLastResult) == 0x000008, "Wrong size on FirebaseUser_LinkAndRetrieveDataWithCredentialLastResult");
static_assert(offsetof(FirebaseUser_LinkAndRetrieveDataWithCredentialLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_LinkAndRetrieveDataWithCredentialLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.LinkWithCredential
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUser_LinkWithCredential final
{
public:
	class UFirebaseCredential*                    Crdenntial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_LinkWithCredential) == 0x000008, "Wrong alignment on FirebaseUser_LinkWithCredential");
static_assert(sizeof(FirebaseUser_LinkWithCredential) == 0x000010, "Wrong size on FirebaseUser_LinkWithCredential");
static_assert(offsetof(FirebaseUser_LinkWithCredential, Crdenntial) == 0x000000, "Member 'FirebaseUser_LinkWithCredential::Crdenntial' has a wrong offset!");
static_assert(offsetof(FirebaseUser_LinkWithCredential, ReturnValue) == 0x000008, "Member 'FirebaseUser_LinkWithCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.LinkWithCredentialLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_LinkWithCredentialLastResult final
{
public:
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_LinkWithCredentialLastResult) == 0x000008, "Wrong alignment on FirebaseUser_LinkWithCredentialLastResult");
static_assert(sizeof(FirebaseUser_LinkWithCredentialLastResult) == 0x000008, "Wrong size on FirebaseUser_LinkWithCredentialLastResult");
static_assert(offsetof(FirebaseUser_LinkWithCredentialLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_LinkWithCredentialLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.metadata
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUser_Metadata final
{
public:
	struct FUserMetadata                          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_Metadata) == 0x000008, "Wrong alignment on FirebaseUser_Metadata");
static_assert(sizeof(FirebaseUser_Metadata) == 0x000010, "Wrong size on FirebaseUser_Metadata");
static_assert(offsetof(FirebaseUser_Metadata, ReturnValue) == 0x000000, "Member 'FirebaseUser_Metadata::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.provider_data
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUser_Provider_data final
{
public:
	TArray<class UFirebaseUserInfoInterface*>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_Provider_data) == 0x000008, "Wrong alignment on FirebaseUser_Provider_data");
static_assert(sizeof(FirebaseUser_Provider_data) == 0x000010, "Wrong size on FirebaseUser_Provider_data");
static_assert(offsetof(FirebaseUser_Provider_data, ReturnValue) == 0x000000, "Member 'FirebaseUser_Provider_data::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.Reauthenticate
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUser_Reauthenticate final
{
public:
	class UFirebaseCredential*                    Crdenntial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_Reauthenticate) == 0x000008, "Wrong alignment on FirebaseUser_Reauthenticate");
static_assert(sizeof(FirebaseUser_Reauthenticate) == 0x000010, "Wrong size on FirebaseUser_Reauthenticate");
static_assert(offsetof(FirebaseUser_Reauthenticate, Crdenntial) == 0x000000, "Member 'FirebaseUser_Reauthenticate::Crdenntial' has a wrong offset!");
static_assert(offsetof(FirebaseUser_Reauthenticate, ReturnValue) == 0x000008, "Member 'FirebaseUser_Reauthenticate::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.ReauthenticateAndRetrieveData
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUser_ReauthenticateAndRetrieveData final
{
public:
	class UFirebaseCredential*                    Crdenntial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureSignInResult*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_ReauthenticateAndRetrieveData) == 0x000008, "Wrong alignment on FirebaseUser_ReauthenticateAndRetrieveData");
static_assert(sizeof(FirebaseUser_ReauthenticateAndRetrieveData) == 0x000010, "Wrong size on FirebaseUser_ReauthenticateAndRetrieveData");
static_assert(offsetof(FirebaseUser_ReauthenticateAndRetrieveData, Crdenntial) == 0x000000, "Member 'FirebaseUser_ReauthenticateAndRetrieveData::Crdenntial' has a wrong offset!");
static_assert(offsetof(FirebaseUser_ReauthenticateAndRetrieveData, ReturnValue) == 0x000008, "Member 'FirebaseUser_ReauthenticateAndRetrieveData::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.ReauthenticateAndRetrieveDataLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_ReauthenticateAndRetrieveDataLastResult final
{
public:
	class UFirebaseFutureSignInResult*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_ReauthenticateAndRetrieveDataLastResult) == 0x000008, "Wrong alignment on FirebaseUser_ReauthenticateAndRetrieveDataLastResult");
static_assert(sizeof(FirebaseUser_ReauthenticateAndRetrieveDataLastResult) == 0x000008, "Wrong size on FirebaseUser_ReauthenticateAndRetrieveDataLastResult");
static_assert(offsetof(FirebaseUser_ReauthenticateAndRetrieveDataLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_ReauthenticateAndRetrieveDataLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.ReauthenticateLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_ReauthenticateLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_ReauthenticateLastResult) == 0x000008, "Wrong alignment on FirebaseUser_ReauthenticateLastResult");
static_assert(sizeof(FirebaseUser_ReauthenticateLastResult) == 0x000008, "Wrong size on FirebaseUser_ReauthenticateLastResult");
static_assert(offsetof(FirebaseUser_ReauthenticateLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_ReauthenticateLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.Reload
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_Reload final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_Reload) == 0x000008, "Wrong alignment on FirebaseUser_Reload");
static_assert(sizeof(FirebaseUser_Reload) == 0x000008, "Wrong size on FirebaseUser_Reload");
static_assert(offsetof(FirebaseUser_Reload, ReturnValue) == 0x000000, "Member 'FirebaseUser_Reload::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.ReloadLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_ReloadLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_ReloadLastResult) == 0x000008, "Wrong alignment on FirebaseUser_ReloadLastResult");
static_assert(sizeof(FirebaseUser_ReloadLastResult) == 0x000008, "Wrong size on FirebaseUser_ReloadLastResult");
static_assert(offsetof(FirebaseUser_ReloadLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_ReloadLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.SendEmailVerification
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_SendEmailVerification final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_SendEmailVerification) == 0x000008, "Wrong alignment on FirebaseUser_SendEmailVerification");
static_assert(sizeof(FirebaseUser_SendEmailVerification) == 0x000008, "Wrong size on FirebaseUser_SendEmailVerification");
static_assert(offsetof(FirebaseUser_SendEmailVerification, ReturnValue) == 0x000000, "Member 'FirebaseUser_SendEmailVerification::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.SendEmailVerificationLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_SendEmailVerificationLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_SendEmailVerificationLastResult) == 0x000008, "Wrong alignment on FirebaseUser_SendEmailVerificationLastResult");
static_assert(sizeof(FirebaseUser_SendEmailVerificationLastResult) == 0x000008, "Wrong size on FirebaseUser_SendEmailVerificationLastResult");
static_assert(offsetof(FirebaseUser_SendEmailVerificationLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_SendEmailVerificationLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.Unlink
// 0x0018 (0x0018 - 0x0000)
struct FirebaseUser_Unlink final
{
public:
	class FString                                 Provider;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_Unlink) == 0x000008, "Wrong alignment on FirebaseUser_Unlink");
static_assert(sizeof(FirebaseUser_Unlink) == 0x000018, "Wrong size on FirebaseUser_Unlink");
static_assert(offsetof(FirebaseUser_Unlink, Provider) == 0x000000, "Member 'FirebaseUser_Unlink::Provider' has a wrong offset!");
static_assert(offsetof(FirebaseUser_Unlink, ReturnValue) == 0x000010, "Member 'FirebaseUser_Unlink::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.UpdateEmail
// 0x0018 (0x0018 - 0x0000)
struct FirebaseUser_UpdateEmail final
{
public:
	class FString                                 Email_0;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_UpdateEmail) == 0x000008, "Wrong alignment on FirebaseUser_UpdateEmail");
static_assert(sizeof(FirebaseUser_UpdateEmail) == 0x000018, "Wrong size on FirebaseUser_UpdateEmail");
static_assert(offsetof(FirebaseUser_UpdateEmail, Email_0) == 0x000000, "Member 'FirebaseUser_UpdateEmail::Email_0' has a wrong offset!");
static_assert(offsetof(FirebaseUser_UpdateEmail, ReturnValue) == 0x000010, "Member 'FirebaseUser_UpdateEmail::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.UpdateEmailLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_UpdateEmailLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_UpdateEmailLastResult) == 0x000008, "Wrong alignment on FirebaseUser_UpdateEmailLastResult");
static_assert(sizeof(FirebaseUser_UpdateEmailLastResult) == 0x000008, "Wrong size on FirebaseUser_UpdateEmailLastResult");
static_assert(offsetof(FirebaseUser_UpdateEmailLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_UpdateEmailLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.UpdatePassword
// 0x0018 (0x0018 - 0x0000)
struct FirebaseUser_UpdatePassword final
{
public:
	class FString                                 Passwd;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_UpdatePassword) == 0x000008, "Wrong alignment on FirebaseUser_UpdatePassword");
static_assert(sizeof(FirebaseUser_UpdatePassword) == 0x000018, "Wrong size on FirebaseUser_UpdatePassword");
static_assert(offsetof(FirebaseUser_UpdatePassword, Passwd) == 0x000000, "Member 'FirebaseUser_UpdatePassword::Passwd' has a wrong offset!");
static_assert(offsetof(FirebaseUser_UpdatePassword, ReturnValue) == 0x000010, "Member 'FirebaseUser_UpdatePassword::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.UpdatePasswordLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_UpdatePasswordLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_UpdatePasswordLastResult) == 0x000008, "Wrong alignment on FirebaseUser_UpdatePasswordLastResult");
static_assert(sizeof(FirebaseUser_UpdatePasswordLastResult) == 0x000008, "Wrong size on FirebaseUser_UpdatePasswordLastResult");
static_assert(offsetof(FirebaseUser_UpdatePasswordLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_UpdatePasswordLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.UpdatePhoneNumberCredential
// 0x0010 (0x0010 - 0x0000)
struct FirebaseUser_UpdatePhoneNumberCredential final
{
public:
	class UFirebaseCredential*                    Crdenntial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_UpdatePhoneNumberCredential) == 0x000008, "Wrong alignment on FirebaseUser_UpdatePhoneNumberCredential");
static_assert(sizeof(FirebaseUser_UpdatePhoneNumberCredential) == 0x000010, "Wrong size on FirebaseUser_UpdatePhoneNumberCredential");
static_assert(offsetof(FirebaseUser_UpdatePhoneNumberCredential, Crdenntial) == 0x000000, "Member 'FirebaseUser_UpdatePhoneNumberCredential::Crdenntial' has a wrong offset!");
static_assert(offsetof(FirebaseUser_UpdatePhoneNumberCredential, ReturnValue) == 0x000008, "Member 'FirebaseUser_UpdatePhoneNumberCredential::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.UpdatePhoneNumberCredentialLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_UpdatePhoneNumberCredentialLastResult final
{
public:
	class UFirebaseFutureUser*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_UpdatePhoneNumberCredentialLastResult) == 0x000008, "Wrong alignment on FirebaseUser_UpdatePhoneNumberCredentialLastResult");
static_assert(sizeof(FirebaseUser_UpdatePhoneNumberCredentialLastResult) == 0x000008, "Wrong size on FirebaseUser_UpdatePhoneNumberCredentialLastResult");
static_assert(offsetof(FirebaseUser_UpdatePhoneNumberCredentialLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_UpdatePhoneNumberCredentialLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.UpdateUserProfile
// 0x0028 (0x0028 - 0x0000)
struct FirebaseUser_UpdateUserProfile final
{
public:
	struct FUserProfile                           Profile;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_UpdateUserProfile) == 0x000008, "Wrong alignment on FirebaseUser_UpdateUserProfile");
static_assert(sizeof(FirebaseUser_UpdateUserProfile) == 0x000028, "Wrong size on FirebaseUser_UpdateUserProfile");
static_assert(offsetof(FirebaseUser_UpdateUserProfile, Profile) == 0x000000, "Member 'FirebaseUser_UpdateUserProfile::Profile' has a wrong offset!");
static_assert(offsetof(FirebaseUser_UpdateUserProfile, ReturnValue) == 0x000020, "Member 'FirebaseUser_UpdateUserProfile::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseUser.UpdateUserProfileLastResult
// 0x0008 (0x0008 - 0x0000)
struct FirebaseUser_UpdateUserProfileLastResult final
{
public:
	class UFirebaseFutureVoid*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseUser_UpdateUserProfileLastResult) == 0x000008, "Wrong alignment on FirebaseUser_UpdateUserProfileLastResult");
static_assert(sizeof(FirebaseUser_UpdateUserProfileLastResult) == 0x000008, "Wrong size on FirebaseUser_UpdateUserProfileLastResult");
static_assert(offsetof(FirebaseUser_UpdateUserProfileLastResult, ReturnValue) == 0x000000, "Member 'FirebaseUser_UpdateUserProfileLastResult::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseValueListener.RunValueListener
// 0x0010 (0x0010 - 0x0000)
struct FirebaseValueListener_RunValueListener final
{
public:
	class UFirebaseValueListener*                 Listener;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseValueListener*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseValueListener_RunValueListener) == 0x000008, "Wrong alignment on FirebaseValueListener_RunValueListener");
static_assert(sizeof(FirebaseValueListener_RunValueListener) == 0x000010, "Wrong size on FirebaseValueListener_RunValueListener");
static_assert(offsetof(FirebaseValueListener_RunValueListener, Listener) == 0x000000, "Member 'FirebaseValueListener_RunValueListener::Listener' has a wrong offset!");
static_assert(offsetof(FirebaseValueListener_RunValueListener, ReturnValue) == 0x000008, "Member 'FirebaseValueListener_RunValueListener::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseVariant.CreateVariantBool
// 0x0010 (0x0010 - 0x0000)
struct FirebaseVariant_CreateVariantBool final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirebaseVariant*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseVariant_CreateVariantBool) == 0x000008, "Wrong alignment on FirebaseVariant_CreateVariantBool");
static_assert(sizeof(FirebaseVariant_CreateVariantBool) == 0x000010, "Wrong size on FirebaseVariant_CreateVariantBool");
static_assert(offsetof(FirebaseVariant_CreateVariantBool, Value) == 0x000000, "Member 'FirebaseVariant_CreateVariantBool::Value' has a wrong offset!");
static_assert(offsetof(FirebaseVariant_CreateVariantBool, ReturnValue) == 0x000008, "Member 'FirebaseVariant_CreateVariantBool::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseVariant.CreateVariantFloat
// 0x0010 (0x0010 - 0x0000)
struct FirebaseVariant_CreateVariantFloat final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirebaseVariant*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseVariant_CreateVariantFloat) == 0x000008, "Wrong alignment on FirebaseVariant_CreateVariantFloat");
static_assert(sizeof(FirebaseVariant_CreateVariantFloat) == 0x000010, "Wrong size on FirebaseVariant_CreateVariantFloat");
static_assert(offsetof(FirebaseVariant_CreateVariantFloat, Value) == 0x000000, "Member 'FirebaseVariant_CreateVariantFloat::Value' has a wrong offset!");
static_assert(offsetof(FirebaseVariant_CreateVariantFloat, ReturnValue) == 0x000008, "Member 'FirebaseVariant_CreateVariantFloat::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseVariant.CreateVariantInt64
// 0x0010 (0x0010 - 0x0000)
struct FirebaseVariant_CreateVariantInt64 final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseVariant*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseVariant_CreateVariantInt64) == 0x000008, "Wrong alignment on FirebaseVariant_CreateVariantInt64");
static_assert(sizeof(FirebaseVariant_CreateVariantInt64) == 0x000010, "Wrong size on FirebaseVariant_CreateVariantInt64");
static_assert(offsetof(FirebaseVariant_CreateVariantInt64, Value) == 0x000000, "Member 'FirebaseVariant_CreateVariantInt64::Value' has a wrong offset!");
static_assert(offsetof(FirebaseVariant_CreateVariantInt64, ReturnValue) == 0x000008, "Member 'FirebaseVariant_CreateVariantInt64::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseVariant.CreateVariantMap
// 0x0058 (0x0058 - 0x0000)
struct FirebaseVariant_CreateVariantMap final
{
public:
	TMap<class FString, class UFirebaseVariant*>  Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirebaseVariant*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseVariant_CreateVariantMap) == 0x000008, "Wrong alignment on FirebaseVariant_CreateVariantMap");
static_assert(sizeof(FirebaseVariant_CreateVariantMap) == 0x000058, "Wrong size on FirebaseVariant_CreateVariantMap");
static_assert(offsetof(FirebaseVariant_CreateVariantMap, Value) == 0x000000, "Member 'FirebaseVariant_CreateVariantMap::Value' has a wrong offset!");
static_assert(offsetof(FirebaseVariant_CreateVariantMap, ReturnValue) == 0x000050, "Member 'FirebaseVariant_CreateVariantMap::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseVariant.CreateVariantString
// 0x0018 (0x0018 - 0x0000)
struct FirebaseVariant_CreateVariantString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseVariant*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseVariant_CreateVariantString) == 0x000008, "Wrong alignment on FirebaseVariant_CreateVariantString");
static_assert(sizeof(FirebaseVariant_CreateVariantString) == 0x000018, "Wrong size on FirebaseVariant_CreateVariantString");
static_assert(offsetof(FirebaseVariant_CreateVariantString, Value) == 0x000000, "Member 'FirebaseVariant_CreateVariantString::Value' has a wrong offset!");
static_assert(offsetof(FirebaseVariant_CreateVariantString, ReturnValue) == 0x000010, "Member 'FirebaseVariant_CreateVariantString::ReturnValue' has a wrong offset!");

// Function EasyFirebase.FirebaseVariant.CreateVariantVector
// 0x0018 (0x0018 - 0x0000)
struct FirebaseVariant_CreateVariantVector final
{
public:
	TArray<class UFirebaseVariant*>               Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirebaseVariant*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseVariant_CreateVariantVector) == 0x000008, "Wrong alignment on FirebaseVariant_CreateVariantVector");
static_assert(sizeof(FirebaseVariant_CreateVariantVector) == 0x000018, "Wrong size on FirebaseVariant_CreateVariantVector");
static_assert(offsetof(FirebaseVariant_CreateVariantVector, Value) == 0x000000, "Member 'FirebaseVariant_CreateVariantVector::Value' has a wrong offset!");
static_assert(offsetof(FirebaseVariant_CreateVariantVector, ReturnValue) == 0x000010, "Member 'FirebaseVariant_CreateVariantVector::ReturnValue' has a wrong offset!");

}

