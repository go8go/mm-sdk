#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemExtendedFacebook

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "UMG_classes.hpp"
#include "OnlineSubsystemExtendedFacebook_structs.hpp"


namespace SDK
{

// Class OnlineSubsystemExtendedFacebook.AppInvite
// 0x0028 (0x0058 - 0x0030)
class UAppInvite final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAppInvite* AppInvite(const class FString& AppLinkURL, const class FString& PreviewImageURL);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppInvite">();
	}
	static class UAppInvite* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppInvite>();
	}
};
static_assert(alignof(UAppInvite) == 0x000008, "Wrong alignment on UAppInvite");
static_assert(sizeof(UAppInvite) == 0x000058, "Wrong size on UAppInvite");
static_assert(offsetof(UAppInvite, OnSuccess) == 0x000030, "Member 'UAppInvite::OnSuccess' has a wrong offset!");
static_assert(offsetof(UAppInvite, OnFail) == 0x000040, "Member 'UAppInvite::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.FacebookLogin
// 0x0028 (0x0058 - 0x0030)
class UFacebookLogin final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFacebookLogin* FacebookLogin();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FacebookLogin">();
	}
	static class UFacebookLogin* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFacebookLogin>();
	}
};
static_assert(alignof(UFacebookLogin) == 0x000008, "Wrong alignment on UFacebookLogin");
static_assert(sizeof(UFacebookLogin) == 0x000058, "Wrong size on UFacebookLogin");
static_assert(offsetof(UFacebookLogin, OnSuccess) == 0x000030, "Member 'UFacebookLogin::OnSuccess' has a wrong offset!");
static_assert(offsetof(UFacebookLogin, OnFail) == 0x000040, "Member 'UFacebookLogin::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.FacebookLogout
// 0x0028 (0x0058 - 0x0030)
class UFacebookLogout final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFacebookLogout* FacebookLogout();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FacebookLogout">();
	}
	static class UFacebookLogout* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFacebookLogout>();
	}
};
static_assert(alignof(UFacebookLogout) == 0x000008, "Wrong alignment on UFacebookLogout");
static_assert(sizeof(UFacebookLogout) == 0x000058, "Wrong size on UFacebookLogout");
static_assert(offsetof(UFacebookLogout, OnSuccess) == 0x000030, "Member 'UFacebookLogout::OnSuccess' has a wrong offset!");
static_assert(offsetof(UFacebookLogout, OnFail) == 0x000040, "Member 'UFacebookLogout::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.FacebookQueryUserInfo
// 0x0028 (0x0058 - 0x0030)
class UFacebookQueryUserInfo final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFacebookQueryUserInfo* FacebookQueryUserInfo(const class FString& UserID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FacebookQueryUserInfo">();
	}
	static class UFacebookQueryUserInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFacebookQueryUserInfo>();
	}
};
static_assert(alignof(UFacebookQueryUserInfo) == 0x000008, "Wrong alignment on UFacebookQueryUserInfo");
static_assert(sizeof(UFacebookQueryUserInfo) == 0x000058, "Wrong size on UFacebookQueryUserInfo");
static_assert(offsetof(UFacebookQueryUserInfo, OnSuccess) == 0x000030, "Member 'UFacebookQueryUserInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(UFacebookQueryUserInfo, OnFail) == 0x000040, "Member 'UFacebookQueryUserInfo::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.InviteFriends
// 0x0020 (0x0050 - 0x0030)
class UInviteFriends final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UInviteFriends* InviteFriends(const TArray<class FString>& FriendsIds);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InviteFriends">();
	}
	static class UInviteFriends* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInviteFriends>();
	}
};
static_assert(alignof(UInviteFriends) == 0x000008, "Wrong alignment on UInviteFriends");
static_assert(sizeof(UInviteFriends) == 0x000050, "Wrong size on UInviteFriends");
static_assert(offsetof(UInviteFriends, OnSuccess) == 0x000030, "Member 'UInviteFriends::OnSuccess' has a wrong offset!");
static_assert(offsetof(UInviteFriends, OnFail) == 0x000040, "Member 'UInviteFriends::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.OnlineGraphRequestExtendedFacebook
// 0x0010 (0x0038 - 0x0028)
class UOnlineGraphRequestExtendedFacebook final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineGraphRequestExtendedFacebook">();
	}
	static class UOnlineGraphRequestExtendedFacebook* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineGraphRequestExtendedFacebook>();
	}
};
static_assert(alignof(UOnlineGraphRequestExtendedFacebook) == 0x000008, "Wrong alignment on UOnlineGraphRequestExtendedFacebook");
static_assert(sizeof(UOnlineGraphRequestExtendedFacebook) == 0x000038, "Wrong size on UOnlineGraphRequestExtendedFacebook");

// Class OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UOnlineSubsystemExtendedFacebookBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ChangeActiveWidget(class UCanvasPanel* ActiveWidget);
	static bool CheckIfPlayerLoggedIn();
	static class FString GetAccessToken();
	static bool GetAllCachedFacebookAchievements(TArray<struct FFacebookAchievement>* Achievements);
	static bool GetAllCachedFacebookFriends(TArray<struct FFacebookFriend>* Friends);
	static bool GetAllCachedFacebookUsersInfo(TArray<struct FFacebookProfile>* Users);
	static struct FFacebookFriend GetCachedFacebookFriend(const class FString& FriendId);
	static struct FFacebookProfile GetCachedFacebookUserInfo(const class FString& UserID);
	static class FString GetUserId();
	static class FString GetUsername();
	static void ResetActiveWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineSubsystemExtendedFacebookBlueprintLibrary">();
	}
	static class UOnlineSubsystemExtendedFacebookBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineSubsystemExtendedFacebookBlueprintLibrary>();
	}
};
static_assert(alignof(UOnlineSubsystemExtendedFacebookBlueprintLibrary) == 0x000008, "Wrong alignment on UOnlineSubsystemExtendedFacebookBlueprintLibrary");
static_assert(sizeof(UOnlineSubsystemExtendedFacebookBlueprintLibrary) == 0x000028, "Wrong size on UOnlineSubsystemExtendedFacebookBlueprintLibrary");

// Class OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookSettings
// 0x0058 (0x0080 - 0x0028)
class UOnlineSubsystemExtendedFacebookSettings final : public UObject
{
public:
	class FString                                 FacebookAppId;                                     // 0x0028(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FacebookDisplayName;                               // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InitLoginPermissions;                              // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FriendsInviteMessage;                              // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FriendsQueryFields;                                // 0x0068(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForcePortraitMode;                                // 0x0078(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceWebBrowserModeAndroid;                       // 0x0079(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceWebBrowserModeIOS;                           // 0x007A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineSubsystemExtendedFacebookSettings">();
	}
	static class UOnlineSubsystemExtendedFacebookSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineSubsystemExtendedFacebookSettings>();
	}
};
static_assert(alignof(UOnlineSubsystemExtendedFacebookSettings) == 0x000008, "Wrong alignment on UOnlineSubsystemExtendedFacebookSettings");
static_assert(sizeof(UOnlineSubsystemExtendedFacebookSettings) == 0x000080, "Wrong size on UOnlineSubsystemExtendedFacebookSettings");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookSettings, FacebookAppId) == 0x000028, "Member 'UOnlineSubsystemExtendedFacebookSettings::FacebookAppId' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookSettings, FacebookDisplayName) == 0x000038, "Member 'UOnlineSubsystemExtendedFacebookSettings::FacebookDisplayName' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookSettings, InitLoginPermissions) == 0x000048, "Member 'UOnlineSubsystemExtendedFacebookSettings::InitLoginPermissions' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookSettings, FriendsInviteMessage) == 0x000058, "Member 'UOnlineSubsystemExtendedFacebookSettings::FriendsInviteMessage' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookSettings, FriendsQueryFields) == 0x000068, "Member 'UOnlineSubsystemExtendedFacebookSettings::FriendsQueryFields' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookSettings, bForcePortraitMode) == 0x000078, "Member 'UOnlineSubsystemExtendedFacebookSettings::bForcePortraitMode' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookSettings, bForceWebBrowserModeAndroid) == 0x000079, "Member 'UOnlineSubsystemExtendedFacebookSettings::bForceWebBrowserModeAndroid' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookSettings, bForceWebBrowserModeIOS) == 0x00007A, "Member 'UOnlineSubsystemExtendedFacebookSettings::bForceWebBrowserModeIOS' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWebBrowser
// 0x0038 (0x0140 - 0x0108)
class UOnlineSubsystemExtendedFacebookWebBrowser final : public UWidget
{
public:
	UMulticastInlineDelegateProperty_             OnUrlChanged;                                      // 0x0108(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 InitialURL;                                        // 0x0118(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsTransparency;                             // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_129[0x17];                                     // 0x0129(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnableIME();
	void LoadURL(const class FString& NewURL);
	void OnUrlChanged__DelegateSignature(const class FText& Text);
	void SetFocusToBrowser();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineSubsystemExtendedFacebookWebBrowser">();
	}
	static class UOnlineSubsystemExtendedFacebookWebBrowser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineSubsystemExtendedFacebookWebBrowser>();
	}
};
static_assert(alignof(UOnlineSubsystemExtendedFacebookWebBrowser) == 0x000008, "Wrong alignment on UOnlineSubsystemExtendedFacebookWebBrowser");
static_assert(sizeof(UOnlineSubsystemExtendedFacebookWebBrowser) == 0x000140, "Wrong size on UOnlineSubsystemExtendedFacebookWebBrowser");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookWebBrowser, OnUrlChanged) == 0x000108, "Member 'UOnlineSubsystemExtendedFacebookWebBrowser::OnUrlChanged' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookWebBrowser, InitialURL) == 0x000118, "Member 'UOnlineSubsystemExtendedFacebookWebBrowser::InitialURL' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookWebBrowser, bSupportsTransparency) == 0x000128, "Member 'UOnlineSubsystemExtendedFacebookWebBrowser::bSupportsTransparency' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.OnlineSubsystemExtendedFacebookWidget
// 0x0038 (0x0278 - 0x0240)
class UOnlineSubsystemExtendedFacebookWidget final : public UUserWidget
{
public:
	class UOnlineSubsystemExtendedFacebookWebBrowser* WebBrowser;                                        // 0x0240(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_248[0x20];                                     // 0x0248(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                M_Btn_Close;                                       // 0x0268(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_270[0x8];                                      // 0x0270(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnableCustomStyle(bool bEnable);
	void HandleOnUrlChanged(const class FText& Text);
	void OnClickBackButton();
	void OnClickClose();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineSubsystemExtendedFacebookWidget">();
	}
	static class UOnlineSubsystemExtendedFacebookWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineSubsystemExtendedFacebookWidget>();
	}
};
static_assert(alignof(UOnlineSubsystemExtendedFacebookWidget) == 0x000008, "Wrong alignment on UOnlineSubsystemExtendedFacebookWidget");
static_assert(sizeof(UOnlineSubsystemExtendedFacebookWidget) == 0x000278, "Wrong size on UOnlineSubsystemExtendedFacebookWidget");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookWidget, WebBrowser) == 0x000240, "Member 'UOnlineSubsystemExtendedFacebookWidget::WebBrowser' has a wrong offset!");
static_assert(offsetof(UOnlineSubsystemExtendedFacebookWidget, M_Btn_Close) == 0x000268, "Member 'UOnlineSubsystemExtendedFacebookWidget::M_Btn_Close' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.OpenGraphPost
// 0x0028 (0x0058 - 0x0030)
class UOpenGraphPost final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UOpenGraphPost* OpenGraphPost(const class FString& GraphPath, const TArray<struct FFacebookOpenGraphParameter>& OpenGraphParameters, bool ShareOnTimeline);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OpenGraphPost">();
	}
	static class UOpenGraphPost* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOpenGraphPost>();
	}
};
static_assert(alignof(UOpenGraphPost) == 0x000008, "Wrong alignment on UOpenGraphPost");
static_assert(sizeof(UOpenGraphPost) == 0x000058, "Wrong size on UOpenGraphPost");
static_assert(offsetof(UOpenGraphPost, OnSuccess) == 0x000030, "Member 'UOpenGraphPost::OnSuccess' has a wrong offset!");
static_assert(offsetof(UOpenGraphPost, OnFail) == 0x000040, "Member 'UOpenGraphPost::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.QueryAchievements
// 0x0020 (0x0050 - 0x0030)
class UQueryAchievements final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UQueryAchievements* QueryAchievements();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"QueryAchievements">();
	}
	static class UQueryAchievements* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQueryAchievements>();
	}
};
static_assert(alignof(UQueryAchievements) == 0x000008, "Wrong alignment on UQueryAchievements");
static_assert(sizeof(UQueryAchievements) == 0x000050, "Wrong size on UQueryAchievements");
static_assert(offsetof(UQueryAchievements, OnSuccess) == 0x000030, "Member 'UQueryAchievements::OnSuccess' has a wrong offset!");
static_assert(offsetof(UQueryAchievements, OnFail) == 0x000040, "Member 'UQueryAchievements::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.QueryFriends
// 0x0020 (0x0050 - 0x0030)
class UQueryFriends final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UQueryFriends* QueryFriends();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"QueryFriends">();
	}
	static class UQueryFriends* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQueryFriends>();
	}
};
static_assert(alignof(UQueryFriends) == 0x000008, "Wrong alignment on UQueryFriends");
static_assert(sizeof(UQueryFriends) == 0x000050, "Wrong size on UQueryFriends");
static_assert(offsetof(UQueryFriends, OnSuccess) == 0x000030, "Member 'UQueryFriends::OnSuccess' has a wrong offset!");
static_assert(offsetof(UQueryFriends, OnFail) == 0x000040, "Member 'UQueryFriends::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.QueryInvitableFriends
// 0x0028 (0x0058 - 0x0030)
class UQueryInvitableFriends final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UQueryInvitableFriends* QueryInvitableFriends(int32 Limit);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"QueryInvitableFriends">();
	}
	static class UQueryInvitableFriends* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQueryInvitableFriends>();
	}
};
static_assert(alignof(UQueryInvitableFriends) == 0x000008, "Wrong alignment on UQueryInvitableFriends");
static_assert(sizeof(UQueryInvitableFriends) == 0x000058, "Wrong size on UQueryInvitableFriends");
static_assert(offsetof(UQueryInvitableFriends, OnSuccess) == 0x000030, "Member 'UQueryInvitableFriends::OnSuccess' has a wrong offset!");
static_assert(offsetof(UQueryInvitableFriends, OnFail) == 0x000040, "Member 'UQueryInvitableFriends::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.ReadLeaderboard
// 0x0038 (0x0068 - 0x0030)
class UReadLeaderboard final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UReadLeaderboard* ReadLeaderboard(bool ReadOnlyMe);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReadLeaderboard">();
	}
	static class UReadLeaderboard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadLeaderboard>();
	}
};
static_assert(alignof(UReadLeaderboard) == 0x000008, "Wrong alignment on UReadLeaderboard");
static_assert(sizeof(UReadLeaderboard) == 0x000068, "Wrong size on UReadLeaderboard");
static_assert(offsetof(UReadLeaderboard, OnSuccess) == 0x000030, "Member 'UReadLeaderboard::OnSuccess' has a wrong offset!");
static_assert(offsetof(UReadLeaderboard, OnFail) == 0x000040, "Member 'UReadLeaderboard::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.RequestNewPublishPermissions
// 0x0028 (0x0058 - 0x0030)
class URequestNewPublishPermissions final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class URequestNewPublishPermissions* RequestNewPublishPermissions(const TArray<class FString>& PermissionsSet, EPermissionsPrivacy PermissionsPrivacy);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RequestNewPublishPermissions">();
	}
	static class URequestNewPublishPermissions* GetDefaultObj()
	{
		return GetDefaultObjImpl<URequestNewPublishPermissions>();
	}
};
static_assert(alignof(URequestNewPublishPermissions) == 0x000008, "Wrong alignment on URequestNewPublishPermissions");
static_assert(sizeof(URequestNewPublishPermissions) == 0x000058, "Wrong size on URequestNewPublishPermissions");
static_assert(offsetof(URequestNewPublishPermissions, OnSuccess) == 0x000030, "Member 'URequestNewPublishPermissions::OnSuccess' has a wrong offset!");
static_assert(offsetof(URequestNewPublishPermissions, OnFail) == 0x000040, "Member 'URequestNewPublishPermissions::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.RequestNewReadPermissions
// 0x0028 (0x0058 - 0x0030)
class URequestNewReadPermissions final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class URequestNewReadPermissions* RequestNewReadPermissions(const TArray<class FString>& PermissionsSet);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RequestNewReadPermissions">();
	}
	static class URequestNewReadPermissions* GetDefaultObj()
	{
		return GetDefaultObjImpl<URequestNewReadPermissions>();
	}
};
static_assert(alignof(URequestNewReadPermissions) == 0x000008, "Wrong alignment on URequestNewReadPermissions");
static_assert(sizeof(URequestNewReadPermissions) == 0x000058, "Wrong size on URequestNewReadPermissions");
static_assert(offsetof(URequestNewReadPermissions, OnSuccess) == 0x000030, "Member 'URequestNewReadPermissions::OnSuccess' has a wrong offset!");
static_assert(offsetof(URequestNewReadPermissions, OnFail) == 0x000040, "Member 'URequestNewReadPermissions::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.ShareLinkContent
// 0x0028 (0x0058 - 0x0030)
class UShareLinkContent final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UShareLinkContent* ShareLinkContent(const struct FFacebookShareLinkContent& ShareParameter);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShareLinkContent">();
	}
	static class UShareLinkContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShareLinkContent>();
	}
};
static_assert(alignof(UShareLinkContent) == 0x000008, "Wrong alignment on UShareLinkContent");
static_assert(sizeof(UShareLinkContent) == 0x000058, "Wrong size on UShareLinkContent");
static_assert(offsetof(UShareLinkContent, OnSuccess) == 0x000030, "Member 'UShareLinkContent::OnSuccess' has a wrong offset!");
static_assert(offsetof(UShareLinkContent, OnFail) == 0x000040, "Member 'UShareLinkContent::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.SharePhotoContent
// 0x0028 (0x0058 - 0x0030)
class USharePhotoContent final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USharePhotoContent* SharePhotoContent(const struct FFacebookSharePhotoContent& ShareParameter);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SharePhotoContent">();
	}
	static class USharePhotoContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USharePhotoContent>();
	}
};
static_assert(alignof(USharePhotoContent) == 0x000008, "Wrong alignment on USharePhotoContent");
static_assert(sizeof(USharePhotoContent) == 0x000058, "Wrong size on USharePhotoContent");
static_assert(offsetof(USharePhotoContent, OnSuccess) == 0x000030, "Member 'USharePhotoContent::OnSuccess' has a wrong offset!");
static_assert(offsetof(USharePhotoContent, OnFail) == 0x000040, "Member 'USharePhotoContent::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.SharePost
// 0x0028 (0x0058 - 0x0030)
class USharePost final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USharePost* ShareImage(const class FString& Message, const TArray<class FString>& TaggedFriends, class UTexture2D* Image, EFacebookImageFormat ImageFormat);
	static class USharePost* SharePost(const class FString& Message, const TArray<class FString>& TaggedFriends);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SharePost">();
	}
	static class USharePost* GetDefaultObj()
	{
		return GetDefaultObjImpl<USharePost>();
	}
};
static_assert(alignof(USharePost) == 0x000008, "Wrong alignment on USharePost");
static_assert(sizeof(USharePost) == 0x000058, "Wrong size on USharePost");
static_assert(offsetof(USharePost, OnSuccess) == 0x000030, "Member 'USharePost::OnSuccess' has a wrong offset!");
static_assert(offsetof(USharePost, OnFail) == 0x000040, "Member 'USharePost::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.WriteAchievement
// 0x0020 (0x0050 - 0x0030)
class UWriteAchievement final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UWriteAchievement* WriteAchievement(class FName AchievementId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WriteAchievement">();
	}
	static class UWriteAchievement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWriteAchievement>();
	}
};
static_assert(alignof(UWriteAchievement) == 0x000008, "Wrong alignment on UWriteAchievement");
static_assert(sizeof(UWriteAchievement) == 0x000050, "Wrong size on UWriteAchievement");
static_assert(offsetof(UWriteAchievement, OnSuccess) == 0x000030, "Member 'UWriteAchievement::OnSuccess' has a wrong offset!");
static_assert(offsetof(UWriteAchievement, OnFail) == 0x000040, "Member 'UWriteAchievement::OnFail' has a wrong offset!");

// Class OnlineSubsystemExtendedFacebook.WriteAndFlushLeaderboards
// 0x0028 (0x0058 - 0x0030)
class UWriteAndFlushLeaderboards final : public UBlueprintAsyncActionBase
{
public:
	UMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UWriteAndFlushLeaderboards* WriteAndFlushLeaderboards(int32 Score);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WriteAndFlushLeaderboards">();
	}
	static class UWriteAndFlushLeaderboards* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWriteAndFlushLeaderboards>();
	}
};
static_assert(alignof(UWriteAndFlushLeaderboards) == 0x000008, "Wrong alignment on UWriteAndFlushLeaderboards");
static_assert(sizeof(UWriteAndFlushLeaderboards) == 0x000058, "Wrong size on UWriteAndFlushLeaderboards");
static_assert(offsetof(UWriteAndFlushLeaderboards, OnSuccess) == 0x000030, "Member 'UWriteAndFlushLeaderboards::OnSuccess' has a wrong offset!");
static_assert(offsetof(UWriteAndFlushLeaderboards, OnFail) == 0x000040, "Member 'UWriteAndFlushLeaderboards::OnFail' has a wrong offset!");

}

