#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OneStoreIap

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct OneStoreIap.OneStoreIapPurchaseData
// 0x00B0 (0x00B0 - 0x0000)
struct FOneStoreIapPurchaseData final
{
public:
	class FString                                 OrderId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PackageName;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductId;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PurchaseTime;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AcknowlegeState;                                   // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeveloperPayload;                                  // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PurchaseId;                                        // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PurchaseToken;                                     // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BillingKey;                                        // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OriginalPurchaseData;                              // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SignatureData;                                     // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOneStoreIapPurchaseData) == 0x000008, "Wrong alignment on FOneStoreIapPurchaseData");
static_assert(sizeof(FOneStoreIapPurchaseData) == 0x0000B0, "Wrong size on FOneStoreIapPurchaseData");
static_assert(offsetof(FOneStoreIapPurchaseData, OrderId) == 0x000000, "Member 'FOneStoreIapPurchaseData::OrderId' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, PackageName) == 0x000010, "Member 'FOneStoreIapPurchaseData::PackageName' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, ProductId) == 0x000020, "Member 'FOneStoreIapPurchaseData::ProductId' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, PurchaseTime) == 0x000030, "Member 'FOneStoreIapPurchaseData::PurchaseTime' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, AcknowlegeState) == 0x000040, "Member 'FOneStoreIapPurchaseData::AcknowlegeState' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, DeveloperPayload) == 0x000050, "Member 'FOneStoreIapPurchaseData::DeveloperPayload' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, PurchaseId) == 0x000060, "Member 'FOneStoreIapPurchaseData::PurchaseId' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, PurchaseToken) == 0x000070, "Member 'FOneStoreIapPurchaseData::PurchaseToken' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, BillingKey) == 0x000080, "Member 'FOneStoreIapPurchaseData::BillingKey' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, OriginalPurchaseData) == 0x000090, "Member 'FOneStoreIapPurchaseData::OriginalPurchaseData' has a wrong offset!");
static_assert(offsetof(FOneStoreIapPurchaseData, SignatureData) == 0x0000A0, "Member 'FOneStoreIapPurchaseData::SignatureData' has a wrong offset!");

// ScriptStruct OneStoreIap.OneStoreIapProductData
// 0x0070 (0x0070 - 0x0000)
struct FOneStoreIapProductData final
{
public:
	class FString                                 OriginalProductJson;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductId;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Type;                                              // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Price;                                             // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PriceCurrencyCode;                                 // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PriceAmountMicros;                                 // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Title;                                             // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOneStoreIapProductData) == 0x000008, "Wrong alignment on FOneStoreIapProductData");
static_assert(sizeof(FOneStoreIapProductData) == 0x000070, "Wrong size on FOneStoreIapProductData");
static_assert(offsetof(FOneStoreIapProductData, OriginalProductJson) == 0x000000, "Member 'FOneStoreIapProductData::OriginalProductJson' has a wrong offset!");
static_assert(offsetof(FOneStoreIapProductData, ProductId) == 0x000010, "Member 'FOneStoreIapProductData::ProductId' has a wrong offset!");
static_assert(offsetof(FOneStoreIapProductData, Type) == 0x000020, "Member 'FOneStoreIapProductData::Type' has a wrong offset!");
static_assert(offsetof(FOneStoreIapProductData, Price) == 0x000030, "Member 'FOneStoreIapProductData::Price' has a wrong offset!");
static_assert(offsetof(FOneStoreIapProductData, PriceCurrencyCode) == 0x000040, "Member 'FOneStoreIapProductData::PriceCurrencyCode' has a wrong offset!");
static_assert(offsetof(FOneStoreIapProductData, PriceAmountMicros) == 0x000050, "Member 'FOneStoreIapProductData::PriceAmountMicros' has a wrong offset!");
static_assert(offsetof(FOneStoreIapProductData, Title) == 0x000060, "Member 'FOneStoreIapProductData::Title' has a wrong offset!");

}

